{"device":"DESKTOP","widgets":{"Container#0":{"t":"Container","lX":5,"lY":10,"sX":7.7,"sY":10,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"69.94%","height":"82.58%","x":"0.2%","y":"0.9%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Manage Device Models","color":"grey"},"ev":{}},"Container#1":{"t":"Container","lX":15,"lY":55,"sX":6.3,"sY":0.91,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"26.5%","height":"7.57%","x":"0.46%","y":"4.4%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"","color":"white"},"ev":{}},"Image#0":{"t":"Image","lX":650,"lY":65,"sX":1.03,"sY":0.67,"s":"Manage Models","ps":{"enabled":"false","scalingType":"","width":"5.51%","height":"7.01%","x":"25.41%","y":"4.05%"},"ver":"190104c190915","dis":false,"a":{"border width":"0","location":"../images/","image":"device.png?0.7111362038589757","maintain aspect ratio":"false","value clicked":""},"ev":{}},"Container#2":{"t":"Container","lX":15,"lY":155,"sX":7.45,"sY":5,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"31.34%","height":"58.69%","x":"0.29%","y":"12.55%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Edit Model Details","color":"grey"},"ev":{}},"Container#6":{"t":"Container","lX":15,"lY":665,"sX":7.45,"sY":2.6,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"31.34%","height":"21.63%","x":"0.72%","y":"54.29%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Edit Model Custom Attributes","color":"grey"},"ev":{}},"Script#Attribs":{"t":"Scripting","lX":830,"lY":45,"sX":1,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description: Manage the template attribs\r\n * Create Author/Date: Dean Dobson 24/05/20\r\n * Modified Author/Date: \r\n * Version: 1.0\r\n */\r\n\r\n//TODO: Distributor name selected\r\nvar tableName = \"templates\";\r\nvar selectedAttrib = \"\";\r\nvar currAttribs;\r\ninitCurrAttribs();\r\n\r\nfunction initCurrAttribs() {\r\n\tcurrAttribs = {};\r\n\tcurrAttribs.data = {};\r\n\tcurrAttribs.headers = [\"attribute\", \"value\"];\r\n\tcurrAttribs.pk = \"attribute\";\r\n\tcurrAttribs.label = \"sensacollection\";\r\n}\r\n\r\n// Save button pressed\r\nClientEvents.subscribe(\"AttribSave\", async function (value) {\r\n\tcurrAttribs = Script.getState(\"currAttribs\"); // from record load in main script\r\n\t//if (currAttribs === null || currAttribs.value === null) {\r\n\tif (currAttribs === null) {\r\n\t\tinitCurrAttribs();\r\n\t} //else {\r\n\t//\tcurrAttribs = currAttribs.value;\r\n\t//}\r\n\tvar formData = Script.getForm(\"attribs\");\r\n\tselectedAttrib = formData[\"TempAttrib\"];\r\n\tif (typeof selectedAttrib !== \"undefined\" && selectedAttrib !== \"\") {\r\n\t\tcurrAttribs.data[selectedAttrib] = [selectedAttrib, formData[\"TempValue\"]];\r\n\t\tClientEvents.publish(\"TempAttribsDelRows\",\"\");\r\n\t\tClientEvents.publish(\"TempAttribsSetValues\",currAttribs);\r\n\t\tScript.setState(\"currAttribs\", currAttribs); // Share with main script\r\n\t\tClient.status(\"Attribute '\" + selectedAttrib + \"' added.\");\r\n\t\tClient.setDirtyFlag();\r\n\t} else {\r\n\t\tawait Client.alert(\"No attribute has been updated due to no key entered.\", \"Update Key\");\r\n\t}\r\n});\r\n\r\n// Row in table selected event\r\nClientEvents.subscribe(\"SelectedAttrib\", function (selected) {\r\n\tselectedAttrib = Object.keys(selected.value.data)[0];\r\n\tClientEvents.publish(\"KeySetValue\", selectedAttrib);\r\n\tClientEvents.publish(\"ValueSetValue\", selected.value.data[selectedAttrib][1]);\r\n});\r\n\r\n// Delete button\r\nClientEvents.subscribe(\"AttribDelete\", async function () {\r\n\tcurrAttribs = Script.getState(\"currAttribs\");\r\n\tvar formData = Script.getForm(\"attribs\");\r\n\tselectedAttrib = formData[\"TempAttrib\"];\r\n\tif (!(selectedAttrib in currAttribs.data)) {\r\n\t\tvar delKey = selectedAttrib;\r\n\t\tif (delKey === \"\") {\r\n\t\t\tdelKey = \"[nothing]\";\r\n\t\t}\r\n\t\tawait Client.alert(\"The key '\" + delKey + \"' does not exist as a custom attribute. Check key and try again\", \"Delete Key\");\r\n\t} else {\r\n\t\tdelete currAttribs.data[selectedAttrib];\r\n\t\tClientEvents.publish(\"TempAttribsDelRows\",\"\");\r\n\t\tClientEvents.publish(\"TempAttribsSetValues\",currAttribs);\r\n\t\tScript.setState(\"currAttribs\", currAttribs);\r\n\t\tClient.status(\"Attribute '\" + selectedAttrib + \"' deleted.\", \"IMPORTANT\");\r\n\t}\r\n});","import file":"true","file name":"../../js/settings/manage models/modelAttribs.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"clientEvents":{"inputEvents":{"EventButton":{"channel":"ButAttrib/receive value","event":"receive value"}}},"serverEvents":{"inputEvents":{"DBResult":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed"}}}}},"ScriptManage":{"t":"Scripting","lX":845,"lY":170,"sX":1,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"7.36%","height":"14.97%","x":"56.51%","y":"5.99%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description: Manage the template data\r\n * Create Author/Date: Dean Dobson 24/05/20\r\n * Modified Author/Date: DD 27/9/20\r\n * Version: 1.3 Adjusted for mapped dropdown & accountID\r\n */\r\n\r\n//TODO: get distributor name, update logic for new distributor selected\r\nvar distribs = [];\r\nvar selectedDistrib = \"\";\r\nvar tableName = \"_models\";\r\nvar accMap = {};\r\nvar selectedRec = \"\";\r\nvar currList = [];\r\nvar imageName;\r\nvar imageBin;\r\nvar accountCollection = null;\r\n\r\nScript.on(\"init\", function() {\r\n\tClient.setScreenVisible(\"New User\", false);\r\n\tClient.setScreenVisible(\"New Account\", false);\r\n\tClient.setScreenVisible(\"Account Details\", false);\r\n\tClient.setScreenVisible(\"User Details\", false);\r\n});\r\n\r\n/**\r\n * Initialise script state (run once at startup)\r\n */\r\nScript.on('load', function() {\r\n\t// Get the distributor and model names\r\n\tClient.getTenants(function (data) {\r\n\t\tdistribs = data.value;\r\n\t\tselectedDistrib = distribs[0];\r\n\t\tClientEvents.publish(\"DistribNameList\", distribs);    // Update the distributor name dropdown\r\n\t\tupdateModelDrop();\r\n\t});\r\n\t\r\n\t// Get the account details\r\n\tDatabase.readRecords(\"directory\", \"account\", function(eventData) {\r\n\t\taccountCollection = SensaCollection.load(eventData.value);\r\n\t\tvar accountCol = accountCollection.filter([\"accountid\", \"accountname\"]);\r\n\t\taccountCol.setColumns([\"value\", \"text\"]);\r\n\t\taccMap = accountCol;   // Save for mapping ID to name later\r\n\t\tvar accountDrop = Script.getWidget(\"TempAccount\");\r\n\t\taccountDrop.receiveTextValues(accountCol);\r\n\t});\r\n});\r\n\r\n// Clear form\r\nClientEvents.subscribe(\"ModelClear\", async function (selected) {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\t\tlet res = await Client.confirm(\"OK\",\"Confirm Clear Record\",\"Items on this form have changed, please confirm that you want to clear the fields and ignore changes.\", { confirmText: \"Clear\"});\r\n\t\t\tif (res) {\r\n\t\t\t\tScript.clearForm(\"devtemplate\");\r\n\t\t\t}\r\n\t} else {\r\n\t\tScript.clearForm(\"devtemplate\");\r\n\t}\r\n});\r\n\r\nfunction clearForm() {\r\n\tClientEvents.publish(\"Clear\", \"\");\r\n\tClient.clearDirtyFlag();\r\n\timageBin = null;\r\n}\r\n\r\n// New distributor selected\r\nClientEvents.subscribe(\"DistributorSelected\", async function (selected) {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\tlet res = await Client.confirm(\"Items on this form have changed, please confirm that you want to select a new distributor and ignore changes to the form.\", \"Confirm Changing Record\");\r\n\t\tif (res) {\r\n\t\t\tselectedDistrib = selected.value;\r\n\t\t\tupdateModelDrop();\r\n\t\t}\r\n\t} else {\r\n\t\tselectedDistrib = selected.value;\r\n\t\tupdateModelDrop();\r\n\t}\r\n});\r\n\r\nfunction updateModelDrop() {\r\n\tDevices.manageModels(\"read\", selectedDistrib,\"\", function (data) {\r\n\t\tvar models = Object.keys(data.value.data);\r\n\t\tClientEvents.publish(\"ModelNameList\", models);    // Update the model name dropdown\r\n\t\tif (models.length !== 0) {\r\n\t\t\tcurrList = models.slice();\r\n\t\t\tmodelSelected(currList[0], {\"columns\":\"*\",\"filter\":\"model='\" + currList[0] + \"'\"});\r\n\t\t} else {\r\n\t\t\tScript.clearForm(\"devtemplate\");\r\n\t\t}\r\n\t},{\"columns\":\"model\"});\r\n}\r\n\r\n// New model selected\r\nClientEvents.subscribe(\"ModelSelected\", async function (selected) {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\tlet res = await Client.confirm(\"Items on this form have changed, please confirm that you want to select a new model and ignore changes to the form.\", \"Confirm Changing Record\", { confirmText: \"Change\" });\r\n\t\tif (res) {\r\n\t\t\tmodelSelected(selected.value, {\"columns\":\"*\",\"filter\":\"model='\" + selected.value + \"'\"});\r\n\t\t} else {\r\n\t\t\tClientEvents.publish(\"TempModNameUpd\", selectedRec); // Select old record\r\n\t\t}\r\n\t} else {\r\n\t\tmodelSelected(selected.value, {\"columns\":\"*\",\"filter\":\"model='\" + selected.value + \"'\"});\r\n\t}\r\n});\r\n\r\nfunction modelSelected(model, options) {\r\n\tDevices.manageModels(\"read\", selectedDistrib, model, function (data) {\r\n\t\tObject.keys(data.value.data).forEach(function (item) {\r\n\t\t\tselectedRec = item;\r\n\t\t\tpopulateFields(data.value.data[item]);\r\n\t\t});\r\n\t\tClient.clearDirtyFlag();\r\n\t}, options);\r\n}\r\n\r\n// Save button\r\nClientEvents.subscribe(\"ModelSave\", function (value) {\r\n\t// Get values in form\r\n\tvar formData = Script.getForm(\"devtemplate\");\r\n\tselectedRec = formData.TempModels;\r\n\tsaveRecs(formData);\r\n});\r\n\r\n// Delete button\r\nClientEvents.subscribe(\"ModelDelete\", async function (value) {\r\n\t// Get values in form\r\n\tvar formData = Script.getForm(\"devtemplate\");\r\n\tselectedRec = formData.TempModels;\r\n\tif (formData.TempModels !== \"\") {\r\n\t\tClient.status(\"Deleting model '\" + selectedRec + \"'...\", \"IMPORTANT\");\r\n\t\tlet res =  await Client.confirm(\"Please confirm that you want to delete model '\"+ selectedRec + \"'. <br><br>NOTE - All devices associated with the model will also be deleted. Are you sure?\", \"Confirm Delete\", { confirmText: \"Delete\" });\r\n\t\tif (res) {\r\n\t\t\t//TODO: Propose removing the need to add '' to the filter, the database.cs file should do that, or use filter as a full where clause (security??).\r\n\t\t\tDevices.manageModels(\"delete\", selectedDistrib, \"\", async function (data) {\r\n\t\t\t\tif (data.value > 0) {\r\n\t\t\t\t\tClient.status(\"Device template '\" + selectedRec + \"' deleted.\", \"IMPORTANT\");\r\n\t\t\t\t\t// refresh the dropdown & the fields\r\n\t\t\t\t\tDevices.manageModels(\"read\", selectedDistrib, \"*\", function (data) {\r\n\t\t\t\t\t\tvar models = Object.keys(data.value.data);\r\n\t\t\t\t\t\tClientEvents.publish(\"ModelNameList\", models);    // Update the model name dropdown\r\n\t\t\t\t\t\tcurrList = models.slice();\r\n\t\t\t\t\t}, {\"columns\":\"model\"});\r\n\t\t\t\t\t//TODO: Delete the model table from the database\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar delMsg = \"Unknown error with delete.\";\r\n\t\t\t\t\tif (data.value == -1) {\r\n\t\t\t\t\t\tdelMsg = \"didn't delete correctly. Please check input and retry.\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (data.value == 0) {\r\n\t\t\t\t\t\tdelMsg = \"No records were found to delete. Please check input and retry.\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tawait Client.alert(\"Device template '\" + selectedRec + \"' \" + delMsg, \"Delete Record\");\r\n\t\t\t\t}\r\n\t\t\t}, {\"columns\":\"model\", \"filter\":\"'\" + selectedRec + \"'\"});\r\n\t\t\tScript.clearForm(\"devtemplate\");\r\n\t\t\timageBin = null;\r\n\t\t}\r\n\t} else {\r\n\t\tSystem.status(\"WARNING - Can't perform model delete, no model selected, select a model name and try again....\", \"IMPORTANT\");\r\n\t}\r\n});\r\n\r\n/**\r\n * Response to message from server channel\r\n */\r\nScript.on('server', function(eventData) {\r\n});\r\n\r\n// Save form to database\r\nasync function saveRecs(formData) {\r\n\tif (formData.TempModels !== \"\") {\r\n\t\tClient.status(\"Saving device template '\" + selectedRec + \"'...\");\r\n\t\tvar status = 0;\r\n\t\tswitch (formData.TempStatus) {\r\n\t\t\tcase \"Enabled\":\r\n\t\t\t\tstatus = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Inactive\":\r\n\t\t\t\tstatus = 2;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t// Populate a dbRequest object to send to server\r\n\t\tvar dbRec = {};\r\n\t\tdbRec.model = formData.TempModels;\r\n\t\tdbRec.account = formData.TempAccount;\r\n\t\tdbRec.make = formData.TempMake;\r\n\t\tdbRec.version = formData.TempVersion;\r\n\t\tdbRec.location = formData.TempLocation;\r\n\t\tdbRec.groupname = formData.TempGroup;\r\n\t\tdbRec.branch = formData.TempBranch;\r\n\t\tdbRec.department = formData.TempDepartment;\r\n\t\tdbRec.imagename = imageName;\r\n\t\tdbRec.application = formData.TempApplication;\r\n\t\tdbRec.url = formData.TempURL;\r\n\t\tdbRec.status = status;\r\n\t\tdbRec.owner = formData.TempOwner;\r\n\t\tdbRec.type = formData.TempType;\r\n\t\tdbRec.notes = formData.TempNotes;\r\n\t\tdbRec.apn = formData.TempAPN;\r\n\t\tvar dbReq = {};\r\n\t\tdbReq[formData.TempModels] = dbRec;\r\n\t\tDevices.manageModels(\"save\", selectedDistrib, dbRec.model, async function (result) {\r\n\t\t\tif (result.value > 0) {\r\n\t\t\t\tClient.status(\"Device template '\" + selectedRec + \"' saved.\");\r\n\t\t\t\tif (currList.indexOf(selectedRec) === -1) {\r\n\t\t\t\t\t// Add the new record to the dropdown list\r\n\t\t\t\t\tClientEvents.publish(\"ModelAddList\",selectedRec);\r\n\t\t\t\t\tcurrList.push(selectedRec);\r\n\t\t\t\t}\r\n\t\t\t\tClient.clearDirtyFlag();\r\n\t\t\t\tClient.status(\"Record '\" + selectedRec + \"' saved successfully.\", \"IMPORTANT\");\r\n\t\t\t\t// Now save the image file\r\n\t\t\t\tif (imageBin !== null) {\r\n\t\t\t\t\tvar usrmeta = {\r\n\t\t\t\t\t\tfileName: imageName,\r\n\t\t\t\t\t\tfileType: \"image\",\r\n\t\t\t\t\t\tlocation: \"images/devices/\" + selectedDistrib\r\n\t\t\t\t\t};\r\n\t\t\t\t\t//Client.publishToChannel(\"$SYS/FILES/REQUEST/UPLOAD\", \"string\", imageBin, usrmeta);\r\n\t\t\t\t\tClient.saveImage(imageBin, function(){}, usrmeta);\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tawait Client.alert(\"Device template '\" + selectedRec + \"' didn't save correctly. Please check input.\", \"Save Record\");\r\n\t\t\t}\t\t\r\n\t\t}, {\"data\":dbReq});\r\n\t} else {\r\n\t\tawait Client.alert(\"OK\",\"Save Record\", \"NOTE - Can't perform model save, no model selected, select or enter a model name and try again...\");\r\n\t}\r\n}\r\n\r\n// populate the widget fields from data returned from server\r\nfunction populateFields(coll) {\r\n\tScript.clearForm(\"devtemplate\");\r\n\tconst newForm = {};\r\n\tnewForm.dist = selectedDistrib;\r\n\tnewForm.model = coll[0];\r\n\tnewForm.app = coll[1];\r\n\tnewForm.make = coll[2];\r\n\tnewForm.version = coll[3];\r\n\tnewForm.location = coll[4];\r\n\tnewForm.group = coll[5];\r\n\tnewForm.branch = coll[6];\r\n\tnewForm.department = coll[7];\r\n\r\n\timageName = coll[8];\r\n\tClientEvents.publish(\"TempLoadImage\",\"../images/devices/\" + selectedDistrib + \"/\" + imageName);\r\n\timageBin = null;\r\n\r\n\tvar recStatus = \"Disabled\";\r\n\tswitch (coll[9]) { // Status\r\n\t\tcase \"1\":\r\n\t\t\trecStatus = \"Enabled\";\r\n\t\t\tbreak;\r\n\t\tcase \"2\":\r\n\t\t\trecStatus = \"Inactive\";\r\n\t\t\tbreak;\r\n\t}\r\n\tnewForm.status = recStatus;\r\n\tnewForm.notes = coll[11];\r\n\tnewForm.owner = coll[12];\r\n\tnewForm.type = coll[13];\r\n\tnewForm.apn = coll[14];\r\n\tnewForm.url = coll[15];\r\n\r\n\tScript.setForm(\"devtemplate\", newForm);\r\n\t\r\n\t//ClientEvents.publish(\"AccountSetValue\",accMap.filter([\"value\", \"text\"], [coll[10]]));\r\n\t// var drop = Script.getWidget(\"TempAccount\");\r\n\t// drop.receiveTextValues(accMap.filter([\"value\", \"text\"], [coll[10]]));\r\n\tnewForm.acct = coll[10];\r\n\t\r\n\tClientEvents.publish(\"AttribsDelAll\",\"\");\r\n\tClientEvents.publish(\"KeySetValue\",\"\");\r\n\tClientEvents.publish(\"ValueSetValue\",\"\");\r\n\tClientEvents.publish(\"TempAttribsDelRows\",\"\");\r\n\t//if (coll[14] !== \"null\" && coll[14] !== \"\") { // Custom attribs\r\n\t//\tvar currAttribs = JSON.parse(coll[14]);\r\n\t//\tif (currAttribs) {\r\n\t//\t\tClientEvents.publish(\"TempAttribsSetValues\",currAttribs);\r\n\t//\t\tScript.setState(\"currAttribs\",currAttribs); // Save to statestore for attrib script\r\n\t//\t}\r\n\t//}\r\n}\r\n\r\nClientEvents.subscribe(\"UploadFirmware\", async function (eventdata, channel) {\r\n\t//Client.setDirtyFlag();\r\n\tawait Client.alert(\"Currently not supported in this version of Sensahub. Coming soon...\", \"Upload Firmware\");\r\n});\r\n\r\nClientEvents.subscribe(\"ModelImgUpload\", function (eventData, channel) {\r\n\t//TODO: Convert this to system API blob function\r\n\tClient.selectFiles(\"image/*\", function (files) {\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = function (e) {\r\n\t\t\timageBin = e.target.result;\r\n\t\t\timageName = selectedRec + \".\" + files[0].name.split('.').pop();\r\n\t\t\tClientEvents.publish(\"TempLoadImage\", imageBin);\r\n\t\t\tClient.setDirtyFlag();\r\n\t\t};\r\n\t\tif (reader.readAsDataURL) {\r\n\t\t\treader.readAsDataURL(files[0]);\r\n\t\t}\r\n\t});\r\n});","file name":"../../js/settings/manage models/manageModels.js","subscribe to directory":"true","subscribe to database":"true","import file":"true"},"ev":{"clientEvents":{"inputEvents":{}},"serverEvents":{"inputEvents":{"DevicesResult":{"channel":"$DEV/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"},"GetTenantResult":{"channel":"$SYS/SYSTEM/GETTENANTS/RESPONSE","event":"feed","important":"false"},"DBResult":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"TempAccount":{"t":"Dropdown","lX":30,"lY":205,"sX":2.2,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.26%","height":"4.16%","x":"0.63%","y":"14.98%"},"ver":"190104c190915","dis":false,"tt":"Select default Account to assign device to","a":{"default options":"","form id":"devtemplate","tab index":"6","label text":"Account","placeholder":"Select Account","dirty on change":"true"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/reset default","event":"reset default"},"AccSetValDrop":{"channel":"AccountSetValue/receive text values","event":"receive text values","important":"false"}}}}},"TempMake":{"t":"Input","lX":30,"lY":270,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"6.22%","x":"1.3%","y":"23.63%"},"ver":"190104c190915","dis":false,"tt":"Device manufacturer (optional).","a":{"color":"grey","form id":"devtemplate","invalid message":"","tab index":"9","label text":"Make","dirty on change":"true","form key":"make","highlight color":"red"},"ev":{"clientEvents":{"inputEvents":{"SetValue":{"channel":"MakeSetValue/receive value","event":"receive value"},"EventClear":{"channel":"clear/receive value","event":"receive value"}},"outputEvents":{}}}},"TempVersion":{"t":"Input","lX":30,"lY":330,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.63%","height":"4.41%","x":"0.63%","y":"25.62%"},"ver":"190104c190915","dis":false,"tt":"Model version number (optional)","a":{"color":"grey","form id":"devtemplate","invalid message":"","tab index":"12","label text":"Version","dirty on change":"true","form key":"version"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"VersionSetValue/receive value","event":"receive value"}}}}},"TempLocation":{"t":"Input","lX":505,"lY":330,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.41%","x":"25.64%","y":"18.35%"},"ver":"190104c190915","dis":false,"tt":"Default device location (optional)","a":{"color":"grey","form id":"devtemplate","tab index":"14","label text":"Location","dirty on change":"true","form key":"location"},"ev":{"clientEvents":{"inputEvents":{"setValue":{"channel":"LocationSetValue/receive value","event":"receive value"},"EventClear":{"channel":"clear/receive value","event":"receive value"}}}}},"TempApplication":{"t":"Input","lX":265,"lY":205,"sX":2.27,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"20.62%","height":"4.41%","x":"23.98%","y":"17.14%"},"ver":"190104c190915","dis":false,"pr":"Default application name using the devices (optional)","tt":"Default application name using the devices (optional)","a":{"form id":"devtemplate","tab index":"7","label text":"Application","dirty on change":"true","form key":"app","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"setValue":{"channel":"ApplicationSetValue/receive value","event":"receive value"},"EventClear":{"channel":"clear/receive value","event":"receive value"}}}}},"TempStatus":{"t":"Dropdown","lX":265,"lY":270,"sX":2.2,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"19.95%","height":"4.13%","x":"24.12%","y":"22.38%"},"ver":"190104c190915","dis":false,"tt":"Select default status of device. Device isn't active until enabled.","a":{"default value":"Disabled","default options":"Disabled,Enabled,Inactive","form id":"devtemplate","tab index":"10","label text":"Status","dirty on change":"true","form key":"status"},"ev":{"clientEvents":{"inputEvents":{"eventClear":{"channel":"default/reset default","event":"reset default"},"setValue":{"channel":"StatusSetValue/receive value","event":"receive value"}}}}},"TempType":{"t":"Input","lX":265,"lY":330,"sX":2.27,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"11.48%","height":"4.41%","x":"12.09%","y":"21.4%"},"ver":"190104c190915","dis":false,"tt":"Context of device data (eg. temperature sensor, web service weather forecast)","a":{"color":"grey","form id":"devtemplate","tab index":"13","label text":"Type","dirty on change":"true","form key":"type"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"TypeSetValue/receive value","event":"receive value"}}}}},"TempOwner":{"t":"Input","lX":505,"lY":270,"sX":2.27,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.47%","height":"4.41%","x":"25.64%","y":"18.35%"},"ver":"190104c190915","dis":false,"tt":"Default owner of the device","a":{"color":"grey","form id":"devtemplate","tab index":"11","label text":"Owner","dirty on change":"true","form key":"owner"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"OwnerSetValue/receive value","event":"receive value"}}}}},"TempNotes":{"t":"Text Area","lX":30,"lY":515,"sX":4.65,"sY":1.31,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"19.56%","height":"10.9%","x":"1.26%","y":"36.79%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"grey","form id":"devtemplate","tab index":"19","label text":"Notes","form key":"notes"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"NotesSetValue/receive value","event":"receive value"}}}}},"TempModels":{"t":"Dropdown","lX":265,"lY":75,"sX":2.17,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.05%","height":"4.16%","x":"0.76%","y":"7.61%"},"ver":"190104c190915","dis":false,"tt":"Select existing model template (for edit) or enter template name (for new)","a":{"default options":"","placeholder":"No records","disable edit":"false","disable spellcheck":"true","form id":"devtemplate","tab index":"2","fire on load":"true","label text":"Model Name","bold":"true","form key":"model"},"ev":{"clientEvents":{"inputEvents":{"dbResult":{"channel":"ModelNameList/receive list","event":"receive list","important":"false"},"Add to list":{"channel":"ModelAddList/append list","event":"append list"},"TempModNameUpd":{"channel":"TempModNameUpd/receive value","event":"receive value"},"EventClear":{"channel":"clear/receive value","event":"receive value","important":"false"}},"outputEvents":{"selectedItem":{"channel":"ModelSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"TempAttrib":{"t":"Input","lX":505,"lY":750,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.38%","x":"0.72%","y":"17.22%"},"ver":"190104c190915","dis":false,"tt":"testing","a":{"color":"grey","form id":"attribs","invalid message":"","tab index":"20","label text":"Attribute","dirty on change":"true"},"ev":{"clientEvents":{"inputEvents":{"setValue":{"channel":"KeySetValue/receive value","event":"receive value"},"EventClear":{"channel":"clear/receive value","event":"receive value"}}}}},"TempValue":{"t":"Input","lX":505,"lY":810,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.38%","x":"10.9%","y":"33.09%"},"ver":"190104c190915","dis":false,"tt":"testing","a":{"color":"grey","form id":"attribs","invalid message":"","tab index":"21","label text":"Default Value","dirty on change":"true"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"ValueSetValue/receive value","event":"receive value"}}}}},"TempAttribs":{"t":"Table","lX":30,"lY":725,"sX":4.55,"sY":1.9,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"19.14%","height":"15.69%","x":"1.47%","y":"53.32%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#1c5f5a","row color":"#ffffff","columns":"attribute,value","colWidths":"0.434878587196468,0.565121412803532","selectable":"single","color rows":"true"},"ev":{"clientEvents":{"inputEvents":{"DelRows":{"channel":"TempAttribsDelRows/delete all rows","event":"delete all rows"},"AttribsSetValues":{"channel":"TempAttribsSetValues/receive value","event":"receive value"},"EventClear":{"channel":"clear/delete all rows","event":"delete all rows"}},"outputEvents":{"SelectedAttrib":{"channel":"SelectedAttrib/receive value","event":"pressed","trigger":"pressed"}}}}},"TempBranch":{"t":"Input","lX":265,"lY":395,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.41%","x":"25.64%","y":"18.35%"},"ver":"190104c190915","dis":false,"tt":"Default organisational branch name for device (optional)","a":{"color":"grey","form id":"devtemplate","tab index":"16","label text":"Branch","dirty on change":"true","form key":"branch"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"TempBranchSetValue/receive value","event":"receive value"}}}}},"TempGroup":{"t":"Input","lX":505,"lY":205,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.41%","x":"25.64%","y":"18.35%"},"ver":"190104c190915","dis":false,"tt":"Default grouping for related devices (optional)","a":{"color":"grey","form id":"devtemplate","tab index":"8","label text":"Group","dirty on change":"true","form key":"group"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"TempGroupSetValue/receive value","event":"receive value"}}}}},"TempDepartment":{"t":"Input","lX":30,"lY":395,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.41%","x":"25.64%","y":"18.35%"},"ver":"190104c190915","dis":false,"tt":"Default organisation department name (optional)","a":{"color":"grey","form id":"devtemplate","tab index":"15","label text":"Department","dirty on change":"true","form key":"department"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"TempDepartmentSetValue/receive value","event":"receive value"}}}}},"TempSaveModel":{"t":"Icon","lX":590,"lY":90,"sX":0.8,"sY":0.8,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.68%","height":"3.3%","x":"24.78%","y":"7.21%"},"ver":"190104c190915","dis":false,"tt":"Save Model","a":{"icon file":"floppy","outline color":"no outline","tab index":"5"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"ModelSave/receive value","event":"pressed","trigger":"pressed"}}}}},"TempClear":{"t":"Icon","lX":505,"lY":95,"sX":0.6,"sY":0.6,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"16.87%","y":"7.54%"},"ver":"190104c190915","dis":false,"tt":"Clear Form","a":{"icon file":"x-square","value on":"","outline color":"no outline","tab index":"3"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"ModelClear/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"TempDeleteModel":{"t":"Icon","lX":550,"lY":95,"sX":0.6,"sY":0.6,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"16.87%","y":"7.54%"},"ver":"190104c190915","dis":false,"tt":"Delete Model","a":{"icon file":"trash","outline color":"no outline","tab index":"4"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"ModelDelete/receive value","event":"pressed","trigger":"pressed"}}}}},"TempUploadPicture":{"t":"Icon","lX":695,"lY":580,"sX":0.6,"sY":0.6,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.44%","x":"16.87%","y":"7.54%"},"ver":"190104c190915","dis":false,"tt":"Upload Picture","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"ModelImgUpload/receive value","event":"pressed","trigger":"pressed"}}}}},"TempFirmware":{"t":"Icon","lX":695,"lY":510,"sX":0.6,"sY":0.6,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.44%","x":"16.87%","y":"7.54%"},"ver":"190104c190915","dis":false,"tt":"Upload Firmware","a":{"icon file":"code-square","outline color":"no outline"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"UploadFirmware/receive value","event":"pressed","trigger":"pressed"}}}}},"TempSaveAttrib":{"t":"Icon","lX":690,"lY":880,"sX":0.8,"sY":0.8,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.68%","height":"3.3%","x":"23.05%","y":"7.62%"},"ver":"190104c190915","dis":false,"tt":"Save Attribute","a":{"icon file":"floppy","outline color":"no outline","tab index":"23"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"AttribSave/receive value","event":"pressed","trigger":"pressed"}}}}},"TempDelAttrib":{"t":"Icon","lX":645,"lY":885,"sX":0.6,"sY":0.6,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"24.95%","y":"66.53%"},"ver":"190104c190915","dis":false,"tt":"Delete Attribute","a":{"icon file":"trash","outline color":"no outline","tab index":"22"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"AttribDelete/receive value","event":"pressed","trigger":"pressed"}}}}},"TempAPN":{"t":"Input","lX":505,"lY":395,"sX":2.3,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.37%","x":"21.25%","y":"32.01%"},"ver":"190104c190915","dis":false,"tt":"Default cellular APN  (optional)","a":{"color":"grey","form id":"devtemplate","tab index":"17","label text":"APN","dirty on change":"true","form key":"apn"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"TempAPNSetValue/receive value","event":"receive value"}}}}},"TempURL":{"t":"Input","lX":30,"lY":455,"sX":4.65,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"19.35%","height":"4.41%","x":"1.26%","y":"36.79%"},"ver":"190104c190915","dis":false,"tt":"Lookup model details at manufacturer  (optional)","a":{"color":"grey","form id":"devtemplate","tab index":"18","label text":"Model URL / Help Filepath","dirty on change":"true","form key":"url"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"setValue":{"channel":"TempURLSetValue/receive value","event":"receive value"}}}}},"TempImage":{"t":"Image","lX":510,"lY":475,"sX":1.75,"sY":1.75,"s":"Manage Models","ps":{"enabled":"false","scalingType":"","width":"7.36%","height":"13.76%","x":"21.46%","y":"38.3%"},"ver":"202605c190915","dis":false,"tt":"","a":{"border width":"1","opacity":"1","image":""},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value","important":"false"},"TempLoadImage":{"channel":"TempLoadImage/set image","event":"set image","important":"false"}}}}},"TempDist":{"t":"Dropdown","lX":35,"lY":75,"sX":2.12,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.83%","height":"5.87%","x":"1.05%","y":"5.51%"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Distributor","default options":"","bold":"true","placeholder":"Select Distributor","tab index":"1","form id":"devtemplate","form key":"dist"},"ev":{"clientEvents":{"inputEvents":{"DistribNameList":{"channel":"DistribNameList/receive list","event":"receive list","important":"false"}},"outputEvents":{"DistributorSelected":{"channel":"DistributorSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"bulkUploadInput":{"t":"Input","lX":20,"lY":940,"sX":2.6,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"NOVERT","width":"23.61%","height":"4.38%","x":"1.82%","y":"82.1%"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"file","label text":"Bulk Upload From CSV","color":"grey"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"bulkUploadChannel/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"ScriptBulkUpload":{"t":"Scripting","lX":850,"lY":310,"sX":1,"sY":1,"s":"Manage Models","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","import file":"true","code editor":"/**\r\n * Description: \r\n * Create Author/Date: \r\n * Modified Author/Date Date: \r\n * Version: \r\n */\r\n\r\n/**\r\n * Initialise script state (run once at startup)\r\n */\r\nScript.on('load', function() {\r\n    ClientEvents.subscribe(\"bulkUploadChannel\", function(event) {\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            // output results\r\n            var dataLines = reader.result.split(/\\r\\n|\\n/);\r\n            const distributor = Script.getForm(\"devtemplate\").TempDist;\r\n            const model = Script.getForm(\"devtemplate\").TempModels;\r\n\r\n            const defaults = {\r\n                account : Script.getForm(\"devtemplate\").TempAccount,\r\n                application : Script.getForm(\"devtemplate\").TempApplication,\r\n                group : Script.getForm(\"devtemplate\").TempGroup,\r\n                make : Script.getForm(\"devtemplate\").TempMake,\r\n                status : Script.getForm(\"devtemplate\").TempStatus,\r\n                owner : Script.getForm(\"devtemplate\").TempOwner,\r\n                version : Script.getForm(\"devtemplate\").TempVersion,\r\n                type : Script.getForm(\"devtemplate\").TempType,\r\n                location : Script.getForm(\"devtemplate\").TempLocation,\r\n                department : Script.getForm(\"devtemplate\").TempDepartment,\r\n                branch : Script.getForm(\"devtemplate\").TempBranch,\r\n                apn : Script.getForm(\"devtemplate\").TempAPN,\r\n                url : Script.getForm(\"devtemplate\").TempURL,\r\n                notes : Script.getForm(\"devtemplate\").TempNotes,\r\n                image  : Script.getForm(\"devtemplate\").TempImage\r\n            };\r\n            \r\n            // Start from index one to avoid including column headers\r\n            for (var i = 1; i < dataLines.length; i++) {\r\n                var row = dataLines[i].split(\",\");\r\n                if (row.length > 1 && row[0] != \"\") {\r\n                    // Ensure row is not blank\r\n\r\n                    // Save to db\r\n                    var dbRec = {};\r\n                    dbRec.serialnum = row[0];\r\n                    dbRec.name = row[1];\r\n                    dbRec.application = row[2] != \"\" ? row[2] : defaults.application;\r\n                    dbRec.version = row[3] != \"\" ? row[3] : defaults.version;\r\n                    dbRec.lastserviced = row[4];\r\n                    dbRec.location = row[5] != \"\" ? row[5] : defaults.location;\r\n                    dbRec.groupname = row[6] != \"\" ? row[6] : defaults.group;\r\n                    dbRec.department = row[7] != \"\" ? row[7] : defaults.department;\r\n                    dbRec.branch = row[8] != \"\" ? row[8] : defaults.branch;\r\n                    dbRec.status = row[9] != \"\" ? row[9] : defaults.status;\r\n                    dbRec.account = row[10] != \"\" ? row[10] : defaults.account;\r\n                    dbRec.owner = row[11] != \"\" ? row[11] : defaults.owner;\r\n                    dbRec.notes = row[12] != \"\" ? row[12] : defaults.notes;\r\n                    dbRec.lastseen = row[13];\r\n                    dbRec.iccid = row[14];\r\n                    dbRec.imei = row[15];\r\n                    dbRec.apn = row[16] != \"\" ? row[16] : defaults.apn;\r\n                    dbRec.number = row[17];\r\n                    dbRec.lastvalue = row[18];\r\n                    dbRec.connections = row[19];\r\n                    dbRec.whenadded = row[20];\r\n                    dbRec.whoadded = row[21];\r\n                    dbRec.whenmodified = row[22];\r\n                    dbRec.whomodified = row[23];\r\n                    dbRec.whendisabled = row[24];\r\n                    dbRec.whodisabled = row[25];\r\n                    dbRec.whenenabled = row[26];\r\n                    dbRec.whoenabled = row[27];\r\n                    dbRec.long = row[28];\r\n                    dbRec.lat = row[29];\r\n                    dbRec.signal = row[30];\r\n                    dbRec.battery = row[31];\r\n\r\n                    var dbReq = {};\r\n                    dbReq[dbRec.serialnum] = dbRec;\r\n                    \r\n                    // Models table\r\n                    Devices.manageDevices(\"save\", distributor, model, async function (data) {\r\n                        if (data.value > 0) {\r\n                            Client.clearDirtyFlag();\r\n                            Client.status(\"Device '\" + selectedRec + \"' (\" + selectedModel + \") saved.\");\r\n\r\n                            // Check if account is different. If so delete all device channels\r\n                            // Get prev device\r\n                            var oldData = allData.get(formData.DevSerial);\r\n\r\n                            // If account has changed delete all previous channels\r\n                            if (oldData && formData.DevAccount !== oldData.account) {\r\n                                Log.info(`Device moved between accounts. Deleting old channels for device '${formData.DevSerial}'`);\r\n                                Devices.deleteDeviceChannels(selectedDistrib, selectedModel, formData.DevName, function () {\r\n                                    Log.info(`Channels deleted.`);\r\n                                });\r\n                            }\r\n                            Client.clearDirtyFlag();\r\n                        } else {\r\n                            await Client.alert(\"Device template '\" + selectedRec + \"' didn't save correctly. Please check input.\", \"Save Record\");\r\n                            Client.status(\"WARNING - Device template '\" + selectedRec + \"' didn't save correctly. Please check input.\", \"IMPORTANT\");\r\n                        }\r\n                    },\r\n\t\t\t\t    {data: dbReq});\r\n                    \r\n                    Client.status(`Uploaded ${i}/${dataLines.length - 2}`, true);\r\n                }\r\n            }\r\n            Client.status(\"Finshed Bulk Upload\", true);\r\n            alert(\"Finshed Bulk Upload\");\r\n        };\r\n        reader.readAsBinaryString(event.value);\r\n        \r\n    });\r\n});","file name":"../../js/settings/manage models/bulkUpload.js"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"db","important":"false"}}}}},"Container#3":{"t":"Container","lX":5,"lY":10,"sX":13.2,"sY":12.1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"86.39%","height":"100.67%","x":"0.21%","y":"0.83%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Manage Devices"},"ev":{}},"Container#4":{"t":"Container","lX":20,"lY":65,"sX":7.4,"sY":0.9,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"31.13%","height":"7.49%","x":"0.81%","y":"5.49%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"","color":"white"},"ev":{}},"Container#5":{"t":"Container","lX":20,"lY":170,"sX":7.4,"sY":4.75,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"31.13%","height":"39.52%","x":"0.93%","y":"13.86%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Edit Device Details"},"ev":{}},"Script#ManageDev":{"t":"Scripting","lX":1345,"lY":40,"sX":1,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"4.21%","height":"8.1%","x":"56.37%","y":"3.65%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description: Script to manage Sensahub devices\r\n * Create Author/Date: Dean Dobson 6/6/20\r\n * Modified Author/Date: DD 27/9/20\r\n * Version: 1.2 Changed options to after callback\r\n */\r\n\r\nvar distribs = [];\r\nvar selectedDistrib = \"\";\r\nvar selectedModel = \"\";\r\nvar selectedRec = \"\";\r\nvar currUser;\r\nvar selectedAttribKey = \"\";\r\nvar modelAttribs = \"\"; // Default model attribs\r\nvar devAttribs = \"\"; // Hold the device attribs\r\nvar modelDefaults = \"\";\r\nvar modelURL = \"\";\r\nvar recLong = 0;\r\nvar recLat = 0;\r\nvar existingRecs = []; // List of records for model\r\nvar existingNames = []; // List of record names (must be unique)\r\nvar oldName;\r\nvar recStatus;\r\nvar accMap = {};\r\nvar locale = Client.getLocale();\r\nvar allData;\r\n\r\n// TODO Get the account names\r\n// TODO: Multiple select / delete in the table (only for delete, how do we edit records multi-selected???\r\n//TODO: device attributes\r\n//TODO: Store the API key for M2M lookup with Distributor table\r\n\r\nScript.on(\"init\", function () {\r\n\tClient.setScreenVisible(\"New User\", false);\r\n\tClient.setScreenVisible(\"New Account\", false);\r\n\tClient.setScreenVisible(\"Account Details\", false);\r\n\tClient.setScreenVisible(\"User Details\", false);\r\n});\r\n\r\n/**\r\n * Initialise script state (run once at startup)\r\n */\r\nScript.on(\"load\", function () {\r\n\tClientEvents.setOptions({\r\n\t\tpersist: false,\r\n\t});\r\n\r\n\t// Get the distributor and model names\r\n\tClient.getTenants(function (data) {\r\n\t\tdistribs = data.value;\r\n\t\tselectedDistrib = distribs[0];\r\n\r\n\t\tClientEvents.publish(\"DevDistribList\", distribs); // Update the distributor name dropdown\r\n\r\n\t\tloadModelForm();\r\n\t});\r\n\r\n\tcurrUser = Client.getUser();\r\n\r\n\tDatabase.readRecords(\"directory\", \"account\", function (eventData) {\r\n\t\tvar accountCollection = SensaCollection.load(eventData.value);\r\n\t\tvar accountCol = accountCollection.filter([\"accountid\", \"accountname\"]);\r\n\t\taccountCol.setColumns([\"value\", \"text\"]);\r\n\t\tvar accountDrop = Script.getWidget(\"DevAccount\");\r\n\t\taccountDrop.receiveTextValues(accountCol);\r\n\t\taccMap = accountCol;\r\n\t});\r\n});\r\n\r\n// Load model into form based on selected distributor\r\nfunction loadModelForm() {\r\n\tDevices.manageModels(\r\n\t\t\"read\",\r\n\t\tselectedDistrib,\r\n\t\t\"\",\r\n\t\tasync function (data) {\r\n\t\t\tvar models = Object.keys(data.value.data);\r\n\t\t\tif (models.length === 0) {\r\n\t\t\t\tawait Client.alert(\"There are no models registered, go to the 'Manage Models' screen to initially create a device model template to use for creating Sensahub devices, then return here to add devices.\", \"No Models Defined\");\r\n\t\t\t}\r\n\t\t\tclearRec();\r\n\t\t\tClientEvents.publish(\"clear\", \"\");\r\n\t\t\tClientEvents.publish(\"DevRecvModels\", models); // Update the model name dropdown\r\n\t\t\tClientEvents.publish(\"DevDelAllRows\", \"\");\r\n\t\t\tif (models.length !== 0) {\r\n\t\t\t\tDevices.manageModels(\r\n\t\t\t\t\t\"read\",\r\n\t\t\t\t\tselectedDistrib,\r\n\t\t\t\t\t\"\",\r\n\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\tvar retData = data.value.data;\r\n\t\t\t\t\t\tselectedModel = Object.keys(retData)[0];\r\n\t\t\t\t\t\tpopulateModelFields(retData[selectedModel]);\r\n\t\t\t\t\t\t// Load the entire record for the selected model into the table\r\n\t\t\t\t\t\tDevices.manageDevices(\r\n\t\t\t\t\t\t\t\"read\",\r\n\t\t\t\t\t\t\tselectedDistrib,\r\n\t\t\t\t\t\t\tselectedModel,\r\n\t\t\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\t\t\tallData = data.value;\r\n\t\t\t\t\t\t\t\tpopulateTable(data.value);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{ columns: \"*\" }\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ columns: \"*\", filter: \"model='\" + models[0] + \"'\" }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ columns: \"model\" }\r\n\t);\r\n}\r\n\r\n/**\r\n * Response to message from server channel\r\n */\r\nScript.on(\"server\", function (eventData) { });\r\n\r\n// New distributor selected\r\nClientEvents.subscribe(\"DevDistribSelected\", async function (selected) {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\tlet res = await Client.confirm(\r\n\t\t\t\"Items on this form have changed, please confirm that you want to select a new distributor and ignore changes to the form.\",\r\n\t\t\t\"Confirm Changing Record\"\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\tselectedDistrib = selected.value;\r\n\t\t\tloadModelForm();\r\n\t\t}\r\n\t} else {\r\n\t\tselectedDistrib = selected.value;\r\n\t\tloadModelForm();\r\n\t}\r\n});\r\n\r\n// When an input field has changed, set the dirty flag so users get a warning if they move away\r\nClientEvents.subscribe(\"changed\", function () {\r\n\tClient.setDirtyFlag();\r\n});\r\n\r\n// Clear button - reset to model defaults\r\nClientEvents.subscribe(\"DevReset\", async function () {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\tlet res = Client.confirm(\r\n\t\t\t\"Changes have been made to the form that will be deleted if cleared, please confirm you want to clear the form.\",\r\n\t\t\t\"Clear Record\"\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\tpopulateModelFields(modelDefaults);\r\n\t\t}\r\n\t} else {\r\n\t\tclearRec();\r\n\t\tpopulateModelFields(modelDefaults);\r\n\t}\r\n});\r\n\r\n// Save device button\r\nClientEvents.subscribe(\"DevSave\", async function () {\r\n\tvar formData = Script.getForm(\"DevForm\");\r\n\tvar oldRec = selectedRec;\r\n\tselectedRec = formData.DevSerial;\r\n\t// if existing record needs to be unique not including itself, or if a new record has to be unique\r\n\tif (\r\n\t\tformData.DevName === \"\" ||\r\n\t\texistingNames.indexOf(formData.DevName.toUpperCase()) === -1 ||\r\n\t\t(oldRec.toUpperCase() === selectedRec.toUpperCase() && formData.DevName.toUpperCase() === oldName.toUpperCase())\r\n\t) {\r\n\t\tsaveRecs(formData);\r\n\t} else {\r\n\t\tawait Client.alert(\"Can't save device '\" + selectedRec + \"' as device name '\" + formData.DevName + \"' isn't unique.\", \"Save Device\");\r\n\t}\r\n});\r\n\r\n// Delete device button\r\nClientEvents.subscribe(\"DevDelRec\", async function () {\r\n\tvar formData = Script.getForm(\"devForm\");\r\n\tselectedRec = formData.DevSerial;\r\n\tif (selectedRec !== \"\") {\r\n\t\tif (formData.DevModel !== \"\") {\r\n\t\t\tClient.status(\"Deleting device '\" + selectedRec + \"' (\" + formData.DevModel + \")...\", \"IMPORTANT\");\r\n\t\t\tlet res = await Client.confirm(\r\n\t\t\t\t\"Please confirm that you want to delete device '\" + selectedRec + \"' (\" + formData.DevModel + \").\",\r\n\t\t\t\t\"Confirm Delete\",\r\n\t\t\t\t{ confirmText: \"Delete\" }\r\n\t\t\t);\r\n\t\t\tif (res) {\r\n\t\t\t\tClient.status(\"Deleting device '\" + selectedRec + \"'...\");\r\n\t\t\t\tDevices.manageDevices(\r\n\t\t\t\t\t\"delete\",\r\n\t\t\t\t\tselectedDistrib,\r\n\t\t\t\t\tselectedModel,\r\n\t\t\t\t\tasync function (data) {\r\n\t\t\t\t\t\tif (data.value > 0) {\r\n\t\t\t\t\t\t\tClient.clearDirtyFlag();\r\n\t\t\t\t\t\t\tClient.status(\"Device '\" + selectedRec + \"' deleted.\", \"IMPORTANT\");\r\n\t\t\t\t\t\t\t// Delete device channels\r\n\t\t\t\t\t\t\tLog.info(\"Deleting associated device channels\");\r\n\t\t\t\t\t\t\tDevices.deleteDeviceChannels(selectedDistrib, selectedModel, formData.DevName, function () {\r\n\t\t\t\t\t\t\t\t// Do something?\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// refresh the table\r\n\t\t\t\t\t\t\tDevices.manageDevices(\r\n\t\t\t\t\t\t\t\t\"read\",\r\n\t\t\t\t\t\t\t\tselectedDistrib,\r\n\t\t\t\t\t\t\t\tselectedModel,\r\n\t\t\t\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\t\t\t\tpopulateTable(data.value);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{ columns: \"*\" }\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tpopulateModelFields(modelDefaults);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tawait Client.alert(\"Device template '\" + selectedRec + \"' didn't delete correctly. Please check input.\", \"Delete Record\");\r\n\t\t\t\t\t\t\tClient.status(\r\n\t\t\t\t\t\t\t\t\"WARNING - Device template '\" + selectedRec + \"' didn't delete correctly. Please check input.\",\r\n\t\t\t\t\t\t\t\t\"IMPORTANT\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ columns: \"serialnum\", filter: \"'\" + selectedRec + \"'\" }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tClient.status(\r\n\t\t\t\t\"WARNING - Can't perform device delete, no model selected, create a device model template before adding devices...\",\r\n\t\t\t\t\"IMPORTANT\"\r\n\t\t\t);\r\n\t\t\tawait Client.alert(\r\n\t\t\t\t\"Can't perform device delete, no model selected, create a device model template before adding devices.\",\r\n\t\t\t\t\"Confirm Delete\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tClient.status(\r\n\t\t\t\"WARNING - Can't perform device delete, no device selected, select a device name from the table and try again....\",\r\n\t\t\t\"IMPORTANT\"\r\n\t\t);\r\n\t\tawait Client.alert(\"Can't perform device delete, no device selected, select a device name from the table and try again\", \"Confirm Delete\");\r\n\t}\r\n});\r\n\r\n// Selected model\r\nClientEvents.subscribe(\"DevModelSel\", async function (selected) {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\tlet res = await Client.confirm(\r\n\t\t\t\"Items on this form have changed, please confirm that you want to select a new model and ignore changes to the form.\",\r\n\t\t\t\"Confirm Changing Model\"\r\n\t\t);\r\n\t\tif (res) {\r\n\t\t\tselectedModel = selected.value;\r\n\t\t\tClientEvents.publish(\"clear\", \"\");\r\n\t\t\tClient.clearDirtyFlag();\r\n\t\t} else {\r\n\t\t\tClientEvents.publish(\"DevModNameUpd\", selectedModel); // Select old record\r\n\t\t}\r\n\t} else {\r\n\t\tselectedModel = selected.value;\r\n\t\tClientEvents.publish(\"clear\", \"\");\r\n\t\t// Get the  model fields from the selected model and populate the form as a default\r\n\t\tDevices.manageModels(\r\n\t\t\t\"read\",\r\n\t\t\tselectedDistrib,\r\n\t\t\t\"\",\r\n\t\t\tfunction (data) {\r\n\t\t\t\tvar retData = data.value.data;\r\n\t\t\t\tpopulateModelFields(retData[Object.keys(retData)[0]]);\r\n\t\t\t\t// Load the entire record for the selected model into the table\r\n\t\t\t\tDevices.manageDevices(\r\n\t\t\t\t\t\"read\",\r\n\t\t\t\t\tselectedDistrib,\r\n\t\t\t\t\tselectedModel,\r\n\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\tallData = data.value;\r\n\t\t\t\t\t\tpopulateTable(data.value);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ columns: \"*\" }\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t{ columns: \"*\", filter: \"model='\" + selected.value + \"'\" }\r\n\t\t);\r\n\t}\r\n});\r\n\r\n// Selected device from table\r\nClientEvents.subscribe(\"DevTableSelected\", async function (selected) {\r\n\tif (Client.checkDirtyFlag()) {\r\n\t\tlet res = Client.confirm(\"Items on this form have changed, please confirm that you want to select a new model and ignore changes to the form.\", \"Confirm Changing Record\");\r\n\t\t//TODO: Can consolidate this with the other confirms for changing record.\r\n\t\tif (res) {\r\n\t\t\tselectedModel = selected.value;\r\n\t\t\tClientEvents.publish(\"clear\", \"\");\r\n\t\t\tClient.clearDirtyFlag();\r\n\t\t} else {\r\n\t\t\tClientEvents.publish(\"DevModNameUpd\", selectedModel); // Select old record\r\n\t\t}\r\n\t} else {\r\n\t\tselectedRec = Object.keys(selected.value.data)[0];\r\n\t\tDevices.manageDevices(\r\n\t\t\t\"read\",\r\n\t\t\tselectedDistrib,\r\n\t\t\tselectedModel,\r\n\t\t\tfunction (data) {\r\n\t\t\t\tvar retData = data.value.data;\r\n\t\t\t\t// Populate a selected template based on the initial value\r\n\t\t\t\tif (data.usrmeta.columns === \"*\" && data.usrmeta.filter != \"\") {\r\n\t\t\t\t\tpopulateDeviceFields(retData[Object.keys(retData)[0]]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Read all records to send to table (but not the model data)\r\n\t\t\t\t\tif (data.usrmeta.columns !== \"model\") {\r\n\t\t\t\t\t\tpopulateTable(eventData.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{ columns: \"*\", filter: \"serialnum='\" + selectedRec + \"'\" }\r\n\t\t);\r\n\t\tClientEvents.publish(\"DevSerialSetVal\", selectedRec);\r\n\t\tClientEvents.publish(\"DevTableSelRowInp\", selectedRec);\r\n\t}\r\n});\r\n\r\n// Attrib save button pressed\r\nClientEvents.subscribe(\"DevSaveAttrib\", async function (value) {\r\n\tawait Client.alert(\"Not available yet.\", \"Update Key\");\r\n\treturn;\r\n\tvar formData = Script.getForm(\"AttribForm\");\r\n\tvar tableAttribs = formData.DevAttribs;\r\n\tif (typeof selectedAttribKey !== \"undefined\" && selectedAttribKey !== \"\") {\r\n\t\ttableAttribs.data[selectedAttribKey] = [selectedAttribKey, formData.DevAttribVal];\r\n\t\tdevAttribs.data[selectedAttribKey] = [selectedAttribKey, formData.DevAttribVal];\r\n\t\tClientEvents.publish(\"DevAttribsSetValues\", tableAttribs);\r\n\t\tClient.status(\"Attribute '\" + selectedAttribKey + \"' updated.\");\r\n\t\tClientEvents.publish(\"DevValueSetVal\", \"\");\r\n\t\tselectedAttribKey = \"\"; // reset, user has to select another attrib\r\n\t\tClient.setDirtyFlag();\r\n\t} else {\r\n\t\tClient.alert(\"No attribute has been updated due to no attribute being selected. Click on an attribute in the table to select it.\", \"Update Key\");\r\n\t}\r\n});\r\n\r\n// Row in attrib table selected event\r\nClientEvents.subscribe(\"DevAttribSelected\", function (selected) {\r\n\tselectedAttribKey = Object.keys(selected.value.data)[0];\r\n\tClientEvents.publish(\"DevValueSetVal\", selected.value.data[selectedAttribKey][1]);\r\n});\r\n\r\n// Clear the record back to defaults\r\nfunction clearRec() {\r\n\tClientEvents.publish(\"DevSerialSetVal\", \"\");\r\n\tClientEvents.publish(\"DevNameSetVal\", \"\");\r\n\tClientEvents.publish(\"DevLastServicedSetVal\", \"\");\r\n\tClientEvents.publish(\"DevICCIDSetVal\", \"\");\r\n\tClientEvents.publish(\"DevIMEISetVal\", \"\");\r\n\tClientEvents.publish(\"DevNumberSetVal\", \"\");\r\n\tClientEvents.publish(\"DevAddedSetVal\", \"--\");\r\n\tClientEvents.publish(\"DevModSetVal\", \"--\");\r\n\tClientEvents.publish(\"DevBattlevelSetVal\", \"--\");\r\n\tClientEvents.publish(\"DevSignalSetVal\", \"--\");\r\n\tClientEvents.publish(\"DevTotConnSetVal\", \"--\");\r\n\tClientEvents.publish(\"DevLastValSetVal\", \"--\");\r\n\tClientEvents.publish(\"DevLastSeenSetVal\", \"--\");\r\n\tselectedRec = \"\";\r\n}\r\n\r\n// Main table\r\nfunction populateTable(collection) {\r\n\t//TODO: remap column names to more friendly\r\n\texistingRecs = [];\r\n\texistingNames = [];\r\n\tObject.keys(collection.data).forEach(function (item) {\r\n\t\tlet matchingAcct = accMap.query((record,pk) => pk == collection.data[item][10]).getColumn('text');\r\n\t\tcollection.data[item][10] = matchingAcct.length > 0 ? matchingAcct[0] : collection.data[item][10];\r\n\t\tswitch (collection.data[item][9]) {\r\n\t\t\tcase \"0\":\r\n\t\t\t\tcollection.data[item][9] = \"Disabled\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1\":\r\n\t\t\t\tcollection.data[item][9] = \"Enabled\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2\":\r\n\t\t\t\tcollection.data[item][9] = \"Inactive\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tcollection.data[item][13] = convertDateTime(+collection.data[item][13] * 1000);\r\n\t\texistingNames.push(collection.data[item][1]);\r\n\t\texistingRecs.push(item.toUpperCase()); // For testing if new record\r\n\t});\r\n\tClientEvents.publish(\"DevDelAllRows\", \"\"); // Clear table first\r\n\tClientEvents.publish(\"DevSetValues\", collection);\r\n\t//if (selectedRec !== \"\") { // Once table has been reloaded, select the record previously selected to highlight it\r\n\t//\tClientEvents.publish(\"DevTableSelRowInp\", selectedRec);\r\n\t//}\r\n}\r\n\r\nfunction convertDateTime(dateTime) {\r\n\tif (dateTime == 0) {\r\n\t\treturn \"never\";\r\n\t} else {\r\n\t\treturn new Date(dateTime).toLocaleDateString(locale) + \" \" + new Date(dateTime).toLocaleTimeString(locale);\r\n\t}\r\n}\r\n\r\n// Save form to database\r\nasync function saveRecs(formData) {\r\n\tif (selectedRec !== \"\") {\r\n\t\tif (formData.DevModels !== \"\") {\r\n\t\t\tvar currDate = Date.now();\r\n\t\t\tvar dbRec = {};\r\n\t\t\tClient.status(\"Saving device details for '\" + formData.DevSerial + \"' (\" + formData.DevModel + \")...\");\r\n\t\t\tif (formData.DevStatus === \"Enabled\" && status !== 1) {\r\n\t\t\t\tdbRec.whoenabled = currUser;\r\n\t\t\t\tdbRec.whenenabled = currDate;\r\n\t\t\t}\r\n\t\t\tif (formData.DevStatus === \"Disabled\" && status !== 0) {\r\n\t\t\t\tdbRec.whodisabled = currUser;\r\n\t\t\t\tdbRec.whendisabled = currDate;\r\n\t\t\t}\r\n\t\t\tvar status = 0;\r\n\t\t\tswitch (formData.DevStatus) {\r\n\t\t\t\tcase \"Enabled\":\r\n\t\t\t\t\tstatus = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Inactive\":\r\n\t\t\t\t\tstatus = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Populate a dbRequest object to send to server\r\n\t\t\tdbRec.serialnum = formData.DevSerial;\r\n\t\t\tdbRec.name = formData.DevName;\r\n\t\t\tdbRec.account = formData.DevAccount;\r\n\t\t\tdbRec.version = formData.DevVersion;\r\n\t\t\tdbRec.groupname = formData.DevGroup;\r\n\t\t\tdbRec.iccid = formData.DevICCID;\r\n\t\t\tdbRec.imei = formData.DevIMEI;\r\n\t\t\tdbRec.number = formData.DevNumber;\r\n\t\t\tdbRec.apn = formData.DevAPN;\r\n\t\t\tdbRec.branch = formData.DevBranch;\r\n\t\t\tdbRec.department = formData.DevDepartment;\r\n\t\t\tdbRec.location = formData.DevLocation;\r\n\t\t\tdbRec.application = formData.DevApplication;\r\n\t\t\tdbRec.lastserviced = formData.DevLastServiced;\r\n\t\t\tdbRec.status = status;\r\n\t\t\tdbRec.owner = formData.DevOwner;\r\n\t\t\tdbRec.notes = formData.DevNotes;\r\n\t\t\tdbRec.whenmodified = currDate;\r\n\t\t\tdbRec.whomodified = currUser;\r\n\t\t\tif (existingRecs.indexOf(selectedRec.toUpperCase()) === -1) {\r\n\t\t\t\t// New record\r\n\t\t\t\tdbRec.whenadded = currDate;\r\n\t\t\t\tdbRec.whoadded = currUser;\r\n\t\t\t}\r\n\t\t\t// Get attribs\r\n\t\t\t//dbRec.attribs = JSON.stringify(devAttribs);\r\n\t\t\tvar dbReq = {};\r\n\t\t\tdbReq[formData.DevSerial] = dbRec;\r\n\t\t\tDevices.manageDevices(\r\n\t\t\t\t\"save\",\r\n\t\t\t\tselectedDistrib,\r\n\t\t\t\tformData.DevModel,\r\n\t\t\t\tasync function (data) {\r\n\t\t\t\t\tif (data.value > 0) {\r\n\t\t\t\t\t\tClient.clearDirtyFlag();\r\n\t\t\t\t\t\tClient.status(\"Device '\" + selectedRec + \"' (\" + selectedModel + \") saved.\");\r\n\r\n\t\t\t\t\t\t// Check if account is different. If so delete all device channels\r\n\t\t\t\t\t\t// Get prev device\r\n\t\t\t\t\t\tvar oldData = allData.get(formData.DevSerial);\r\n\r\n\t\t\t\t\t\t// If account has changed delete all previous channels\r\n\t\t\t\t\t\tif (oldData && formData.DevAccount !== oldData.account) {\r\n\t\t\t\t\t\t\tLog.info(`Device moved between accounts. Deleting old channels for device '${formData.DevSerial}'`);\r\n\t\t\t\t\t\t\tDevices.deleteDeviceChannels(selectedDistrib, selectedModel, formData.DevName, function () {\r\n\t\t\t\t\t\t\t\tLog.info(`Channels deleted.`);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Refresh table for changes\r\n\t\t\t\t\t\tDevices.manageDevices(\r\n\t\t\t\t\t\t\t\"read\",\r\n\t\t\t\t\t\t\tselectedDistrib,\r\n\t\t\t\t\t\t\tselectedModel,\r\n\t\t\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\t\t\tpopulateTable(data.value);\r\n\t\t\t\t\t\t\t\tallData = data.value;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{ columns: \"*\" }\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tClient.clearDirtyFlag();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait Client.alert(\"Device template '\" + selectedRec + \"' didn't save correctly. Please check input.\", \"Save Record\");\r\n\t\t\t\t\t\tClient.status(\"WARNING - Device template '\" + selectedRec + \"' didn't save correctly. Please check input.\", \"IMPORTANT\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{ data: dbReq }\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tClient.status(\r\n\t\t\t\t\"WARNING - No model name specified. Please select a device model name and enter a unique device ID like a serial number.\",\r\n\t\t\t\t\"IMPORTANT\"\r\n\t\t\t);\r\n\t\t\tawait Client.alert(\"No model name specified. Please select a device model name and enter a unique device ID like a serial number.\", \"New or Update Device\");\r\n\t\t}\r\n\t} else {\r\n\t\tClient.status(\"WARNING - No unique ID specified. Please select a device model name and enter a unique device ID like a serial number or select a table record.\", \"IMPORTANT\");\r\n\t\tawait Client.alert(\"No unique ID specified. Please select a device model name and enter a unique device ID like a serial number or select a table record.\", \"New or Update Device\");\r\n\t}\r\n}\r\n\r\n// populate the widget fields from model template data returned from server (when selecting a new device)\r\nfunction populateModelFields(coll) {\r\n\tclearRec();\r\n\tClientEvents.publish(\"clear\", \"\");\r\n\t//if (typeof coll !== \"undefined\") {\r\n\tconst newForm = {};\r\n\tnewForm.app = coll[1];\r\n\tnewForm.make = coll[2];\r\n\tnewForm.ver = coll[3];\r\n\tnewForm.loc = coll[4];\r\n\tnewForm.group = coll[5];\r\n\tnewForm.branch = coll[6];\r\n\tnewForm.dept = coll[7];\r\n\r\n\tClientEvents.publish(\"DevSetImage\", \"../images/devices/\" + selectedDistrib + \"/\" + coll[8]);\r\n\t\r\n\tvar recStatus = \"Disabled\";\r\n\tswitch (coll[9]) { // Status\r\n\t\tcase \"1\":\r\n\t\t\trecStatus = \"Enabled\";\r\n\t\t\tbreak;\r\n\t\tcase \"2\":\r\n\t\t\trecStatus = \"Inactive\";\r\n\t\t\tbreak;\r\n\t}\r\n\tnewForm.status = recStatus;\r\n\t// get account name from id \r\n\tlet matchingAcct = accMap.query((record,pk) => pk == coll[10]).getColumn('text');\r\n\tnewForm.acct = matchingAcct.length > 0 ? matchingAcct[0] : coll[10];\r\n\tnewForm.owner = coll[12];\r\n\tnewForm.type = coll[13];\r\n\tnewForm.apn = coll[14];\r\n\r\n\tScript.setForm(\"DevForm\", newForm);\r\n\r\n\tmodelURL = coll[15];\r\n\t//ClientEvents.publish(\"DevValueSetVal\",\"\");\r\n\t/*\tif (coll[14] !== \"null\" && coll[14] !== \"\") { // Custom attribs\r\n             var currAttribs = JSON.parse(coll[14]);\r\n             if (currAttribs && currAttribs.value) {\r\n                 ClientEvents.publish(\"DevAttribsSetValues\",currAttribs.value);\r\n                 modelAttribs = currAttribs.value;\r\n             }\r\n         }*/\r\n\tmodelDefaults = coll;\r\n\t//} else {\r\n\t//\talert(\"Can't populate model fields as record is blank\");\r\n\t//}\r\n}\r\n\r\n// populate the widget fields from device data returned from server\r\nfunction populateDeviceFields(coll) {\r\n\tconst newForm = {};\r\n\tnewForm.name = coll[1];\r\n\tnewForm.app = coll[2];\r\n\tnewForm.ver = coll[3];\r\n\tnewForm.lastSer = coll[4];\r\n\tnewForm.loc = coll[5];\r\n\tnewForm.group = coll[6];\r\n\tnewForm.dept = coll[7];\r\n\tnewForm.branch = coll[8];\r\n\toldName = coll[1];\r\n\r\n\tvar recStatus = \"Disabled\";\r\n\t// Status\r\n\tswitch (coll[9]) {\r\n\t\tcase \"1\":\r\n\t\t\trecStatus = \"Enabled\";\r\n\t\t\tbreak;\r\n\t\tcase \"2\":\r\n\t\t\trecStatus = \"Inactive\";\r\n\t\t\tbreak;\r\n\t}\r\n\tnewForm.status = recStatus;\r\n\t// var drop = Script.getWidget(\"TempAccount\");\r\n\t// drop.receiveTextValues(accMap.filter([\"value\", \"text\"], [coll[10]]));\r\n\tlet matchingAcct = accMap.query((record,pk) => pk == coll[10]).getColumn('text');\r\n\tnewForm.acct = matchingAcct.length > 0 ? matchingAcct[0] : coll[10];\r\n\tnewForm.owner = coll[11];\r\n\tnewForm.notes = coll[12];\r\n\tnewForm.iccid = coll[14];\r\n\tnewForm.imei = coll[15];\r\n\tnewForm.apn = coll[16];\r\n\tnewForm.cell = coll[17];\r\n\r\n\tScript.setForm(\"DevForm\", newForm);\r\n\r\n\tClientEvents.publish(\"DevLastSeenSetVal\", convertDateTime(+coll[13] * 1000));\r\n\r\n\tif (coll[18] === \"\") {\r\n\t\tClientEvents.publish(\"DevLastValSetVal\", \"--\");\r\n\t} else {\r\n\t\tClientEvents.publish(\"DevLastValSetVal\", coll[18]);\r\n\t}\r\n\tClientEvents.publish(\"DevTotConnSetVal\", coll[19]);\r\n\tClientEvents.publish(\"DevAddedSetVal\", convertDateTime(+coll[20]));\r\n\t// Who added 21\r\n\tClientEvents.publish(\"DevModSetVal\", convertDateTime(+coll[22]));\r\n\t// WHo modified 23\r\n\t// WHen disabled 24\r\n\t// Who disabled 25\r\n\t// When enabled 26\r\n\t// WHo enabled 27\r\n\trecLong = coll[28];\r\n\trecLat = coll[29];\r\n\tClientEvents.publish(\"DevSignalSetVal\", coll[30]);\r\n\tClientEvents.publish(\"DevBattLevelSetVal\", coll[31]);\r\n\tClientEvents.publish(\"DeleteAttribs\", \"\");\r\n\t//ClientEvents.publish(\"DevAttribsSetValues\",modelAttribs); // Reset to default attribs\r\n\t//if (coll[32] !== \"null\" && coll[32] !== \"\") { // Custom attribs\r\n\t//\tdevAttribs = JSON.parse(coll[32]);\r\n\t//\tClientEvents.publish(\"DevAttribsSetValues\",devAttribs);\r\n\t//}\r\n}\r\n\r\nClientEvents.subscribe(\"DevLaunchURL\", async function () {\r\n\tif (modelURL !== \"\") {\r\n\t\tClient.launchTabURL(modelURL);\r\n\t} else {\r\n\t\tif (selectedModel === \"\") {\r\n\t\t\tselectedModel = \"No Model Selected\";\r\n\t\t}\r\n\t\tawait Client.alert(\"No URL has been specified for the model '\" + selectedModel + \"'. Edit the model template and enter in the relevant manufacturer URL.\", \"Get Model Help\");\r\n\t}\r\n});\r\n\r\nClientEvents.subscribe(\"DevLaunchMap\", async function () {\r\n\tif (recLong !== 0 && recLat !== 0) {\r\n\t\tClient.launchTabURL(\"https://maps.google.com/maps?t=m&q=\" + recLat + \"+\" + recLong);\r\n\t} else {\r\n\t\tif (selectedRec === \"\") {\r\n\t\t\tselectedRec = \"No Device Selected\";\r\n\t\t}\r\n\t\tawait Client.alert(\"This device '\" + selectedRec + \"' has not registered a GPS location, map can't be shown.\", \"Lookup Device Location\");\r\n\t}\r\n});\r\n","file name":"../../js/settings/manage devices/manageDev.js","import file":"true","subscribe to directory":"true","subscribe to database":"true"},"ev":{"clientEvents":{"inputEvents":{"New":{"channel":"ButNew/receive value","event":"receive value"}}},"serverEvents":{"inputEvents":{"$DEV":{"channel":"$DEV/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"},"GetTenants":{"channel":"$SYS/SYSTEM/GETTENANTS/RESPONSE","event":"feed","important":"false"}}}}},"DevAccount":{"t":"Dropdown","lX":30,"lY":285,"sX":2.2,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.26%","height":"4.13%","x":"2.71%","y":"19.86%"},"ver":"190104c190915","dis":false,"tt":"Account device is allocated to","a":{"form id":"DevForm","default options":"","placeholder":"Select Account","tab index":"10","label text":"Account","form key":"acct"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/reset default","event":"reset default","important":"false"}}}}},"DevMake":{"t":"Input","lX":515,"lY":285,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.38%","x":"10.52%","y":"10.9%"},"ver":"270520c190915","dis":false,"tt":"Manufacturer of the device","a":{"tab index":"12","color":"grey","form id":"DevForm","label text":"Make","form key":"make"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevMakeSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}}}}},"DevVersion":{"t":"Input","lX":30,"lY":405,"sX":0.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"2.76%","height":"4.38%","x":"10.52%","y":"10.9%"},"ver":"270520c190915","dis":false,"tt":"Device version number","a":{"tab index":"16","color":"grey","form id":"DevForm","label text":"Version","form key":"ver"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevVersionSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}}}}},"DevType":{"t":"Input","lX":30,"lY":465,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.38%","x":"10.52%","y":"10.9%"},"ver":"270520c190915","dis":false,"tt":"Context of incoming data (eg. temperature)","a":{"tab index":"20","color":"grey","form id":"DevForm","label text":"Type","form key":"type"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevTypeSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}}}}},"DevLocation":{"t":"Input","lX":30,"lY":345,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.72%","height":"4.38%","x":"11.88%","y":"19.72%"},"ver":"270520c190915","dis":false,"tt":"Where the device is located","a":{"tab index":"13","color":"grey","form id":"DevForm","label text":"Location","form key":"loc"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevLocationSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}}}}},"DevApplication":{"t":"Input","lX":270,"lY":220,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.41%","x":"10.52%","y":"10.9%"},"ver":"270520c190915","dis":false,"tt":"Application using device data","a":{"tab index":"8","color":"grey","form id":"DevForm","label text":"Application","form key":"app"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevApplicationSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}}}}},"DevStatus":{"t":"Dropdown","lX":270,"lY":285,"sX":2.2,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.26%","height":"4.13%","x":"2.71%","y":"19.86%"},"ver":"190104c190915","dis":false,"tt":"Device status. Must be enabled for incoming data to be accepted","a":{"form id":"DevForm","default options":"Disabled,Enabled,Inactive","placeholder":"Select Account","tab index":"11","default value":"Disabled","label text":"Status","form key":"status"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevStatusSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/reset default","event":"reset default"}}}}},"DevImage":{"t":"Image","lX":1095,"lY":125,"sX":1.85,"sY":1.85,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"","width":"7.78%","height":"15.08%","x":"45.98%","y":"10.29%"},"ver":"202605c190915","dis":false,"a":{"border width":"1","image":""},"ev":{"clientEvents":{"inputEvents":{"DevImageSetValue":{"channel":"DevSetImage/set image","event":"set image"}}}}},"DevSerial":{"t":"Input","lX":440,"lY":90,"sX":1.8,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"7.57%","height":"4.38%","x":"11.36%","y":"7.46%"},"ver":"190104c190915","dis":false,"tt":"Enter unique ID to identify incoming data","a":{"color":"grey","form id":"DevForm","invalid message":"","tab index":"3","label text":"Unique Id / Serial","bold":"true","form key":"serial"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"DevSerialSetVal":{"channel":"DevSerialSetVal/receive value","event":"receive value"}}}}},"Container#7":{"t":"Container","lX":770,"lY":65,"sX":5.2,"sY":4.15,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"21.88%","height":"34.53%","x":"0.81%","y":"13.95%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Device Statistics"},"ev":{}},"DevNotes":{"t":"Text Area","lX":30,"lY":525,"sX":4.7,"sY":1.15,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"42.69%","height":"9.41%","x":"2.82%","y":"43.68%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"grey","form id":"DevForm","tab index":"23","label text":"Notes","form key":"notes"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevNotesSetVal/receive value","event":"receive value"}}}}},"DevModel":{"t":"Dropdown","lX":235,"lY":90,"sX":1.95,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.2%","height":"4.16%","x":"9.09%","y":"7.29%"},"ver":"190104c190915","dis":false,"tt":"Select device model name","a":{"placeholder":"Select Model","default options":"","fire on load":"true","form id":"DevForm","tab index":"2","bold":"true","label text":"Select / Enter Model","form key":"model"},"ev":{"clientEvents":{"inputEvents":{"DevModNameUpd":{"channel":"DevModSelUpd/receive value","event":"receive value"},"Receive Models":{"channel":"DevRecvModels/receive list","event":"receive list","important":"false"}},"outputEvents":{"SelectedItem":{"channel":"DevModelSel/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"DevName":{"t":"Input","lX":30,"lY":220,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.63%","height":"4.38%","x":"1.43%","y":"14.51%"},"ver":"270520c190915","z":"110","dis":false,"tt":"Friendly name or alias for device","a":{"tab index":"7","color":"grey","form id":"DevForm","label text":"Name (alias)","form key":"name"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevNameSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}},"outputEvents":{"onchange":{"channel":"changed/receive value","event":"on change","trigger":"on change"}}}}},"Graph#0":{"t":"Graph","lX":775,"lY":315,"sX":2.5,"sY":0.8,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"21.03%","height":"12.97%","x":"32.6%","y":"25.61%"},"ver":"190104c190915","dis":false,"tt":"","a":{"line type":"linear","history timespan":"240","title":"Connections / Day","x-axis":"days","y-axis":"number"},"ev":{}},"Container#8":{"t":"Container","lX":800,"lY":125,"sX":2.85,"sY":1.8,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.99%","height":"14.59%","x":"33.57%","y":"10.13%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":""},"ev":{}},"DevLastSeen":{"t":"Label","lX":815,"lY":130,"sX":2.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"2.03%","x":"34.29%","y":"10.45%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<font color=\"#777777\">Last Seen:</font> <font color=\"#555555\" style=\"\"><b>[#]</b></font>"},"ev":{"clientEvents":{"inputEvents":{"DevLastSeenSetVal":{"channel":"DevLastSeenSetVal/receive value","event":"receive value"}}}}},"DevLastVal":{"t":"Label","lX":815,"lY":155,"sX":2.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"2.04%","x":"22.3%","y":"17.77%"},"ver":"200124c190915","dis":false,"a":{"font size":"14","label text":"<font color=\"#777777\">Last Value:</font> <b><font color=\"#555555\">[#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"DevLastValSetVal":{"channel":"DevLastValSetVal/receive value","event":"receive value"}}}}},"DevTotConn":{"t":"Label","lX":815,"lY":180,"sX":2.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"2.04%","x":"22.3%","y":"17.77%"},"ver":"200124c190915","dis":false,"a":{"font size":"14","label text":"<font color=\"#777777\">Connections: </font><b><font color=\"#555555\">[#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"DevTotConnSetVal":{"channel":"DevTotConnSetVal/receive value","event":"receive value"}}}}},"DevAdded":{"t":"Label","lX":815,"lY":255,"sX":2.6,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"10.94%","height":"2.04%","x":"22.3%","y":"17.77%"},"ver":"200124c190915","z":"110","dis":false,"a":{"font size":"14","label text":"<font color=\"#777777\">Added: </font><b><font color=\"#555555\">[#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"DevAddedSetVal":{"channel":"DevAddedSetVal/receive value","event":"receive value"}}}}},"DevMod":{"t":"Label","lX":815,"lY":280,"sX":2.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"2.04%","x":"22.3%","y":"17.77%"},"ver":"200124c190915","z":"110","dis":false,"a":{"font size":"14","label text":"<font color=\"#777777\">Modified: </font><b><font color=\"#555555\">[#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"DevModSetVal":{"channel":"DevModSetVal/receive value","event":"receive value"}}}}},"DevTable":{"t":"Table","lX":20,"lY":655,"sX":12.75,"sY":5.4,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"83.44%","height":"44.93%","x":"0.84%","y":"53.08%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#004d44","columns":"serialnum,name,status,lastseen,iccid,imei,number","title":"Device List","display header":"true","selectable":"single","enable search":"true","row color":"#000000","colWidths":"0.10604870384917518,0.14218381775333858,0.12568735271013354,0.1249018067556952,0.1249018067556952,0.1249018067556952,0.1249018067556952"},"ev":{"clientEvents":{"inputEvents":{"DeleteAllRows":{"channel":"DevDelAllRows/delete all rows","event":"delete all rows","important":"false"},"DevTableSelRowInp":{"channel":"DevTableSelRowInp/highlight row","event":"highlight row","important":"false"},"DevSetValues":{"channel":"DevSetValues/receive value","event":"receive value","important":"true"}},"outputEvents":{"Selected":{"channel":"DevTableSelected/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Container#9":{"t":"Container","lX":1050,"lY":495,"sX":2.4,"sY":0.8,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"10.1%","height":"6.66%","x":"44.17%","y":"40.19%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"","color":"grey"},"ev":{}},"DevLastServiced":{"t":"Input","lX":90,"lY":405,"sX":1.7,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"7.15%","height":"4.38%","x":"3.87%","y":"32.74%"},"ver":"270520c190915","dis":false,"tt":"Device version number","a":{"tab index":"17","color":"grey","form id":"DevForm","type":"date","label text":"Last Serviced","form key":"lastSer"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevLastServicedSetVal/receive value","event":"receive value"}}}}},"DevAttribs":{"t":"Table","lX":770,"lY":495,"sX":2.65,"sY":1.45,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"12.06%","x":"32.39%","y":"40.19%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#1c5f5a","row color":"#ffffff","columns":"attribute,value","colWidths":"0.42585551330798477,0.5741444866920152","form id":"AttribForm","selectable":"single","color rows":"true"},"ev":{"clientEvents":{"inputEvents":{"ReceiveValue":{"channel":"DevAttribsSetValues/receive value","event":"receive value"},"DeleteAttribs":{"channel":"DeleteAttribs/delete all rows","event":"delete all rows"}},"outputEvents":{"Selected":{"channel":"DevAttribSelected/receive value","event":"pressed","trigger":"pressed"}}}}},"DevAttribVal":{"t":"Input","lX":1055,"lY":505,"sX":1.87,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"7.78%","height":"4.38%","x":"44.55%","y":"31.2%"},"ver":"270520c190915","z":"110","dis":false,"tt":"Context of incoming data (eg. temperature)","a":{"tab index":"29","color":"grey","form id":"AttribForm","label text":"Edit Attribute Value"},"ev":{"clientEvents":{"inputEvents":{"EventClear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevValueSetVal/receive value","event":"receive value","important":"false"}}}}},"DevGroup":{"t":"Input","lX":515,"lY":220,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.38%","x":"10.52%","y":"10.9%"},"ver":"270520c190915","dis":false,"tt":"Group name for related devices","a":{"tab index":"9","color":"grey","form id":"DevForm","label text":"Group","form key":"group"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevGroupSetVal/receive value","event":"receive value"}}}}},"DevBranch":{"t":"Input","lX":270,"lY":405,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.72%","height":"4.38%","x":"11.88%","y":"19.72%"},"ver":"270520c190915","dis":false,"tt":"Organisation branch where the device is located","a":{"tab index":"18","color":"grey","form id":"DevForm","label text":"Branch","form key":"branch"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevBranchSetVal/receive value","event":"receive value"}}}}},"DevDepartment":{"t":"Input","lX":270,"lY":345,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.72%","height":"4.38%","x":"11.88%","y":"19.72%"},"ver":"270520c190915","dis":false,"tt":"Organisation department where the device is located","a":{"tab index":"14","color":"grey","form id":"DevForm","label text":"Department","form key":"dept"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevDepartmentSetVal/receive value","event":"receive value"}}}}},"DevLookupScript":{"t":"Scripting","lX":1345,"lY":175,"sX":1,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description: Lookup M2M SIM details\r\n * Create Author/Date: Dean Dobson 27/6/20\r\n * Modified Author/Date Date: \r\n * Version: \r\n */\r\n\r\n//TODO: Put this somewhere more secure\r\nvar APIKey = \"YnJlbmRhbndpbGxpYW1zb24xOmEzM2E1MTg3LTJkMjgtNDA5My1iMTgwLTJiZjBhN2YyN2VhZQ==\";\r\n//89610180003439854330\r\n\r\nClientEvents.subscribe(\"DevActivateSim\", function () {\r\n\tvar iccid = checkICCID();\r\n\tif (iccid) {\r\n\t\tClient.sendXmlHttpRequest(\"PUT\", \"https://restapi10.jasper.com/rws/api/v1/devices/\" + iccid,\r\n\t\t\t{ type: \"text\", data: JSON.stringify({ status: \"ACTIVATED\" }), headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\", Authorization: \"Basic \" + APIKey } }, function () {\r\n\t\t\t\tif (this.readyState == 4) {\r\n\t\t\t\t\tif (this.status == 200) {\r\n\t\t\t\t\t\tClient.invokeModal(\"OK\", \"Cellular SIM ICCID \" + iccid, \"SIM has been activated. Status: \" + this.responseText);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tClient.invokeModal(\"OK\", \"Cellular details for ICCID \" + iccid, \"Error returned status: \" + this.status + \", error: \" + this.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n});\r\n\r\nClientEvents.subscribe(\"DevDeactivateSim\", function () {\r\n\tvar iccid = checkICCID();\r\n\tif (iccid) {\r\n\t\tSystem.sendXmlHttpRequest(\"PUT\", \"https://restapi10.jasper.com/rws/api/v1/devices/\" + iccid,\r\n\t\t\t{ type: \"text\", data: JSON.stringify({ status: \"DEACTIVATED\" }), headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\", Authorization: \"Basic \" + APIKey } }, async function () {\r\n\t\t\t\tif (this.readyState == 4) {\r\n\t\t\t\t\tif (this.status == 200) {\r\n\t\t\t\t\t\tawait Client.alert(\"SIM has been deactivated. Status: \" + this.responseText, \"Cellular SIM ICCID \" + iccid);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait Client.alert(\"Error returned status: \" + this.status + \", error: \" + this.responseText, \"Cellular details for ICCID \" + iccid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n});\r\n\r\nClientEvents.subscribe(\"LookupIMEI\", function () {\r\n\tvar iccid = checkICCID();\r\n\tif (iccid) {\r\n\t\tClient.sendXmlHttpRequest(\"GET\", \"https://restapi10.jasper.com/rws/api/v1/devices/\" + iccid,\r\n\t\t\t{ type: \"text\", data: null, headers: { Accept: \"application/json\", Authorization: \"Basic \" + APIKey } }, async function () {\r\n\t\t\t\tif (this.readyState == 4) {\r\n\t\t\t\t\tif (this.status == 200) {\r\n\t\t\t\t\t\tsendToInputs(this.responseText);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait Client.alert(\"Error returned status: \" + this.status + \", error: \" + this.responseText, \"Cellular details for ICCID \" + iccid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n});\r\n\r\nClientEvents.subscribe(\"DevLookupCellStats\", function () {\r\n\tvar iccid = checkICCID();\r\n\tif (iccid) {\r\n\t\tClient.sendXmlHttpRequest(\"GET\", \"https://restapi10.jasper.com/rws/api/v1/devices/\" + iccid + \"/ctdUsages\",\r\n\t\t\t{ type: \"text\", data: null, headers: { Accept: \"application/json\", Authorization: \"Basic \" + APIKey } }, async function () {\r\n\t\t\t\tif (this.readyState == 4) {\r\n\t\t\t\t\tif (this.status == 200) {\r\n\t\t\t\t\t\tformatResponse(this.responseText, iccid);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait Client.alert(\"Error returned status: \" + this.status + \", error: \" + this.responseText, \"Cellular details for ICCID \" + iccid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n});\r\n\r\nasync function checkICCID() {\r\n\tvar formData = Script.getForm(\"DevForm\");\r\n\tif (formData.DevICCID === \"\") {\r\n\t\tawait Client.alert(\"Please enter an ICCID in the form before looking up device cellular data\", \"No ICCID Specified\");\r\n\t\treturn;\r\n\t}\r\n\tvar iccid = formData.DevICCID;\r\n\tClient.status(\"Looking up data for ICCID \" + iccid + \"...\");\r\n\treturn iccid;\r\n}\r\n\r\nfunction sendToInputs(response) {\r\n\tvar jsonData = JSON.parse(response);\r\n\tClientEvents.publish(\"DevIMEISetVal\", jsonData.imei);\r\n\tClientEvents.publish(\"DevNumberSetVal\", jsonData.msisdn);\r\n\tClient.setDirtyFlag();\r\n\t//ClientEvents.publish(\"DevAPN\",\"XX\");\r\n}\r\n\r\nasync function formatResponse(response, iccid) {\r\n\tvar text = \"Server responded with the following details:<br><br>\";\r\n\tvar jsonData = JSON.parse(response);\r\n\tObject.keys(jsonData).forEach(function (key) {\r\n\t\ttext = text + \"&nbsp;&nbsp;&nbsp;&nbsp;<b>\" + key + \":</b>&nbsp;&nbsp;\" + jsonData[key] + \"<br>\";\r\n\t});\r\n\tawait Client.alert(text, \"Cellular details for ICCID \" + iccid);\r\n}","import file":"true","file name":"../../js/settings/manage devices/devLookup.js"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"$DEV/ADMIN/DEVICE/RESPONSE","event":"feed","important":"false"},"New Event #2":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"},"New Event #3":{"channel":"$DIR/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"DevIMEI":{"t":"Input","lX":515,"lY":405,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.72%","height":"4.38%","x":"11.88%","y":"19.72%"},"ver":"270520c190915","dis":false,"tt":"Cellular IMEI number","a":{"tab index":"19","color":"grey","form id":"DevForm","label text":"IMEI","form key":"imei"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevIMEISetVal/receive value","event":"receive value"}}}}},"DevNumber":{"t":"Input","lX":515,"lY":465,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.72%","height":"4.38%","x":"11.88%","y":"19.72%"},"ver":"270520c190915","dis":false,"tt":"Cellular phone number","a":{"tab index":"22","color":"grey","form id":"DevForm","label text":"Cell Number","form key":"cell"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevNumberSetVal/receive value","event":"receive value"}}}}},"DevAPN":{"t":"Input","lX":515,"lY":525,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.72%","height":"4.38%","x":"11.88%","y":"19.72%"},"ver":"270520c190915","dis":false,"tt":"Cellular APN","a":{"tab index":"24","color":"grey","form id":"DevForm","label text":"APN","form key":"apn"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevAPNSetVal/receive value","event":"receive value"}}}}},"DevBattLevel":{"t":"Label","lX":815,"lY":230,"sX":2.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"2.03%","x":"22.3%","y":"17.77%"},"ver":"200124c190915","dis":false,"a":{"font size":"14","label text":"<font color=\"#777777\">Battery Level:</font> <b><font color=\"#555555\">[#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"DevBattLevelSetVal":{"channel":"DevBattLevelSetVal/receive value","event":"receive value"}}}}},"DevSignalStrength":{"t":"Label","lX":815,"lY":205,"sX":2.65,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"11.15%","height":"2.03%","x":"34.29%","y":"15.96%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<font color=\"#777777\">Signal Strength:</font> <font color=\"#555555\"><b>[#]</b></font>"},"ev":{"clientEvents":{"inputEvents":{"DevSignalSetVal":{"channel":"DevSignalSetVal/receive value","event":"receive value"}}}}},"DevClear":{"t":"Icon","lX":625,"lY":110,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"27.26%","y":"8.51%"},"ver":"190104c190915","dis":false,"tt":"Clear Form","a":{"icon file":"x-square","value on":"","outline color":"no outline","tab index":"4"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevReset/receive value","event":"pressed","trigger":"pressed"}}}}},"DevUpdate":{"t":"Icon","lX":710,"lY":105,"sX":0.8,"sY":0.8,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.68%","height":"3.3%","x":"30.33%","y":"8.83%"},"ver":"190104c190915","dis":false,"tt":"Save Device","a":{"icon file":"floppy","outline color":"no outline","tab index":"6"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"DevSave/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"DevDelete":{"t":"Icon","lX":670,"lY":110,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"27.26%","y":"8.51%"},"ver":"190104c190915","dis":false,"tt":"Delete Device","a":{"icon file":"trash","outline color":"no outline","tab index":"5"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevDelRec/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"DevUpdAttrib":{"t":"Icon","lX":1240,"lY":520,"sX":0.8,"sY":0.8,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.68%","height":"3.3%","x":"30.33%","y":"8.83%"},"ver":"190104c190915","dis":false,"tt":"Save Attribute","a":{"icon file":"floppy","outline color":"no outline","tab index":"30"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"DevSaveAttrib/receive value","event":"pressed","trigger":"pressed"}}}}},"DevLookupIMEI":{"t":"Icon","lX":530,"lY":585,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"27.26%","y":"8.51%"},"ver":"190104c190915","dis":false,"tt":"Lookup IMEI","a":{"icon file":"phone","value on":"","outline color":"no outline","tab index":"25"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"LookupIMEI/receive value","event":"pressed","trigger":"pressed"}}}}},"DevDeactivate":{"t":"Icon","lX":645,"lY":585,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"27.26%","y":"8.51%"},"ver":"190104c190915","dis":false,"tt":"Deactivate SIM","a":{"icon file":"wifi-off","value on":"","outline color":"no outline","tab index":"27"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevDeactivateSim/receive value","event":"pressed","trigger":"pressed"}}}}},"DevActivate":{"t":"Icon","lX":695,"lY":585,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"27.26%","y":"8.51%"},"ver":"190104c190915","dis":false,"tt":"Activate SIM","a":{"icon file":"wifi","value on":"","outline color":"no outline","tab index":"28"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevActivateSim/receive value","event":"pressed","trigger":"pressed"}}}}},"DevMap":{"t":"Icon","lX":1250,"lY":595,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"46.61%","y":"48.95%"},"ver":"190104c190915","dis":false,"tt":"View on Map","a":{"icon file":"map","value on":"","outline color":"no outline","tab index":"32"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevLaunchMap/receive value","event":"pressed","trigger":"pressed"}}}}},"DevGlobe":{"t":"Icon","lX":1195,"lY":595,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"27.26%","y":"8.51%"},"ver":"190104c190915","dis":false,"tt":"Launch URL for model details","a":{"icon file":"globe2","value on":"","outline color":"no outline","tab index":"31"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevLaunchURL/receive value","event":"pressed","trigger":"pressed"}}}}},"DevOwner":{"t":"Input","lX":270,"lY":465,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.63%","height":"4.38%","x":"11.65%","y":"26.42%"},"ver":"270520c190915","dis":false,"tt":"Allocated owner for the device","a":{"tab index":"21","color":"grey","form id":"DevForm","label text":"Owner","form key":"owner"},"ev":{"clientEvents":{"inputEvents":{"SetVal":{"channel":"DevOwnerSetVal/receive value","event":"receive value"},"Clear":{"channel":"clear/receive value","event":"receive value"}}}}},"DevICCID":{"t":"Input","lX":515,"lY":345,"sX":2.3,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.68%","height":"4.38%","x":"57.55%","y":"26.66%"},"ver":"270520c190915","dis":false,"tt":"Cellular ICCID number","a":{"tab index":"15","color":"grey","form id":"DevForm","label text":"ICCID","validate pattern":"^89[0-9]{16,18}$","invalid message":"Data input is invalid for an ICCID, please enter 18 to 22 digits starting with 89.","form key":"iccid"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"clear/receive value","event":"receive value"},"SetVal":{"channel":"DevICCIDSetVal/receive value","event":"receive value"}}}}},"DevCellStats":{"t":"Icon","lX":590,"lY":585,"sX":0.6,"sY":0.6,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.26%","height":"2.48%","x":"24.78%","y":"47.08%"},"ver":"190104c190915","dis":false,"tt":"Lookup Cellular Statistics","a":{"icon file":"card-list","value on":"","outline color":"no outline","tab index":"26"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"DevLookupCellStats/receive value","event":"pressed","trigger":"pressed"}}}}},"DevDistribList":{"t":"Dropdown","lX":25,"lY":90,"sX":2,"sY":1,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.41%","height":"4.16%","x":"2.94%","y":"1.62%"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Distributor","default options":"Kinect","bold":"true","placeholder":"Select Distributor","fire on load":"true","tab index":"1","form id":"DevForm","form key":"dist"},"ev":{"clientEvents":{"inputEvents":{"DevDistribList":{"channel":"DevDistribList/receive list","event":"receive list","important":"false"}},"outputEvents":{"DevDistribSelected":{"channel":"DevDistribSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"ContainerCell":{"t":"Container","lX":510,"lY":340,"sX":2.37,"sY":2.9,"s":"Manage Devices","ps":{"enabled":"false","scalingType":"OK","width":"9.89%","height":"24.13%","x":"21.62%","y":"27.39%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":""},"ev":{}},"Scripting#1":{"t":"Scripting","lX":375,"lY":120,"sX":1,"sY":1,"s":"Configurations","ps":{"enabled":"false","scalingType":"OK","x":"","y":"","width":"","height":""},"ver":"190104c190502","vis":false,"dis":false,"tt":"","a":{"code editor":"\r\nScript.on(\"init\", function() {\r\n\tClient.setScreenVisible(\"New User\", false);\r\n\tClient.setScreenVisible(\"New Account\", false);\r\n\tClient.setScreenVisible(\"Account Details\", false);\r\n\tClient.setScreenVisible(\"User Details\", false);\r\n});\r\n\r\n/**\r\n* Initialise script state (run once at startup)\r\n* @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n*/\r\nScript.on(\"load\", function(payload) {\r\n    try {\r\n    \t//var reqdata = {\"usrmeta\":\"getFileList\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":\"SYSTEM\"};\r\n        //request via ini management channel\r\n        var value = \"SYSTEM\";\r\n        var sysmeta = {\r\n            source: \"widget/settings\"\r\n        };\r\n        var usrmeta = \"getFileList\";\r\n        \r\n\t  \tScript.publishToChannel(\"$sys/inimgmt/request/data\", \"string\", value, usrmeta); \r\n    } catch (ex) {\r\n        console.log('Script initialisation error: ' + ex);\r\n    }\r\n    return payload;\r\n});\r\n\r\n/**\r\n * Response to message from server channel\r\n * @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n */\r\nScript.on(\"server\", function(payload) {\r\n    try {\r\n      switch (payload.usrmeta.toUpperCase()) {\r\n        case \"GETFILELIST\":\r\n \t\t\tScript.sendToWidget(\"ConfName\", \"receive clear\", payload.label, payload.value, payload.sysmeta, payload.usrmeta);\r\n          \tbreak;\r\n        case \"CS\":\r\n            fw.func(\"loadCM\", \"<b>C# Code Editor</b>\");\r\n \t\t\tScript.sendToWidget(\"FileEditor\", \"receive value\", payload.label, payload.value, payload.sysmeta, payload.usrmeta);\r\n          \tfw.func(\"status\", \"Editing configuration\");\r\n          \tbreak;\r\n        case \"JS\":\r\n            fw.func(\"loadCM\", \"<b>Javascript Code Editor</b>\");\r\n \t\t\tScript.sendToWidget(\"FileEditor\", \"receive value\", payload.label, payload.value, payload.sysmeta, payload.usrmeta);\r\n          \tSystem.status(\"Editing configuration\");\r\n          \tbreak;\r\n        case \"INI\":\r\n            fw.func(\"loadCM\", \"<b>INI Configuration Editor</b>\");\r\n              //need to do this because scripting.html and IniEditor are out of sync with standards\r\n \t\t\tScript.sendToWidget(\"FileEditor\", \"receive value\", payload.label, payload.value, payload.sysmeta, payload.usrmeta);\r\n          \tSystem.status(\"Editing configuration\");\r\n          \tbreak;\r\n      }\r\n    } catch (ex) {\r\n       console.log('Script server channel error: ' + ex);\r\n    }\r\n    return payload;\r\n});\r\n\r\n/**\r\n * Response to message on client channel\r\n * @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n */\r\nScript.on(\"client\", function(payload) {\r\n    try {\r\n      \tvar reqdata;\r\n      \tswitch (payload.sysmeta.source) {\r\n      \t\t// Request server for list for the settings dropdown from type selected\r\n      \t\tcase \"widget/ConfType\":\r\n    \t\t\t//reqdata = {\"usrmeta\":\"getFileList\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":payload.value};\r\n\t  \t\t\tvar usrmeta = \"getFileList\";\r\n                var value = payload.value;\r\n                System.publishToChannel(\"$sys/inimgmt/request/data\", \"string\", value, usrmeta);\r\n        \t\tbreak;\r\n  \t\t\t// Request server for list for the settings dropdown from type selected\r\n            case \"widget/reload\":\r\n          \tcase \"widget/open\":\r\n    \t\t\t//reqdata = {\"usrmeta\":\"getFile\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":payload.value};\r\n\t  \t\t\tvar usrmeta = \"getFile\";\r\n                var value = payload.value;\r\n                System.publishToChannel(\"$sys/inimgmt/request/data\",\"string\", value, usrmeta);\r\n            \tbreak;           \r\n  \t\t\t// Request server for list for the settings dropdown from type selected\r\n          \tcase \"widget/save\":\r\n    \t\t\t////This is now handled by the client events.\r\n                //reqdata = {\"usrmeta\":\"saveFile\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":payload.value};\r\n\t  \t\t\t//System.publishToChannel(\"$sys/inimgmt/request/data\", reqdata);\r\n                break;\r\n        \tcase \"widget/restart\":\r\n\t\t\t\tif (confirm(\"WARNING - Please confirm you want to restart the server. This will logout all users and reset the server.\")) {\r\n          \t\t\tSystem.status(\"Resetting server, refresh the browser in 20 seconds to reconnect...\");\r\n    \t\t\t\treqdata = {\"usrmeta\":\"restart\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":\"restart\"};\r\n\t  \t\t\t\tvar value = \"restart\";\r\n                    var usrmeta = \"restart\";\r\n                    System.publishToChannel(\"$sys/inimgmt/request/data\", \"string\", value, usrmeta);\r\n        \t\t} else {\r\n          \t\t\tSystem.status(\"Server reset cancelled.\");\r\n                }\r\n          \t\tbreak;\r\n      \t\t}\r\n      \treturn payload;\r\n    } catch (ex) {\r\n       \tconsole.log('Script client channel error: ' + ex);\r\n    }\r\n});","script type":"javascript","file name":"../../js/settings/configurations/config.js","import file":"true"},"ev":{"clientEvents":{"inputEvents":{"send to script":{"channel":"send to script/receive value","event":"receive value","important":"false"}}},"serverEvents":{"inputEvents":{"Server Response":{"channel":"$SYS/INIMGMT/RESPONSE/DATA","event":"feed"},"New Event #2":{"channel":"$DB/ADMIN/MANAGE/Hello","event":"feed"}}}}},"ConfType":{"t":"Dropdown","lX":35,"lY":75,"sX":2,"sY":1,"s":"Configurations","ps":{"enabled":"false","x":"1.52%","y":"6.11%","width":"8.44%","height":"4.13%","scalingType":"NOVERT"},"ver":"190104c190502","dis":false,"pr":"0","tt":"","a":{"default options":"System, CS Plugins, CS Plugins Ini, JS Plugins, JS Plugins Ini","default value":"System","label text":"Configuration Type","tab index":"1"},"ev":{"clientEvents":{"inputEvents":{"get value":{"channel":"getvalues/getvalue","event":"getvalue"}},"outputEvents":{"Send To Script":{"channel":"send to script/receive value","event":"selected","trigger":"selected"}}}}},"ConfName":{"t":"Dropdown","lX":35,"lY":140,"sX":2.96,"sY":1,"s":"Configurations","ps":{"enabled":"false","x":"3.31%","y":"11.35%","width":"27.23%","height":"4.13%","scalingType":"NOVERT"},"ver":"190104c190502","dis":false,"pr":"1","tt":"","a":{"default options":"","label text":"Configuration Name","tab index":"2"},"ev":{"clientEvents":{"inputEvents":{"get value":{"channel":"getvalues/getvalue","event":"getvalue"}},"outputEvents":{}},"serverEvents":{"inputEvents":{"GET FILE LIST":{"channel":"$SYS/INIMGMT/RESPONSE/DATA","event":"feed"}}}}},"FileEditor":{"t":"IniEditor","lX":350,"lY":10,"sX":1,"sY":1,"s":"Configurations","ps":{"enabled":"false","x":"","y":"","width":"","height":"","scalingType":"NOSCALE"},"ver":"190104c190502","vis":false,"dis":false,"pr":"2","tt":"","a":{},"ev":{"clientEvents":{"inputEvents":{"get value":{"channel":"getvalues/getvalue","event":"getvalue"},"save button pressed":{"channel":"file editor/save","event":"save"},"close button pressed":{"channel":"file editor/close","event":"close"}}},"serverEvents":{"outputEvents":{"save to server":{"channel":"$SYS/INIMGMT/REQUEST/DATA","event":"save","trigger":"save","important":"false"}}}}},"open":{"t":"Button","lX":40,"lY":210,"sX":0.7,"sY":0.87,"s":"Configurations","ps":{"enabled":"false","scalingType":"OK","width":"2.94%","height":"3.3%","x":"3.99%","y":"31.88%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Open","value on":"[#0]|[#1]","tab index":"3"},"ev":{"clientEvents":{"outputEvents":{"Get Values":{"channel":"getvalues/getvalues(2)","event":"pressed","trigger":"pressed"},"Send To Script":{"channel":"send to script/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"close":{"t":"Button","lX":115,"lY":210,"sX":0.65,"sY":0.87,"s":"Configurations","ps":{"enabled":"false","scalingType":"OK","width":"2.73%","height":"3.3%","x":"10.66%","y":"16.83%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Close","value on":"","tab index":"4"},"ev":{"clientEvents":{"outputEvents":{"Send To Script":{"channel":"send to script/receive value","event":"pressed","trigger":"pressed"},"close":{"channel":"file editor/close","event":"pressed","trigger":"pressed"}}}}},"save":{"t":"Button","lX":185,"lY":210,"sX":0.7,"sY":0.87,"s":"Configurations","ps":{"enabled":"false","scalingType":"OK","width":"2.94%","height":"3.3%","x":"7.82%","y":"17.64%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save","value on":"[#0]|[#1]|[#2]","tab index":"5"},"ev":{"clientEvents":{"outputEvents":{"get values":{"channel":"getvalues/getvalues(3)","event":"pressed","trigger":"pressed"},"save file":{"channel":"file editor/save","event":"pressed","trigger":"pressed"}}}}},"reload":{"t":"Button","lX":260,"lY":210,"sX":0.72,"sY":0.87,"s":"Configurations","ps":{"enabled":"false","scalingType":"OK","width":"3.03%","height":"3.3%","x":"25.3%","y":"16.83%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Reload","value on":"[#0]|[#1]","tab index":"6"},"ev":{"clientEvents":{"outputEvents":{"get values":{"channel":"getvalues/getvalues(2)","event":"pressed","trigger":"pressed"},"send to script":{"channel":"send to script/receive value","event":"pressed","trigger":"pressed"}}}}},"restart":{"t":"Button","lX":135,"lY":320,"sX":0.88,"sY":0.87,"s":"Configurations","ps":{"enabled":"false","scalingType":"OK","width":"3.7%","height":"3.33%","x":"5.6%","y":"25.71%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Restart","tab index":"7"},"ev":{"clientEvents":{"outputEvents":{"restart":{"channel":"send to script/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"ContainerConfig":{"t":"Container","lX":10,"lY":10,"sX":3.48,"sY":2.52,"s":"Configurations","ps":{"enabled":"false","x":"0.74%","y":"0.98%","width":"32.01%","height":"20.97%","scalingType":"OK"},"ver":"190104c190502","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Sensahub Configuration Editor"},"ev":{}},"Scripting#3":{"t":"Scripting","lX":55,"lY":100,"sX":1,"sY":1,"s":"Server Console","ps":{"enabled":"false","x":"","y":"","width":"","height":"","scalingType":"NOSCALE"},"ver":"190104c190502","z":"140","vis":false,"dis":false,"tt":"","a":{"code editor":"Script.on(\"init\", function() {\r\n\tClient.setScreenVisible(\"New User\", false);\r\n\tClient.setScreenVisible(\"New Account\", false);\r\n\tClient.setScreenVisible(\"Account Details\", false);\r\n\tClient.setScreenVisible(\"User Details\", false);\r\n});\r\n\r\n/**\r\n* Initialise script state (run once at startup)\r\n* @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n*/\r\nScript.on(\"load\", function(payload) {\r\n  //var reqdata = {\"usrmeta\":\"\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":\"\"};\r\n  //var value = \"\"\r\n  var channel = {\r\n\t  category: \"$sys\",\r\n\t  className: \"console\",\r\n\t  instance: \"logs\",\r\n\t  scope: \"request\",\r\n\t  label: \"string\",\r\n\t  value: \"\"\r\n  };\r\n  Script.publishToChannel(channel);\r\n  return payload;\r\n});\r\n\r\n// Process keystrokes for console input\r\nScript.on(\"keypress\", function(keycode) {\r\n  \tvar reqdata = {\"usrmeta\":\"\",\"sysmeta\":{\"source\":\"widgets/settings\"},\"value\":keycode.toString()};\r\n\tvar value = keycode.toString();\r\n\tvar channel = {\r\n\t\tcategory: \"$sys\",\r\n\t\tclassName: \"console\",\r\n\t\tinstance: \"logs\",\r\n\t\tscope: \"key\",\r\n\t\tvalue: value\r\n\t};\r\n\t\r\n    Script.publishToChannel(channel);  \r\n});\r\n\r\n\r\n/**\r\n * Response to message from server channel\r\n * @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n */\r\nScript.on(\"Server\", function(payload) {\r\n  \tvar value = new SensaCollection( [\"time\", \"module\", \"type\", \"message\"], \"time\");\r\n    var label = \"sensacollection\";\r\n    \r\n  \tvar jsTime = new Date(payload.value.time);\r\n\tjsTime = jsTime.toLocaleTimeString([], {\"hour12\": false}) + \".\" + jsTime.getMilliseconds();\r\n\r\n\tpayload.value.time = jsTime;\r\n\tvalue.add(payload.value);\r\n\t/*\r\n    value.data[time] = [];\r\n    value.data[time][0] = jsTime.toLocaleTimeString([], {\"hour12\": false}) + \".\" + jsTime.getMilliseconds();\r\n    value.data[time][1] = payload.value.module;\r\n    value.data[time][2] = payload.value.type;\r\n    value.data[time][3] = payload.value.message;\r\n\t*/\r\n  \t\r\n    var color = \"grey\";\r\n\r\n  \tswitch (payload.value.type.toUpperCase()) {\r\n \t  case \"INFORMATION\":\r\n  \t\tcolor = \"#347C2C\";\r\n        break;\r\n      case \"WARNING\":\r\n  \t\tcolor = \"#D4A017\";\r\n        break;\r\n      case \"ERROR\":\r\n  \t\tcolor = \"#8C001A\";\r\n        break;\r\n      case \"CRITICAL\":\r\n  \t\tcolor = \"red\";\r\n        break;\r\n    }\r\n    \r\n\tvar console = Script.getWidget(\"console\");\r\n\tconsole.setTextColor(color);\r\n\tconsole.receiveValue(value);\r\n\t\r\n\t//Script.sendToWidget(\"console\", \"set text color\", \"string\", color);\r\n  \t//Script.sendToWidget(\"console\", \"receive value\", label, value);\r\n    return payload;\r\n});\r\n\r\n/**\r\n * Response to message on client channel\r\n * @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n */\r\nScript.on(\"client\", function(payload) {\r\n    return payload;\r\n});","script type":"javascript","import file":"true","file name":"../../js/settings/server console/console.js"},"ev":{"serverEvents":{"inputEvents":{"New Event #0":{"channel":"$SYS/CONSOLE/LOGS/MSG","event":"feed"}}}}},"Label#0":{"t":"Label","lX":185,"lY":20,"sX":4.76,"sY":1,"s":"Server Console","ps":{"enabled":"false","x":"1.11%","y":"7.46%","width":"35.18%","height":"2.03%","scalingType":"OK"},"ver":"190104c190502","dis":false,"a":{"font size":"14","label text":"<font color=\"#3a87ad\">Use keyboard keys&nbsp;for server console commands. Press 'H' for help.</font>"},"ev":{}},"Scripting#0":{"t":"Scripting","lX":345,"lY":105,"sX":1,"sY":1,"s":"Manage Sensors","ps":{"enabled":"false","scalingType":"OK","x":"","y":"","width":"","height":""},"ver":"190104c190502","vis":false,"dis":false,"tt":"","a":{"code editor":"\r\n/**\r\n* Initialise script state (run once at startup)\r\n* @param {payload} Event data received (payload.channel, payload.data.value, payload.data.usrmeta).\r\n*/\r\nScript.on(\"load\", function(payload) {\r\n    return payload;\r\n});\r\n\r\nScript.on(\"server\", function(payload) {\r\n    var channelSplit = payload.sysmeta.channel.split(\"/\");\r\n    switch (channelSplit[channelSplit.length - 2].toUpperCase()) {\r\n            case \"SENSORTOKEN\":\r\n\t\t\tClientEvents.publish(\"TokenDisplay\", payload.value);    // Update the result\r\n\t\t\tClient.clearDirtyFlag();\r\n            break;\r\n    }\r\n    return payload;\r\n});\r\n\r\n// Generate button\r\nClientEvents.subscribe(\"generate\", function (value) {\r\n\t// Get values in form\r\n\tvar catClass = Script.getForm(\"CatClass\");\r\n    Devices.generateSensorToken(catClass[\"TokenInpCat\"], catClass[\"TokenInpClass\"]);\r\n});","script type":"javascript","import file":"true","file name":"../../js/settings/token/token.js"},"ev":{"clientEvents":{"inputEvents":{"Generate":{"channel":"scripting/receive value","event":"receive value","important":"false"}}},"serverEvents":{"inputEvents":{"Server stuff":{"channel":"$SYS/SYSTEM/SENSORTOKEN/RESPONSE","event":"feed","important":"false"}}}}},"console":{"t":"Table","lX":15,"lY":10,"sX":10.85,"sY":11.84,"s":"Server Console","ps":{"enabled":"true","scalingType":"OK","width":"98.39%","height":"97.74%","x":"1%","y":"1%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"display header":"true","title":"Console","text color":"#000000","columns":"time,module,type,message","row color":"#000000","colWidths":"0.0893169877408056,0.09048453006421482,0.09573847051955633,0.7244600116754233"},"ev":{"clientEvents":{"inputEvents":{"Receive From Script":{"channel":"console/receive value","event":"receive value"}}}}},"generate":{"t":"Button","lX":30,"lY":205,"sX":2.55,"sY":0.87,"s":"Manage Sensors","ps":{"enabled":"false","scalingType":"OK","width":"10.73%","height":"3.3%","x":"1.05%","y":"19.72%"},"ver":"190104c190915","dis":false,"tt":"","a":{"button name":"Generate","value on":"[#0]/[#1]","color":"orange strong","tab index":"3"},"ev":{"clientEvents":{"outputEvents":{"Send Press To Script":{"channel":"generate/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"ContainerToken":{"t":"Container","lX":5,"lY":10,"sX":5.51,"sY":3.16,"s":"Manage Sensors","ps":{"enabled":"false","scalingType":"OK","width":"22.93%","height":"26.09%","x":"1.1%","y":"3.4%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Generate Sensor Token","color":"grey"},"ev":{}},"ContainerRestart":{"t":"Container","lX":10,"lY":270,"sX":3.48,"sY":1.2,"s":"Configurations","ps":{"enabled":"false","x":"0.74%","y":"21.19%","width":"32.01%","height":"9.98%","scalingType":"OK"},"ver":"190104c190502","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Restart Server"},"ev":{}},"TokenInpClass":{"t":"Input","lX":25,"lY":135,"sX":2.72,"sY":1,"s":"Manage Sensors","ps":{"enabled":"false","scalingType":"NOVERT","width":"25.02%","height":"4.38%","x":"1.93%","y":"14.02%"},"ver":"190104c190915","dis":false,"pr":"1","tt":"","a":{"color":"grey","label text":"Class","form id":"CatClass","tab index":"2"},"ev":{"clientEvents":{"inputEvents":{}}}},"TokenInpCat":{"t":"Input","lX":25,"lY":70,"sX":2.72,"sY":1,"s":"Manage Sensors","ps":{"enabled":"false","scalingType":"NOVERT","width":"25.02%","height":"4.38%","x":"1.84%","y":"8.43%"},"ver":"190104c190915","dis":false,"pr":"0","tt":"","a":{"label text":"Category","color":"grey","form id":"CatClass","tab index":"1"},"ev":{"clientEvents":{"inputEvents":{}}}},"TokenDisplay":{"t":"Input","lX":25,"lY":265,"sX":5.15,"sY":1,"s":"Manage Sensors","ps":{"enabled":"false","scalingType":"NOVERT","width":"21.67%","height":"4.38%","x":"0.72%","y":"24.88%"},"ver":"190104c190915","dis":false,"tt":"","a":{"disable editing":"true","color":"grey","label text":"Token Result"},"ev":{"clientEvents":{"inputEvents":{"TokenDisplay":{"channel":"TokenDisplay/receive value","event":"receive value","important":"false"}}}}},"Container#10":{"t":"Container","lX":15,"lY":15,"sX":10.5,"sY":12.34,"s":"Manage Users","ps":{"enabled":"false","scalingType":"OK","width":"96.6%","height":"101.82%","x":"1.38%","y":"10px"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"title":"User Management","color":"grey"},"ev":{}},"accountUserScript":{"t":"Scripting","lX":280,"lY":320,"sX":1,"sY":1,"s":"Manage Users","ps":{"enabled":"false","scalingType":"OK","width":"9.06%","height":"8.05%","x":"34.06%","y":"25.26%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description: \r\n * Create Author/Date: \r\n * Modified Author/Date Date: \r\n * Version: \r\n */\r\n\r\n var accountInfo;\r\n var userInfo;\r\n \r\n /**\r\n  * Initialise script state (run once at startup)\r\n  */\r\n Script.on('load', function() {\r\n     var newAccountIcon = Script.getWidget(\"newAccountIcon\");\r\n     newAccountIcon.subscribe(\"pressed\", newAccount);\r\n     \r\n     var newUserIcon = Script.getWidget(\"newUserIcon\");\r\n     newUserIcon.subscribe(\"pressed\", newUser);\r\n     \r\n     var accDrop = Script.getWidget(\"accountDrop\");\r\n     accDrop.subscribe(\"selected\", updateTable);\r\n     \r\n     var table = Script.getWidget(\"allAccUsersTable\");\r\n     table.subscribe(\"pressed\", rowSelected);\r\n     \r\n     var accountInfoIcon = Script.getWidget(\"accountInfoIcon\");\r\n     accountInfoIcon.subscribe(\"pressed\", viewAccountInfo);\r\n     \r\n     Database.readRecords(\"Directory\", \"users\", users);\r\n });\r\n \r\n function viewAccountInfo() {\r\n     Client.jumpToScreen(\"Account Details\");\r\n }\r\n \r\n function newAccount() {\r\n     Client.jumpToScreen(\"New Account\");\r\n }\r\n \r\n function newUser(eventData) {\r\n     var account = Script.getFormByKey(\"accountManagementForm\").drop;\r\n     Script.setState(\"newUserAccount\", account);\r\n     Client.jumpToScreen(\"New User\");\r\n }\r\n \r\n function accounts(eventData) {\r\n     accountInfo = SensaCollection.load(eventData.value);\r\n     var accountsArray = accountInfo.getColumn(\"accountname\");\r\n     var accDrop = Script.getWidget(\"accountDrop\");\r\n     accDrop.receiveList(accountsArray);\r\n     var acc = Script.getState(\"newUserAccount\");\r\n     var firstAccount;\r\n     // Get first accounts users.\r\n     if (acc !== null) {\r\n         // The \"first\" account will be the last selected one\r\n         accDrop.receiveValue(acc);\r\n         firstAccount = accountInfo.query((record, pk) => {\r\n            if (record.accountname.trim() == acc) return true;\r\n         }).getFirst();\r\n     } else {\r\n        firstAccount = accountInfo.getFirst();\r\n     }\r\n     \r\n     var accountid = firstAccount.accountid;\r\n     \r\n     // Update enabled to yes or no\r\n     userInfo.forEach(function(record, pk) {\r\n         record.status = record.status == 0 ? \"No\" : \"Yes\";\r\n         userInfo.set(record);\r\n     }); \r\n     \r\n     var accountUsers = userInfo.query(function(record, pk) {\r\n         if (record.accountid == accountid) return true;\r\n     });\r\n     \r\n     Script.setState(\"accountInfo\", accountInfo);\r\n     \r\n     Script.setState(\"selectedAccount\", firstAccount);\r\n     \r\n     var table = Script.getWidget(\"allAccUsersTable\");\r\n     // Replace column names for different table row columns\r\n     let userIndex = accountUsers.columns.indexOf(\"username\");\r\n     let emailIndex = accountUsers.columns.indexOf(\"email\");\r\n     accountUsers.columns[userIndex] = \"email username\";\r\n     accountUsers.columns[emailIndex] = \"email address\";\r\n\r\n     // Replace email address with email username if not provided\r\n     accountUsers.getColumn(\"email username\").forEach((user) => {\r\n        if (accountUsers.data[user][emailIndex] == \"\") {\r\n            accountUsers.data[user][emailIndex] = accountUsers.data[user][userIndex];\r\n         }\r\n     });\r\n\r\n     \r\n     accountUsers.pk = \"email username\";\r\n     table.receiveValue(accountUsers);\r\n }\r\n \r\n function users(eventData) {\r\n     userInfo = eventData.value;\r\n     // Only set accounts if the user info has been set\r\n     Database.readRecords(\"Directory\", \"account\", accounts, {filter: `status=1`});\r\n }\r\n \r\n function updateTable(eventData) {\r\n     var accountName = eventData.value;\r\n     var accountDetails = accountInfo.query(function(record, pk) {\r\n         if (accountName == record.accountname.trim()) return true;\r\n     }).getFirst();\t\r\n     var accountid = accountDetails.accountid;\r\n     \r\n     Script.setState(\"selectedAccount\", accountDetails);\r\n     \r\n     var accountUsers = userInfo.query(function(record, pk) {\r\n         if (record.accountid == accountid) return true;\r\n     });\r\n     // Check if account actually has users\r\n     if (Object.keys(accountUsers.data).length > 0) {\r\n        let userIndex = accountUsers.columns.indexOf(\"username\");\r\n        let emailIndex = accountUsers.columns.indexOf(\"email\");\r\n        accountUsers.columns[userIndex] = \"email username\";\r\n        accountUsers.columns[emailIndex] = \"email address\";\r\n\r\n        accountUsers.getColumn(\"email username\").forEach((user) => {\r\n            if (accountUsers.data[user][emailIndex] == \"\") {\r\n                accountUsers.data[user][emailIndex] = accountUsers.data[user][userIndex];\r\n             }\r\n         });\r\n     }\r\n     accountUsers.pk = \"email username\";\r\n     \r\n     // Clear table;\r\n     var table = Script.getWidget(\"allAccUsersTable\");\r\n     table.deleteAllRows(\"\");\r\n     table.receiveValue(accountUsers);\r\n }\r\n \r\n function rowSelected(eventData) {\r\n     // Replace column names with what is consistent on the database\r\n     let userIndex = eventData.value.columns.indexOf(\"email username\");\r\n     let emailIndex = eventData.value.columns.indexOf(\"email address\");\r\n\r\n     eventData.value.columns[userIndex] = \"username\";\r\n     eventData.value.columns[emailIndex] = \"email\";\r\n     eventData.value.pk = \"username\";\r\n     \r\n     var record = eventData.value.getFirst();\r\n     Script.setState(\"userRecord\", eventData.value);\r\n     Script.setState(\"user\", record.username);\r\n     Client.jumpToScreen(\"User Details\");\r\n }","import file":"true","file name":"../../js/settings/manage accounts/accounts.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{}}}},"allAccUsersTable":{"t":"Table","lX":30,"lY":120,"sX":10.1,"sY":10.93,"s":"Manage Users","ps":{"enabled":"false","scalingType":"OK","width":"92.92%","height":"128.29%","x":"30px","y":"120px"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"title":"Users","text color":"#000000","row color":"#000000","columns":"email username,email address,first,last,mobile,status,lastlogged,lastmodified","enable search":"true","display header":"true","colWidths":"0.125,0.16071428571428573,0.09424603174603174,0.1259920634920635,0.16666666666666666,0.07738095238095238,0.125,0.125"},"ev":{"clientEvents":{"inputEvents":{"Users":{"channel":"allUsersData/receive value","event":"receive value"}},"outputEvents":{"Account selected user":{"channel":"accounts-selectedUser/selecteduser","event":"pressed","trigger":"pressed","important":"false"}}},"serverEvents":{"inputEvents":{}}}},"accountDrop":{"t":"Dropdown","lX":30,"lY":55,"sX":5.95,"sY":1,"s":"Manage Users","ps":{"enabled":"false","scalingType":"NOVERT","width":"34.14%","height":"5.87%","x":"1.51%","y":"4.41%"},"ver":"190104c190915","dis":false,"tt":"","a":{"bold":"true","label text":"Account","default options":"","form id":"accountManagementForm","form key":"drop","tab index":"1"},"ev":{"clientEvents":{"outputEvents":{"Selected Account":{"channel":"selectedAccount/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Icon#2":{"t":"Icon","lX":280,"lY":280,"sX":1,"sY":1,"s":"Manage Users","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"4.57%","height":"4.05%","x":"90.87%","y":"4.86%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline","icon file":""},"ev":{"clientEvents":{"outputEvents":{"new User":{"channel":"saveUser/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"newAccountIcon":{"t":"Icon","lX":725,"lY":75,"sX":0.8,"sY":0.8,"s":"Manage Users","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"3.63%","height":"3.33%","x":"65.76%","y":"6.24%"},"ver":"200628c190915","vis":false,"dis":false,"tt":"Create a new account","a":{"outline color":"no outline","icon file":"plus-square","tab index":"2"},"ev":{"clientEvents":{"outputEvents":{}}}},"newUserIcon":{"t":"Icon","lX":965,"lY":70,"sX":1.02,"sY":1.02,"s":"Manage Users","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"4.52%","height":"4.24%","x":"89.33%","y":"5.59%"},"ver":"200628c190915","dis":false,"tt":"Create a new user","a":{"outline color":"no outline","icon file":"person-plus","tab index":"4"},"ev":{"clientEvents":{"outputEvents":{}}}},"accountInfoIcon":{"t":"Icon","lX":775,"lY":75,"sX":0.8,"sY":0.8,"s":"Manage Users","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"3.63%","height":"3.33%","x":"70.39%","y":"6.24%"},"ver":"200628c190915","vis":false,"dis":false,"tt":"View account details","a":{"outline color":"no outline","icon file":"info-square","tab index":"3"},"ev":{"clientEvents":{"outputEvents":{}}}},"Container#13":{"t":"Container","lX":5,"lY":0,"sX":10.25,"sY":8.2,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"156.25%","height":"93.71%","x":"1.07%","y":"0%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"title":"","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"usernameData/set title","event":"set title"}}}}},"Container#14":{"t":"Container","lX":40,"lY":15,"sX":6.6,"sY":7.5,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"59.84%","height":"152.13%","x":"1.77%","y":"1.25%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"User Details","color":"grey"},"ev":{}},"Container#15":{"t":"Container","lX":710,"lY":15,"sX":2.95,"sY":3.05,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"26.67%","height":"35.84%","x":"64.1%","y":"1.3%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Change Password","color":"grey"},"ev":{}},"firstInp":{"t":"Input","lX":50,"lY":110,"sX":3.25,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"29.39%","height":"6.06%","x":"4.52%","y":"9.16%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"First Name","form id":"details","tab index":"3","label text":"First Name","color":"grey","form key":"first","required":"true"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"firstNameData/receive value","event":"receive value","important":"false"}}}}},"lastInp":{"t":"Input","lX":370,"lY":110,"sX":3.2,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"29.22%","height":"6.06%","x":"26%","y":"10.05%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Last Name","form id":"details","tab index":"4","label text":"Last Name","color":"grey","form key":"last","required":"true"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"lastNameData/receive value","event":"receive value"}}}}},"emailInp":{"t":"Input","lX":50,"lY":170,"sX":3.25,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"18.71%","height":"6.06%","x":"5.22%","y":"7.07%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Email Address","form id":"details","tab index":"5","label text":"Email Address","color":"grey","form key":"email","required":"true"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"emailData/receive value","event":"receive value"}}}}},"addrInput":{"t":"Input","lX":50,"lY":275,"sX":6.4,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"58.45%","height":"6.23%","x":"5.22%","y":"7.07%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"placeholder":"Address","form id":"details","tab index":"7","label text":"Address","color":"grey","form key":"address","type":"address","api key":"AIzaSyDPZqlIT0Mx7pQDSBqQto-5mYB4PSBlT0U","use full address":"true"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"addressData/receive value","event":"receive value","important":"false"},"New Event #2":{"channel":"setCountry/set country","event":"set country","important":"false"}},"outputEvents":{"New Event #1":{"channel":"addressChange/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"cityInp":{"t":"Input","lX":50,"lY":330,"sX":2.1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"26.82%","height":"6.06%","x":"6.39%","y":"38.66%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"City","form id":"details","tab index":"8","label text":"City","color":"grey","form key":"city"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"cityData/receive value","event":"receive value","important":"false"}}}}},"stateInp":{"t":"Input","lX":265,"lY":330,"sX":2.15,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"12.38%","height":"6.06%","x":"15.54%","y":"31.67%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"State","form id":"details","tab index":"9","label text":"State","color":"grey","form key":"state"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"stateData/receive value","event":"receive value"}}}}},"zipInp":{"t":"Input","lX":480,"lY":330,"sX":2.1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"26.82%","height":"6.23%","x":"61.05%","y":"38.31%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Zip","form id":"details","tab index":"10","type":"number","label text":"Zip","color":"grey","form key":"pcode"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"zipData/receive value","event":"receive value"}}}}},"newPassInp":{"t":"Input","lX":725,"lY":120,"sX":2.65,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"15.26%","height":"4.38%","x":"42.6%","y":"15.38%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"New password","form id":"pass","tab index":"20","type":"password","label text":"New","color":"grey"},"ev":{}},"confNewInp":{"t":"Input","lX":725,"lY":180,"sX":2.65,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"11.15%","height":"4.38%","x":"12.07%","y":"16.88%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Confirm new password","form id":"pass","tab index":"21","type":"password","label text":"Confirm New Password","color":"grey"},"ev":{}},"changePassBtn":{"t":"Button","lX":875,"lY":250,"sX":1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"4.21%","height":"3.8%","x":"37.48%","y":"22.71%"},"ver":"190104c190915","dis":false,"tt":"","a":{"button name":"Change","color":"black","tab index":"22"},"ev":{"clientEvents":{"outputEvents":{"New Event #0":{"channel":"changePass/receive value","event":"pressed","trigger":"pressed"}}}}},"dashDrop":{"t":"Dropdown","lX":370,"lY":55,"sX":3.1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"28.03%","height":"6.06%","x":"24.93%","y":"26.9%"},"ver":"190104c190915","dis":false,"tt":"","a":{"default options":"","label text":"Dashboard","form id":"details","form key":"dashboard","tab index":"2"},"ev":{"clientEvents":{"inputEvents":{}}}},"accDrop":{"t":"Dropdown","lX":50,"lY":220,"sX":3.15,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"18.07%","height":"5.87%","x":"2.75%","y":"25.23%"},"ver":"190104c190915","dis":false,"tt":"","a":{"default options":"","label text":"Account","form id":"details","form key":"accountname","tab index":"11"},"ev":{"clientEvents":{"inputEvents":{}}}},"notesInp":{"t":"Text Area","lX":50,"lY":495,"sX":3.35,"sY":2.6,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"30.29%","height":"30.55%","x":"4.97%","y":"34.68%"},"ver":"190104c190915","dis":false,"tt":"","a":{"form id":"details","color":"grey","form key":"notes","label text":"User Notes","tab index":"15"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"notesData/receive value","event":"receive value"}}}}},"UserDetailsScript":{"t":"Scripting","lX":1045,"lY":575,"sX":1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"4.21%","height":"8.04%","x":"14.47%","y":"65.92%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"","subscribe to directory":"true","subscribe to database":"true","import file":"true","file name":"../../js/settings/user details/details.js"},"ev":{"clientEvents":{"inputEvents":{}},"serverEvents":{"inputEvents":{}}}},"statusInp":{"t":"Input","lX":595,"lY":400,"sX":1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"5.74%","height":"6.23%","x":"34.08%","y":"46.71%"},"ver":"270520c190915","dis":false,"tt":"","a":{"type":"checkbox","default value":"true","form id":"details","label text":"Enabled","form key":"status","tab index":"14"},"ev":{}},"mobileInp":{"t":"Input","lX":375,"lY":220,"sX":2.27,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"39.04%","height":"6.22%","x":"47.28%","y":"19.84%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"placeholder":"Mobile","form id":"details","tab index":"6","label text":"Mobile","color":"grey","form key":"mobile","required":"true","type":"phonenumber"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"mobileData/receive value","event":"receive value","important":"false"},"New Event #1":{"channel":"setCountry/set country","event":"set country","important":"false"}}}}},"oldPassInp":{"t":"Input","lX":725,"lY":60,"sX":2.65,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"15.26%","height":"4.38%","x":"42.2%","y":"10.86%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Old password","form id":"pass","tab index":"19","type":"password","label text":"Old","color":"grey"},"ev":{}},"Container#21":{"t":"Container","lX":5,"lY":5,"sX":3.45,"sY":8.8,"s":"New User","ps":{"enabled":"false","scalingType":"OK","width":"31.19%","height":"73.21%","x":"0.44%","y":"1.05%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Create New User","color":"grey"},"ev":{}},"NewUserScript":{"t":"Scripting","lX":385,"lY":30,"sX":1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"OK","width":"7.39%","height":"14.97%","x":"27.35%","y":"4.19%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description: \r\n * Create Author/Date: \r\n * Modified Author/Date Date: \r\n * Version: \r\n */\r\n\r\n Script.on(\"init\", function() {\r\n\tClient.setScreenVisible(\"New User\", false);\r\n\tClient.setScreenVisible(\"New Account\", false);\r\n\tClient.setScreenVisible(\"Account Details\", false);\r\n\tClient.setScreenVisible(\"User Details\", false);\r\n});\r\n\r\n/**\r\n * Initialise script state (run once at startup)\r\n */\r\n var accountCollection = null;\r\n Script.on('load', function() {\r\n     // System accounts \r\n     // TODO Locdown to current user account later.\r\n     Database.readRecords(\"directory\", \"account\", function(eventData) {\r\n         var accountCollection = SensaCollection.load(eventData.value);\r\n         var accDropdownCol = accountCollection.filter([\"accountid\", \"accountname\"]);\r\n         accDropdownCol.setColumns([\"value\", \"text\"]);\r\n         var accountDrop = Script.getWidget(\"newUserAccDrop\");\r\n         accountDrop.receiveTextValues(accDropdownCol);\r\n                 \r\n         var acc = Script.getState(\"newUserAccount\");\r\n         if (acc !== null) {\r\n             accountDrop.receiveValue(acc);\r\n         }\r\n     });\r\n     \r\n     Database.readRecords(\"directory\", \"dash\", function(eventData) {\r\n         var dashCollection = eventData.value.getColumn(\"name\");\r\n         var dashDrop = Script.getWidget(\"dashboardDropdown\");\r\n         dashDrop.receiveList(dashCollection);\r\n     });\r\n     \r\n     // Set permisisons on table.\r\n     var permissionsCollection = new SensaCollection([\"permission\"], \"permission\");\r\n     var permissions = Object.keys(Directory.permissions);\r\n     for (var i = 0; i < permissions.length; i++) {\r\n         permissionsCollection.add({\r\n             permission: permissions[i]\r\n         });\r\n     }\r\n \r\n     ClientEvents.publish(\"permissionsTable\", permissionsCollection);\r\n });\r\n\r\n// TODO confirm can add in Directory.js \r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n \r\n ClientEvents.subscribe(\"addNewUserBtn\", function() {\r\n    var formObj = Script.getFormByKey(\"newUserForm\");\r\n    if (formObj == undefined) {\r\n        alert(\"Please fill out all required fields\");\r\n        return;\r\n    }\r\n    var perms = formObj.tablePerms.getColumn(\"permission\");\r\n\r\n    if (!validateEmail(formObj.username)) { \r\n        Script.getWidget(\"username\").setValidityMessage(\"Valid email address is required.\"); \r\n        return;\r\n    }\r\n\r\n    if (!validateEmail(formObj.email)) {\r\n        Script.getWidget(\"EmailInput\").setValidityMessage(\"Valid email address is required.\"); \r\n        return;\r\n    }\r\n    \r\n    if (formObj.password !== formObj.confirmPassword) {\r\n        Script.getWidget(\"confirm\").setValidityMessage(\"Passwords did not match.\");\r\n        return;\r\n    }\r\n\r\n    if (formObj.mobile == undefined || formObj.mobile == \"\" || isNaN(formObj.mobile)) {\r\n        Script.getWidget(\"mobile\").setValidityMessage(\"Mobile number is required.\");\r\n        return;\r\n    }\r\n    \r\n    var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\r\n    \r\n    // Check strength of password.\r\n    if (!strongRegex.test(formObj.password)) {\r\n        Script.getWidget(\"password\").setValidityMessage(\"Password too weak! The password must be: \\n\\t At least 8 characters long \\n\\t Contain at least 1 uppercase alphabetical character \\n\\t Contain atleast 1 lowercase alphabetical character \\n\\t Contain at least 1 numeric character\");\r\n        return;\r\n    }\r\n    \r\n    if (perms.length == 0) {\r\n        alert(\"At least one permission must be assigned to the user.\");\r\n        return;\r\n    }\r\n\r\n    formObj.alias = `${formObj.first} ${formObj.last}`;\r\n\r\n    Directory.addUser(formObj, formObj.accountid, perms, formObj.dashboard, function (eventData) {\r\n        if (eventData.value.account == false) {\r\n            alert(\"An error occured trying to make a new user. The username may already exist. Please try again.\");\r\n            return;\r\n        }\r\n        Client.jumpToScreen(\"Manage Users\");\r\n    });\r\n });","import file":"true","file name":"../../js/settings/new user/user.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"},"New Event #2":{"channel":"$DIR/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"newUserAddBtn":{"t":"Button","lX":220,"lY":820,"sX":1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"OK","width":"7.39%","height":"3.83%","x":"16.63%","y":"61.38%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Add","tab index":"10"},"ev":{"clientEvents":{"outputEvents":{"addAccount":{"channel":"addNewUserBtn/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"dashboardDropdown":{"t":"Dropdown","lX":20,"lY":100,"sX":3,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.2%","height":"4.13%","x":"1.81%","y":"8.18%"},"ver":"190104c190915","dis":false,"tt":"","a":{"form id":"newUserForm","default options":"","label text":"User Dashboard","form key":"dashboard","tab index":"2"},"ev":{"clientEvents":{"inputEvents":{}}}},"saveUserIcon":{"t":"Icon","lX":640,"lY":760,"sX":1.3,"sY":1.3,"s":"User Details","ps":{"enabled":false,"scalingType":"NOHORIZ,NOVERT","width":"4.78%","height":"5.37%","x":"46.65%","y":"106.59%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"floppy","tab index":"18"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Save User":{"channel":"saveUser/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Container#11":{"t":"Container","lX":5,"lY":5,"sX":6.55,"sY":7.47,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"59.22%","height":"59.97%","x":"0.27%","y":"0.8%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"title":"Create New Account","color":"grey"},"ev":{}},"Scripting#4":{"t":"Scripting","lX":755,"lY":115,"sX":1,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"9.2%","height":"8.05%","x":"69.46%","y":"9.09%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\r\n * Description:\r\n * Create Author/Date:\r\n * Modified Author/Date Date:\r\n * Version:\r\n */\r\n\r\n/**\r\n * Initialise script state (run once at startup)\r\n */\r\nvar accountCollection = null;\r\nScript.on(\"load\", function () {\r\n\tvar newAccountButton = Script.getWidget(\"newAccountBtn\");\r\n\tnewAccountButton.subscribe(\"pressed\", createAccount);\r\n});\r\n\r\nClientEvents.subscribe(\"fillAddress\", function (eventData) {\r\n\tconsole.log(eventData);\r\n\t// var formObj = Script.getFormByKey(\"newUserForm\");\r\n\t// if (formObj === null) return;\r\n\t// TODO consider having formObj not be null when a value is empty\r\n\tlet addrName = \"\";\r\n\tfor (const component of eventData.value.address_components) {\r\n\t\tconst componentType = component.types[0];\r\n\r\n\t\tswitch (componentType) {\r\n\t\t\tcase \"street_number\":\r\n\t\t\t\taddrName = `${component.long_name}`;\r\n\t\t\tcase \"route\":\r\n\t\t\t\tScript.getWidget(\"AddressInput\").receiveValue(`${addrName} ${component.long_name}`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"postal_code\":\r\n\t\t\t\tScript.getWidget(\"PostCodeInput\").receiveValue(`${component.long_name}`);\r\n\t\t\t\t// formObj.pcode = `${component.long_name}`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"administrative_area_level_1\":\r\n\t\t\t\tScript.getWidget(\"StateInput\").receiveValue(`${component.long_name}`);\r\n\t\t\t\t// formObj.state = `${component.short_name}`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"locality\":\r\n\t\t\t\tScript.getWidget(\"CityInput\").receiveValue(`${component.long_name}`);\r\n\t\t\t\t// formObj.pcode = `${component.long_name}`;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nasync function createAccount() {\r\n\tvar formObj = Script.getFormByKey(\"newUserForm\");\r\n\tif (formObj === null) return;\r\n\r\n\tDirectory.createAccount(formObj, async function (eventData) {\r\n\t\tif (eventData.value == 1) {\r\n\t\t\tClient.jumpToScreen(\"Manage Users\");\r\n\t\t} else {\r\n\t\t\tawait Client.alert(\"An error occured creating a new account. Please contact your system administrator.\", \"An Error Occured\");\r\n\t\t}\r\n\t});\r\n}\r\n","import file":"true","file name":"../../js/settings/new account/account.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{}}}},"newAccountBtn":{"t":"Button","lX":510,"lY":680,"sX":1,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"7.39%","height":"3.83%","x":"16.63%","y":"61.38%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Create","tab index":"13"},"ev":{"clientEvents":{"outputEvents":{"addAccount":{"channel":"addNewUserBtn/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Input#14":{"t":"Input","lX":45,"lY":410,"sX":3.1,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"28.03%","height":"4.41%","x":"30.29%","y":"3.65%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"contactName","color":"grey","label text":"Contact Name","required":"true","tab index":"8","invalid message":"Required Field"},"ev":{}},"Input#17":{"t":"Input","lX":45,"lY":470,"sX":3.1,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"28.11%","height":"4.41%","x":"35.9%","y":"10.7%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"email","color":"grey","label text":"Email","required":"true","tab index":"10","invalid message":"Required Field"},"ev":{}},"Input#18":{"t":"Input","lX":360,"lY":410,"sX":1.99,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"35.49%","height":"4.41%","x":"32.64%","y":"33.31%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"mobile","color":"grey","label text":"Mobile","required":"true","tab index":"9","type":"phonenumber","invalid message":"Required Field"},"ev":{}},"Input#20":{"t":"Input","lX":30,"lY":45,"sX":6.05,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"54.7%","height":"4.41%","x":"35.45%","y":"5.31%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"accountname","color":"grey","label text":"Account Name","required":"true","tab index":"1","invalid message":"Required Field"},"ev":{}},"Input#24":{"t":"Input","lX":335,"lY":220,"sX":3,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.12%","height":"4.41%","x":"32%","y":"51.01%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"website","color":"grey","label text":"Website","tab index":"6"},"ev":{}},"Input#25":{"t":"Input","lX":340,"lY":685,"sX":1.35,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.41%","x":"31.06%","y":"55.67%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"status","color":"grey","label text":"Enabled","default value":"true","required":"true","type":"checkbox","tab index":"12"},"ev":{}},"Container#16":{"t":"Container","lX":20,"lY":375,"sX":6.25,"sY":2.85,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"56.51%","height":"23.1%","x":"1.99%","y":"29.9%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Contact Information"},"ev":{}},"Text Area#1":{"t":"Text Area","lX":30,"lY":275,"sX":6.05,"sY":0.85,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"54.7%","height":"7.02%","x":"2.8%","y":"22.12%"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Account Notes","color":"grey","form id":"newUserForm","form key":"notes","tab index":"7"},"ev":{}},"Text Area#2":{"t":"Text Area","lX":45,"lY":525,"sX":5.8,"sY":1.2,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"52.44%","height":"9.91%","x":"4.61%","y":"42.54%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"grey","label text":"Contact Notes","form id":"newUserForm","form key":"contactnotes","tab index":"11"},"ev":{}},"Container#18":{"t":"Container","lX":0,"lY":5,"sX":6.55,"sY":12.2,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"59.22%","height":"143.36%","x":"0.27%","y":"0.8%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"title":"Account Details","color":"grey"},"ev":{}},"Input#8":{"t":"Input","lX":45,"lY":410,"sX":3.1,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"28.03%","height":"6.23%","x":"30.29%","y":"3.65%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"contactname","color":"grey","label text":"Contact Name","required":"true","tab index":"8"},"ev":{}},"Input#11":{"t":"Input","lX":45,"lY":470,"sX":3.1,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"28.11%","height":"4.38%","x":"35.9%","y":"10.7%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"email","color":"grey","label text":"Email","required":"true","tab index":"10"},"ev":{}},"Input#12":{"t":"Input","lX":360,"lY":410,"sX":1.96,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"35.11%","height":"6.18%","x":"32.64%","y":"33.31%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"mobile","color":"grey","label text":"Mobile","required":"true","tab index":"9","type":"phonenumber"},"ev":{}},"Input#22":{"t":"Input","lX":30,"lY":45,"sX":6.05,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"54.7%","height":"6.23%","x":"2.89%","y":"3.73%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"accountname","color":"grey","label text":"Account Name","tab index":"1","disable editing":"true"},"ev":{}},"Input#26":{"t":"Input","lX":335,"lY":220,"sX":3,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.12%","height":"4.38%","x":"32%","y":"51.01%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"website","color":"grey","label text":"Website","tab index":"6"},"ev":{}},"Input#27":{"t":"Input","lX":40,"lY":1170,"sX":1.53,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"28.74%","height":"6.23%","x":"63.22%","y":"55.43%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"status","color":"grey","label text":"Enabled","default value":"true","required":"true","type":"checkbox","tab index":"16"},"ev":{}},"Container#19":{"t":"Container","lX":20,"lY":375,"sX":6.25,"sY":2.85,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"56.51%","height":"33.49%","x":"1.99%","y":"29.9%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Contact Information"},"ev":{}},"Text Area#3":{"t":"Text Area","lX":25,"lY":280,"sX":6.05,"sY":0.85,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"54.7%","height":"7.02%","x":"2.8%","y":"22.12%"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Account Notes","color":"grey","form id":"newUserForm","form key":"notes","tab index":"7"},"ev":{}},"Text Area#4":{"t":"Text Area","lX":45,"lY":525,"sX":5.8,"sY":1.2,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"52.44%","height":"9.98%","x":"4.61%","y":"42.54%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"grey","label text":"Contact Notes","form id":"newUserForm","form key":"contactnotes","tab index":"11"},"ev":{}},"Table#2":{"t":"Table","lX":55,"lY":710,"sX":3.43,"sY":4,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"30.74%","height":"33.03%","x":"5.06%","y":"57.46%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"key,value","title":"Global Variables","colWidths":"0.501466275659824,0.49853372434017595"},"ev":{}},"Input#28":{"t":"Input","lX":420,"lY":730,"sX":1.85,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"16.73%","height":"4.38%","x":"39.96%","y":"56.24%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"globalVars","form key":"key","color":"grey","required":"true","label text":"Key","tab index":"12"},"ev":{}},"Input#29":{"t":"Input","lX":420,"lY":785,"sX":1.85,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"16.73%","height":"4.38%","x":"40.24%","y":"63.45%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"globalVars","form key":"value","color":"grey","required":"true","label text":"Value","tab index":"13"},"ev":{}},"Container#22":{"t":"Container","lX":20,"lY":665,"sX":6.25,"sY":4.7,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"56.51%","height":"38.09%","x":"1.81%","y":"53.89%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Global Variables"},"ev":{}},"Icon#3":{"t":"Icon","lX":515,"lY":850,"sX":0.7,"sY":0.7,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"3.16%","height":"2.89%","x":"49.64%","y":"68.64%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"x-square","outline color":"no outline","tab index":"14"},"ev":{}},"Icon#4":{"t":"Icon","lX":555,"lY":850,"sX":0.7,"sY":0.7,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"3.16%","height":"2.89%","x":"52.98%","y":"68.48%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline","tab index":"15"},"ev":{}},"Container#23":{"t":"Container","lX":415,"lY":710,"sX":1.9,"sY":1.85,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"17.18%","height":"14.99%","x":"40.24%","y":"57.37%"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"color":"grey","title":""},"ev":{}},"Icon#5":{"t":"Icon","lX":565,"lY":675,"sX":0.7,"sY":0.7,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"3.16%","height":"2.84%","x":"53.71%","y":"54.78%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline"},"ev":{}},"Scripting#2":{"t":"Scripting","lX":675,"lY":50,"sX":1,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"OK","width":"9.2%","height":"8.05%","x":"62.37%","y":"4.02%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"","import file":"true","file name":"../../js/settings/account details/details.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{"Devices ":{"channel":"$DEV/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"},"Tenants":{"channel":"$SYS/SYSTEM/GETTENANTS/RESPONSE","event":"feed","important":"false"},"Device Admin":{"channel":"$DEV/ADMIN/DEVICE/RESPONSE","event":"feed","important":"false"}}}}},"accountScreenIcon":{"t":"Icon","lX":570,"lY":15,"sX":0.9,"sY":0.9,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"4.07%","height":"3.62%","x":"51.54%","y":"1.22%"},"ver":"200628c190915","dis":false,"tt":"Account users","a":{"outline color":"no outline","icon file":"people"},"ev":{}},"saveAccoutnDetailsIcon":{"t":"Icon","lX":600,"lY":1165,"sX":1,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"4.52%","height":"5.88%","x":"54.25%","y":"94.41%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline","tab index":"17"},"ev":{}},"userPermsTable":{"t":"Table","lX":410,"lY":510,"sX":2.75,"sY":2.42,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"24.86%","height":"19.98%","x":"36.99%","y":"34.76%"},"ver":"190104c190915","dis":false,"tt":"","a":{"columns":"permission","selectable":"multi","text color":"#000000","row color":"#000000","font size":"16","form id":"details","form key":"userPermsTable","colWidths":"0.8168498168498168","display column titles":"false"},"ev":{"clientEvents":{"inputEvents":{}}}},"deleteAccountIcon":{"t":"Icon","lX":580,"lY":770,"sX":1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOHORIZ,NOVERT","width":"4.57%","height":"4.13%","x":"5.84%","y":"51.86%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"trash","tab index":"17"},"ev":{}},"newUserAccDrop":{"t":"Dropdown","lX":20,"lY":40,"sX":3,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"22.17%","height":"4.13%","x":"1.85%","y":"5.69%"},"ver":"190104c190915","dis":false,"tt":"","a":{"form id":"newUserForm","default options":"","label text":"Account Name","form key":"accountid","tab index":"1"},"ev":{"clientEvents":{"inputEvents":{}}}},"Input#30":{"t":"Input","lX":1040,"lY":505,"sX":2.15,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"12.34%","height":"6.23%","x":"63.05%","y":"41.52%"},"ver":"270520c190915","vis":false,"dis":true,"tt":"","a":{"placeholder":"Department","tab index":"12","label text":"Department","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"stateData/receive value","event":"receive value"}}}}},"Input#31":{"t":"Input","lX":1035,"lY":440,"sX":2.1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"12.05%","height":"6.23%","x":"27.42%","y":"39.59%"},"ver":"270520c190915","vis":false,"dis":true,"tt":"","a":{"placeholder":"Branch","tab index":"13","label text":"Branch","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"stateData/receive value","event":"receive value"}}}}},"Scripting#5":{"t":"Scripting","lX":890,"lY":135,"sX":1,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"OK","width":"8.7%","height":"8.32%","x":"77.39%","y":"11.23%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n Script.on('load', function() {\n\tvar collection = new SensaCollection([\"inc\", \"network\", \"category\", \"className\", \"instance\", \"scope\"], \"inc\");\n\tScript.getChannels(function(eventData) {\n\t\tvar channels = eventData.value;\n\t\tfor (var i = 0; i < channels.length; i++) {\n\t\t\tvar item = channels[i];\n\t\t\titem.inc = i;\n\t\t\tcollection.add(item);\n\t\t}\n\n\t\t// Send to the table.\n\t\tvar table = Script.getWidget(\"channelTable\");\n\t\ttable.receiveValue(collection);\n\t\ttable.subscribe(\"selected\", function(data) {\n\t\t\t// Get first item\n\t\t\tvar first = data.value.getFirst();\n\t\t\tScript.setForm(\"channelForm\", first);\n\t\t});\n\t});\t\n\n\tvar delBtn = Script.getWidget(\"deleteChannelIcon\");\n\tdelBtn.subscribe(\"pressed\", function() {\n\t\tvar form = Script.getFormByKey(\"channelForm\");\n\t\tvar table = Script.getWidget(\"channelTable\");\n\t\t\n\t\tif (form == null) {\n\t\t\talert(\"Please fill out all channel inputs.\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tform.className = form.classname;\n\t\tdelete form.classname;\n\t\t\n\t\tif (confirm(\"Are you sure you want to delete these channel?\")) {\n\t\t\tScript.removeChannel(form);\n\t\t\talert(\"Channel removed\");\n\t\t\tScript.clearForm(\"channelForm\");\n\t\t\t\n\t\t\ttable.deleteAllRows(true);\t\t\n\t\t\t\n\t\t\tScript.getChannels(function(eventData) {\n\t\t\t\tvar channels = eventData.value;\n\t\t\t\tfor (var i = 0; i < channels.length; i++) {\n\t\t\t\t\tvar item = channels[i];\n\t\t\t\t\titem.inc = i;\n\t\t\t\t\tcollection.add(item);\n\t\t\t\t}\n\n\t\t\t\t// Send to the table.\n\t\t\t\tvar table = Script.getWidget(\"channelTable\");\n\t\t\t\ttable.receiveValue(collection);\n\t\t\t\ttable.subscribe(\"selected\", function(data) {\n\t\t\t\t\t// Get first item\n\t\t\t\t\tvar first = data.value.getFirst();\n\t\t\t\t\tScript.setForm(\"channelForm\", first);\n\n\t\t\t\t\tScript.removeChannel(form);\n\t\t\t\t});\n\t\t\t});\t\t\t\n\t\t}\n\t});\n\n\tvar addBtn = Script.getWidget(\"addChannelIcon\");\n\taddBtn.subscribe(\"pressed\", function() {\n\t\tvar form = Script.getFormByKey(\"channelForm\");\n\t\tvar table = Script.getWidget(\"channelTable\");\n\t\tif (form == null) {\n\t\t\talert(\"Please fill out all channel inputs.\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tform.className = form.classname;\n\t\tdelete form.classname;\n\t\tform.value = \"00\";\n\t\tScript.publishToChannel(form);\n\t});\n});","file name":"../../js/settings/manage channels/channels.js"},"ev":{}},"channelTable":{"t":"Table","lX":10,"lY":105,"sX":10.8,"sY":11.25,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"OK","width":"98.09%","height":"90.51%","x":"0.91%","y":"8.56%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"","selectable":"single","display header":"true","title":"All Channels","colWidths":""},"ev":{}},"networkInp":{"t":"Input","lX":10,"lY":40,"sX":1.35,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.41%","x":"1.09%","y":"3.08%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"channelForm","form key":"network","label text":"Network","required":"true","tab index":"1"},"ev":{}},"classInp":{"t":"Input","lX":290,"lY":40,"sX":1.35,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.41%","x":"1.09%","y":"3.08%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"channelForm","form key":"classname","label text":"Class","required":"true","tab index":"3"},"ev":{}},"categoryInp":{"t":"Input","lX":150,"lY":40,"sX":1.35,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.41%","x":"1.09%","y":"3.08%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"channelForm","form key":"category","label text":"Category","required":"true","tab index":"2"},"ev":{}},"instanceInp":{"t":"Input","lX":425,"lY":40,"sX":1.35,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.38%","x":"1.09%","y":"3.08%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"channelForm","form key":"instance","label text":"Instance","required":"true","tab index":"4"},"ev":{}},"scopeInp":{"t":"Input","lX":560,"lY":40,"sX":1.35,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.38%","x":"1.09%","y":"3.08%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"channelForm","form key":"scope","label text":"Scope","required":"true","tab index":"5"},"ev":{}},"deleteChannelIcon":{"t":"Icon","lX":705,"lY":45,"sX":1,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"4.54%","height":"4.16%","x":"64.21%","y":"3.81%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"x-square","tab index":"6"},"ev":{}},"Input#32":{"t":"Input","lX":950,"lY":40,"sX":1.35,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOVERT","width":"12.26%","height":"4.38%","x":"1.09%","y":"3.08%"},"ver":"270520c190915","vis":false,"dis":false,"tt":"","a":{"form id":"channelForm","form key":"inc","label text":"inc","required":"true","tab index":"7"},"ev":{}},"EmailInput":{"t":"Input","lX":20,"lY":340,"sX":3.1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"28.03%","height":"6.29%","x":"2.44%","y":"27.55%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"email","color":"grey","label text":"Email Address","tab index":"6","required":"true"},"ev":{}},"PermsTable":{"t":"Table","lX":25,"lY":590,"sX":2.95,"sY":2.15,"s":"New User","ps":{"enabled":"false","scalingType":"OK","width":"27.14%","height":"17.75%","x":"2.07%","y":"70.36%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"","selectable":"multi","title":"Permissions","form id":"newUserForm","form key":"tablePerms","colWidths":""},"ev":{"clientEvents":{"inputEvents":{"permissions":{"channel":"permissionsTable/receive value","event":"receive value","important":"false"}}}}},"username":{"t":"Input","lX":20,"lY":160,"sX":3.1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"22.91%","height":"6.29%","x":"2%","y":"14.97%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"username","color":"grey","label text":"Email Username","required":"true","tab index":"3"},"ev":{}},"first":{"t":"Input","lX":20,"lY":220,"sX":3.1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"22.91%","height":"4.38%","x":"2%","y":"14.97%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"first","color":"grey","label text":"First Name","required":"true","tab index":"4"},"ev":{}},"last":{"t":"Input","lX":20,"lY":280,"sX":3.1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"22.91%","height":"4.38%","x":"2%","y":"14.97%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"last","color":"grey","label text":"Last Name","required":"true","tab index":"5"},"ev":{}},"password":{"t":"Input","lX":20,"lY":460,"sX":3.1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"22.91%","height":"4.38%","x":"2%","y":"14.97%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"password","color":"grey","label text":"Password","type":"password","required":"true","tab index":"8"},"ev":{}},"confirm":{"t":"Input","lX":20,"lY":525,"sX":3.1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"22.91%","height":"4.38%","x":"1.7%","y":"51.05%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"confirmPassword","color":"grey","label text":"Confirm Password","type":"password","required":"true","tab index":"9"},"ev":{}},"mobile":{"t":"Input","lX":25,"lY":400,"sX":2.18,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.11%","height":"4.38%","x":"2.18%","y":"33.03%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"mobile","color":"grey","label text":"Mobile","type":"phonenumber","required":"true","tab index":"7"},"ev":{"clientEvents":{"outputEvents":{}}}},"AddressInput":{"t":"Input","lX":30,"lY":100,"sX":6.05,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"54.7%","height":"4.41%","x":"2.53%","y":"8.59%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"address","color":"grey","label text":"Street","required":"true","tab index":"2","type":"address","api key":"AIzaSyDPZqlIT0Mx7pQDSBqQto-5mYB4PSBlT0U","invalid message":"Required Field","use full address":"true"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"fillAddress/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"CityInput":{"t":"Input","lX":30,"lY":160,"sX":3.05,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.58%","height":"4.41%","x":"35.9%","y":"10.7%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"city","color":"grey","label text":"City","required":"true","tab index":"3","invalid message":"Required Field"},"ev":{}},"StateInput":{"t":"Input","lX":335,"lY":160,"sX":3,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.12%","height":"4.41%","x":"37.35%","y":"37.49%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"state","color":"grey","label text":"State","required":"true","tab index":"4","invalid message":"Required Field"},"ev":{}},"PostCodeInput":{"t":"Input","lX":30,"lY":220,"sX":3.05,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.58%","height":"4.41%","x":"30.38%","y":"19.29%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"pcode","color":"grey","label text":"Post Code","required":"true","tab index":"5","invalid message":"Required Field"},"ev":{}},"addChannelIcon":{"t":"Icon","lX":765,"lY":45,"sX":1,"sY":1,"s":"Manage Channels","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"4.35%","height":"4.16%","x":"66.52%","y":"3.74%"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline"},"ev":{}},"AccountAddressInput":{"t":"Input","lX":30,"lY":100,"sX":6.05,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"54.7%","height":"6.23%","x":"2.53%","y":"8.59%"},"ver":"270520c190915","z":"140","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"address","color":"grey","label text":"Street","required":"true","tab index":"2","type":"address","api key":"AIzaSyDPZqlIT0Mx7pQDSBqQto-5mYB4PSBlT0U","use full address":"true"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"fillAccountAddress/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"AccountCityInput":{"t":"Input","lX":30,"lY":160,"sX":3.05,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.58%","height":"6.23%","x":"35.9%","y":"10.7%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"city","color":"grey","label text":"City","required":"true","tab index":"3"},"ev":{}},"AccountStateInput":{"t":"Input","lX":335,"lY":160,"sX":3,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.12%","height":"4.41%","x":"37.35%","y":"37.49%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"state","color":"grey","label text":"State","required":"true","tab index":"4"},"ev":{}},"AccountPostCodeInput":{"t":"Input","lX":30,"lY":220,"sX":3.05,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOVERT","width":"27.58%","height":"4.41%","x":"30.38%","y":"19.29%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"newUserForm","form key":"pcode","color":"grey","label text":"Post Code","required":"true","tab index":"5"},"ev":{}},"Button#0":{"t":"Button","lX":25,"lY":820,"sX":1,"sY":1,"s":"New User","ps":{"enabled":"false","scalingType":"OK","width":"7.39%","height":"3.83%","x":"16.63%","y":"61.38%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"black","button name":"Cancel","tab index":"11","jump to screen":"Manage Users"},"ev":{"clientEvents":{"outputEvents":{}}}},"Button#1":{"t":"Button","lX":50,"lY":680,"sX":1,"sY":1,"s":"New Account","ps":{"enabled":"false","scalingType":"OK","width":"9.08%","height":"3.83%","x":"4.54%","y":"56.74%"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"black","button name":"Cancel","tab index":"14","jump to screen":"Manage Users"},"ev":{}},"accessRole":{"t":"Dropdown","lX":50,"lY":385,"sX":2,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"25.54%","height":"6.06%","x":"2.75%","y":"44.37%"},"ver":"190104c210519","dis":false,"tt":"","a":{"label text":"Access Role","tab index":"12","default options":"","placeholder":"Choose Access Role...","form id":"details","form key":"accessrole"},"ev":{}},"tzDrop":{"t":"Dropdown","lX":265,"lY":385,"sX":3.2,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"18.36%","height":"6.06%","x":"47.34%","y":"28.36%"},"ver":"190104c210519","dis":false,"tt":"","a":{"label text":"Time-zone","form id":"details","form key":"timezone","default options":"","disable edit":"false"},"ev":{}},"countryDropdown":{"t":"Dropdown","lX":370,"lY":170,"sX":3.1,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"39.59%","height":"6.06%","x":"21.11%","y":"25.82%"},"ver":"190104c190915","z":"140","dis":false,"tt":"","a":{"default options":"","label text":"Country","form id":"details","form key":"country","tab index":"11","disable edit":"false"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"New Event #1":{"channel":"setCountry/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"createdOn":{"t":"Label","lX":720,"lY":425,"sX":3.65,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"55.64%","height":"3%","x":"7.62%","y":"89.89%"},"ver":"200124c210519","dis":false,"tt":"","a":{"font size":"14","label text":"Created on:&nbsp;[#]","color":"grey"},"ev":{}},"lastLogged":{"t":"Label","lX":720,"lY":400,"sX":4.2,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"38.15%","height":"3%","x":"6.9%","y":"59.97%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Last Logged In:&nbsp;[#]","color":"grey"},"ev":{}},"createdBy":{"t":"Label","lX":720,"lY":450,"sX":3.65,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"55.64%","height":"3%","x":"7.62%","y":"89.89%"},"ver":"200124c210519","dis":false,"tt":"","a":{"font size":"14","label text":"Created By:&nbsp;[#]","color":"grey"},"ev":{}},"lastModified":{"t":"Label","lX":720,"lY":375,"sX":4.2,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"35.68%","height":"3%","x":"61%","y":"39.48%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Last Modified:&nbsp;[#]","color":"grey"},"ev":{}},"Container#12":{"t":"Container","lX":710,"lY":330,"sX":2.95,"sY":2.95,"s":"User Details","ps":{"enabled":false,"scalingType":"OK","width":"25.06%","height":"34.67%","x":"60.32%","y":"38.78%"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Status"},"ev":{}},"emailUser":{"t":"Input","lX":50,"lY":55,"sX":3.25,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"18.71%","height":"6.06%","x":"5.22%","y":"7.07%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Email Username","form id":"details","tab index":"1","label text":"Email Username","color":"grey","form key":"username","disable editing":"true","disable spellcheck":"true"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"firstNameData/receive value","event":"receive value","important":"false"}}}}},"aliasInp":{"t":"Input","lX":50,"lY":440,"sX":3.25,"sY":1,"s":"User Details","ps":{"enabled":false,"scalingType":"NOVERT","width":"41.51%","height":"6.23%","x":"5.24%","y":"84.37%"},"ver":"270520c190915","dis":false,"tt":"","a":{"placeholder":"Alias","form id":"details","tab index":"5","label text":"Alias","color":"grey","form key":"alias","required":"true"},"ev":{"clientEvents":{"inputEvents":{"New Event #0":{"channel":"aliasData/receive value","event":"receive value","important":"false"}}}}},"deleteAccountDetailsIcon":{"t":"Icon","lX":550,"lY":1165,"sX":1,"sY":1,"s":"Account Details","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"6.39%","height":"5.88%","x":"70.24%","y":"136.9%"},"ver":"200628c190915","dis":false,"tt":"","a":{"outline color":"no outline","tab index":"17","icon file":"trash"},"ev":{"clientEvents":{"outputEvents":{"Delete Account":{"channel":"deleteAccountDetailsPressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}}},"screens":{"Manage Models":{"index":0,"icon":"important_devices","meta":""},"Manage Devices":{"index":1,"icon":"devices_other","meta":""},"Configurations":{"index":2,"icon":"settings","meta":""},"Server Console":{"index":3,"icon":"computer","meta":""},"Manage Sensors":{"index":4,"icon":"wifi_tethering","meta":""},"Manage Users":{"index":5,"icon":"supervisor_account","meta":""},"User Details":{"index":6,"icon":"assignment_ind","meta":""},"New User":{"index":7,"icon":"person_add","meta":""},"New Account":{"index":8,"icon":"group_add","meta":""},"Account Details":{"index":9,"icon":"account_balance","meta":""},"Manage Channels":{"index":10,"icon":"widgets","meta":""}},"meta":""}