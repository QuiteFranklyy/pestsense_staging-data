{"device":"TABLET","widgets":{"productsTable":{"t":"Table","lX":80,"lY":140,"sX":6.71,"sY":6.54,"s":"Manage Products","ps":{"enabled":true,"scalingType":"OK","width":"50% - 200px","height":"100% - 220px","x":"80px","y":"140px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"name,expiry,weight per block","selectable":"multi","display header":"true","title":"All Products","form id":"products","form key":"all","enable search":"true","colWidths":"0.4155712841253792,0.16582406471183014,0.36804853387259856","auto scroll":"false"},"ev":{"clientEvents":{"inputEvents":{"New Event #1":{"channel":"masterDelRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{}}}},"companyProductsTable":{"t":"Table","lX":1172,"lY":140,"sX":8.12,"sY":6.54,"s":"Manage Products","ps":{"enabled":true,"scalingType":"OK","width":"50% - 60px","height":"100% - 220px","x":"50% - 20px","y":"140px"},"ver":"190104c210519","dis":false,"tt":"","a":{"columns":"name,created on,created by,expiry,weight per block","selectable":"multi + single","text color":"#000000","row color":"#000000","display header":"true","title":"Company Products","form id":"products","form key":"company","enable search":"true","colWidths":"0.1911504424778761,0.1911504424778761,0.1911504424778761,0.13805309734513274,0.24424778761061947"},"ev":{"clientEvents":{"inputEvents":{"Delete Rows":{"channel":"compDelRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Select Row":{"channel":"selectCompRow/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Icon#0":{"t":"Icon","lX":1953,"lY":85,"sX":1,"sY":1,"s":"Manage Products","ps":{"enabled":true,"scalingType":"NOHORIZ,NOVERT","width":"50px","height":"5.2%","x":"100% - 430px","y":"85px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"plus-square"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"newProdIcon/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"companyDropdown":{"t":"Dropdown","lX":2005,"lY":70,"sX":3,"sY":1,"s":"Manage Products","ps":{"enabled":true,"scalingType":"NOVERT","width":"300px","height":"6.26%","x":"100% - 378px","y":"70px"},"ver":"190104c210519","dis":false,"tt":"","a":{"label text":"Company","default options":"","form id":"products","form key":"compDrop"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"compSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Container#1":{"t":"Container","lX":40,"lY":40,"sX":16.63,"sY":7.94,"s":"Manage Products","ps":{"enabled":true,"scalingType":"OK","width":"100%- 80px","height":"100%- 80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Manage Company Products","color":"grey"},"ev":{}},"addToCompanyProducts":{"t":"Button","lX":1074,"lY":300,"sX":0.7,"sY":0.87,"s":"Manage Products","ps":{"enabled":true,"scalingType":"OK","width":"70px","height":"40px","x":"50% - 110px","y":"300px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":">>","color":"grey"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"addCompanyProducts/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addToProducts":{"t":"Button","lX":1074,"lY":370,"sX":0.7,"sY":0.87,"s":"Manage Products","ps":{"enabled":true,"scalingType":"OK","width":"70px","height":"40px","x":"50% - 110px","y":"370px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"<<","color":"grey"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"removeCompanyProducts/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"manageProductScript":{"t":"Scripting","lX":175,"lY":560,"sX":1,"sY":1,"s":"Manage Products","ps":{"enabled":true,"scalingType":"OK","width":"9.07%","height":"8.26%","x":"7.25%","y":"66.47%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","file name":"../../js/settings/manage products/manageProducts.js","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n var productCollection;\n var compProductCollection;\n var currentCompany;\n \n const productsTable = Script.getWidget(\"productsTable\");\n const compProductsTable = Script.getWidget(\"companyProductsTable\");\n const compDropdown = Script.getWidget(\"companyDropdown\");\n\nScript.on(\"init\", function() {\n\tClient.setScreenVisible(\"Edit Product\", false);\n\tClient.setScreenVisible(\"Edit User Role\", false);\n\tClient.setScreenVisible(\"Edit Error Codes\", false);\n\tClient.setScreenVisible(\"Edit Company\", false);\n\tClient.setScreenVisible(\"Edit Application Settings\", false);\n\tClient.setScreenVisible(\"Edit Model Type\", false);\n\tClient.setScreenVisible(\"Edit Model\", false);\n\tClient.setScreenVisible(\"Edit User Access Role\", false);\n});\n \n Script.on('load', function() {\n\t Database.readRecords(\"rodent\", \"Companies\", function(eventData) {\n\t\t let companyCollection = SensaCollection.load(eventData.value);\n \n\t\t Database.readRecords(\"rodent\", \"UserRoles\", function(eventData) {\n\t\t\t let userCollection = SensaCollection.load(eventData.value);\n\t\t\t let filteredUsers = userCollection.query((record, pk) => {\n\t\t\t\t if (record['User'] == Client.getUser()) {\n\t\t\t\t\t return true;\n\t\t\t\t }\n\t\t\t });\n\t\t\t var userCompanies = filteredUsers.getColumn(\"CompanyId\");\n \n\t\t\t let filteredCompanies = companyCollection.query((record, pk) => {\n\t\t\t\t //if (userCompanies.includes(pk)) {\n\t\t\t\t\t return true;\n\t\t\t\t //}\n\t\t\t });\n \n\t\t\t let compNames = filteredCompanies.getColumn(\"Name\");\n\t\t\t let compLoc = filteredCompanies.getColumn(\"Address\");\n\t\t\t let compIds = filteredCompanies.getColumn(\"Id\");\n\t \n\t\t\t // Get from state if coming back from editing/creating\n\t\t\t currentCompany = Script.getState(\"currentCompany\");\n\t\t\t if (currentCompany == null) {\n\t\t\t\t currentCompany = compIds[0];\n\t\t\t }\n\t\t\t \n \n\t\t\t let compObj = {};\n\t\t\t compIds.map((comp, idx) => {\n\t\t\t\t compObj[comp] = compNames[idx] + \", \" + compLoc[idx];\n\t\t\t });\n \n\t\t\t Object.keys(compObj).forEach((comp, idx) => {\n\t\t\t\t filteredCompanies.set({\"Id\": comp, \"Name\": compObj[comp]});\n\t\t\t });\n \n\t\t\t filteredCompanies.renameColumn(\"Name\", \"text\");\n\t\t\t filteredCompanies.renameColumn(\"Id\", \"value\");\n \n\t\t\t compDropdown.receiveTextValues(filteredCompanies);\n\t\t\t compDropdown.receiveValue(compObj[currentCompany]);\n\t\t\t \n\t\t\t Database.readRecords(\"rodent\", \"CompanyProducts\", function(eventData) {\n\t\t\t\t compProductCollection = SensaCollection.load(eventData.value);\n\t\t\t\t updateTable();\n\t\t\t });\n\t\t });\n\t });\n\t \n\t Database.readRecords(\"rodent\", \"Products\", function(eventData) {\n\t\t productCollection = SensaCollection.load(eventData.value);\n\t\t let filteredComps = productCollection.query((record, pk) => {\n\t\t\t if (record['Status'] == '1'){\n\t\t\t\t return true;\n\t\t\t }\n\t\t });\n\t\t filteredComps.renameColumn(\"WeightPerBlock\", \"Weight Per Block\");\n\t\t ClientEvents.publish(\"masterDelRows\", \"\");\n\t\t //console.log(\"Working table object: \" + JSON.stringify(filteredComps,null, 4));\n\t\t productsTable.receiveValue(filteredComps);\n\t });\n });\n \n ClientEvents.subscribe(\"addCompanyProducts\", addProductToCompany);\n ClientEvents.subscribe(\"removeCompanyProducts\", removeProductFromCompany);\n ClientEvents.subscribe(\"compSelected\", changeCompany);\n ClientEvents.subscribe(\"selectCompRow\", editProduct);\n ClientEvents.subscribe(\"newProdIcon\", createNewProduct);\n \n function addProductToCompany() {\n\t var formData = Script.getFormByKey(\"products\");\n\t var compData = formData.all;\n\t //compData.renameColumn(\"Weight Per Block\", \"WeightPerBlock\");\n\t //console.log(\"Data in the compound table \" + JSON.stringify(compData, null, 4));\n\t compData.addColumn(\"companyid\");\n\t \n\t var dbReq = {};\n\t var compProdCount = Object.keys(compProductCollection.data).length;\n\t let today = new Date();\n\t today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\t \n\t compData.forEach(function(kvpair, pk) {\n\t\t var prodObj = {};\n\t\t // Check if product already exists with status = 0\n\t\t let matchingProd = compProductCollection.query((record, pk) => {\n\t\t\t if ((record['CompanyId'] == Script.getFormByKey(\"products\").compDrop) &&\n\t\t\t\t (record['Name'] == kvpair.name) &&\n\t\t\t\t (record['Expiry'] == kvpair.expiry) &&\n\t\t\t\t (record['WeightPerBlock'] == kvpair.weightperblock) &&\n\t\t\t\t (record['Status'] == '0')) {\n\t\t\t\t return true;\n\t\t\t }\n\t\t });\n\t\t if (Object.keys(matchingProd.data).length > 0) {\n\t\t\t // found match, override\n\t\t\t prodObj.Id = Object.keys(matchingProd.data)[0];\n\t\t\t \n\t\t } else {\n\t\t\t prodObj.Id = `${++compProdCount}`;\n\t\t }\n\t\t prodObj.Name = kvpair.name;\n\t\t prodObj.Owner = kvpair.owner;\n\t\t prodObj.Status = kvpair.status;\n\t\t prodObj.CreatedOn = today;\n\t\t prodObj.UpdatedOn = today;\n\t\t prodObj.CreatedBy = Client.getUser();\n\t\t prodObj.UpdatedBy = Client.getUser();\n\t\t prodObj.CompanyId = formData.compDrop;\n\t\t prodObj.Expiry = kvpair.expiry;\n\t\t prodObj.LowerThreshold = kvpair.lowerthreshold;\n\t\t prodObj.UpperThreshold = kvpair.upperthreshold;\n\t\t prodObj.WeightPerBlock = kvpair.weightperblock;\n\t\t dbReq[prodObj.Id] = prodObj;\n\t });\n\t Database.saveRecord(\"rodent\", \"CompanyProducts\", dbReq, () => {\n\t\t Database.readRecords(\"rodent\", \"CompanyProducts\", function(eventData) {\n\t\t\t compProductCollection = SensaCollection.load(eventData.value);\n\t\t\t updateTable();\n\t\t });\n\t });\n }\n \n function updateTable() {\n\t let filteredComps = compProductCollection.query((record, pk) => {\n\t\t if ((record['CompanyId'] == currentCompany) &&\n\t\t\t (record['Status'] == '1')){\n\t\t\t return true;\n\t\t }\n\t });\n\t \n\t/* //console.log(\"Data in the compound is \" + JSON.stringify(filteredComps, null, 4));\n\t filteredComps.renameColumn(\"CreatedOn\", \"Created On\");\n\t filteredComps.renameColumn(\"CreatedBy\", \"Created By\");\n\t filteredComps.renameColumn(\"WeightPerBlock\", \"Weight Per Block\");\n\t //filteredComps.renameColumn(\"WeightPerBlock\", \"weight per block\");\n\t //console.log(\" data in the compound is \" + JSON.stringify(filteredComps, null, 4));\n\t //filteredComps.renameColumn(\"CreatedOn\", \"Created On\");\n\t ClientEvents.publish(\"compDelRows\", \"\"); */\n\t \n\t //console.log(\"Data in the compound is \" + JSON.stringify(filteredComps, null, 4));\n\t //console.log(\"#1 data in the compound is \" + JSON.stringify(filteredComps, null, 4));\n\t filteredComps.renameColumn(\"CreatedOn\", \"Created On\");\n\t filteredComps.renameColumn(\"CreatedBy\", \"Created By\");\n\t filteredComps.renameColumn(\"WeightPerBlock\", \"Weight Per Block\");\n\t //console.log(\"#2 data in the compound is \" + JSON.stringify(filteredComps, null, 4));\n\t //filteredComps.renameColumn(\"CreatedOn\", \"Created On\");\n\t ClientEvents.publish(\"compDelRows\", \"\");\n\n\t compProductsTable.receiveValue(filteredComps);\n }\n \n function removeProductFromCompany() {\n\t var formData = Script.getFormByKey(\"products\");\n\t var ids = formData.company.getColumn(\"id\");\n\t for (var i = 0; i < ids.length; i++) {\n\t\t compProductsTable.deleteRows(ids[i]);\n\t\t let req = {};\n\t\t req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t Database.updateRecord(\"rodent\", \"CompanyProducts\", req);\n\t }\n }\n \n async function changeCompany(selected) {\n\t currentCompany = selected.value;\n\t \n\t Database.readRecords(\"rodent\", \"CompanyProducts\", function(eventData) {\n\t\t compProductCollection = SensaCollection.load(eventData.value);\n\t\t Script.setState(\"currentCompany\", currentCompany);\n\t\t updateTable();\n\t });\n }\n \n function editProduct(eventData) {\n\t Script.setState(\"compProductInfo\", eventData.value);\n     Script.setState(\"masterProduct\", \"product\"); \n\t Script.setState(\"modifyType\", \"edit\");\n\t Client.jumpToScreen(\"Edit Product\");\n }\n \n function createNewProduct(eventData) {\n\t Script.setState(\"modifyType\", \"add\");\n     Script.setState(\"masterProduct\", \"product\"); \n\t Script.setState(\"companyId\", currentCompany);\n\t Client.jumpToScreen(\"Edit Product\");\n }"},"ev":{"serverEvents":{"inputEvents":{"database":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed"}}}}},"Input#2":{"t":"Input","lX":80,"lY":100,"sX":3.5,"sY":1,"s":"Edit Product","ps":{"enabled":"true","scalingType":"NOVERT","width":"350px","height":"4.19%","x":"80px","y":"100px"},"ver":"270520c210519","dis":false,"tt":"","a":{"label text":"Name","color":"grey","form id":"editProduct","form key":"Name","required":"true"},"ev":{}},"Input#4":{"t":"Input","lX":80,"lY":200,"sX":3.5,"sY":1,"s":"Edit Product","ps":{"enabled":"true","scalingType":"NOVERT","width":"350px","height":"4.19%","x":"80px","y":"200px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"number","label text":"Weight Per Block","color":"grey","form id":"editProduct","form key":"WeightPerBlock","required":"true"},"ev":{}},"Input#5":{"t":"Input","lX":80,"lY":300,"sX":3.5,"sY":1,"s":"Edit Product","ps":{"enabled":"true","scalingType":"NOVERT","width":"350px","height":"4.19%","x":"80px","y":"300px"},"ver":"270520c210519","dis":false,"tt":"","a":{"label text":"Expiry","color":"grey","type":"number","form id":"editProduct","form key":"Expiry","required":"true"},"ev":{}},"Input#6":{"t":"Input","lX":80,"lY":380,"sX":1,"sY":1,"s":"Edit Product","ps":{"enabled":"true","scalingType":"NOVERT","width":"100px","height":"4.19%","x":"80px","y":"380px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","label text":"Enabled","color":"grey","checkbox label side":"right","form id":"editProduct","form key":"Status","default value":"1"},"ev":{}},"productFormContainer":{"t":"Container","lX":40,"lY":40,"sX":4.5,"sY":4.2,"s":"Edit Product","ps":{"enabled":"true","scalingType":"OK","width":"450px","height":"420px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Edit Product"},"ev":{}},"prodSubmitButton":{"t":"Button","lX":320,"lY":380,"sX":1,"sY":1.09,"s":"Edit Product","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"320px","y":"380px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"submitEdit":{"channel":"finishEditProduct/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"masterProductsTable":{"t":"Table","lX":80,"lY":120,"sX":13.43,"sY":1.1,"s":"Manage Master Products","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 200px","x":"80px","y":"120px"},"ver":"190104c210519","dis":false,"tt":"","a":{"columns":"name,expiry,weight per block","text color":"#000000","row color":"#000000","selectable":"multi + single","form id":"master","form key":"products","title":"All Products","display header":"true","colWidths":"0.325078793336335,0.32687978388113464,0.3255290409725349"},"ev":{"clientEvents":{"inputEvents":{"New Event #1":{"channel":"compDelRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Selected Product":{"channel":"productSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"deleteMasterProdIcon":{"t":"Icon","lX":2178,"lY":70,"sX":1,"sY":1,"s":"Manage Master Products","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"7.14%","x":"100% - 190px","y":"70px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"trash","outline color":"no outline","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"removeMasterProducts/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addMasterProdIcon":{"t":"Icon","lX":2238,"lY":70,"sX":1,"sY":1,"s":"Manage Master Products","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"5.2%","x":"100% - 130px","y":"70px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"plus-square"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"addNewMasterProduct/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"userRolesTable":{"t":"Table","lX":80,"lY":100,"sX":22.23,"sY":6.66,"s":"User Roles","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 180px","x":"80px","y":"100px"},"ver":"190104c210519","dis":false,"tt":"","a":{"form id":"roles","form key":"users","display header":"true","text color":"#000000","row color":"#000000","columns":"user,updated by,updated on,is admin,is primary","title":"User Roles","selectable":"multi + single","colWidths":"0.1940567312021612,0.194957226474561,0.1990094552003602,0.1940567312021612,0.19540747411076093"},"ev":{"clientEvents":{"inputEvents":{"New Event #1":{"channel":"usrDelRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"New Event #2":{"channel":"userEdit/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"usersCompanyDropdown":{"t":"Dropdown","lX":1998,"lY":84,"sX":3,"sY":1,"s":"User Roles","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"6.26%","x":"100% - 385px","y":"84px"},"ver":"190104c210519","dis":false,"tt":"","a":{"default options":""},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"usrCcompSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Icon#1":{"t":"Icon","lX":2193,"lY":50,"sX":1,"sY":1,"s":"User Roles","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"5.08%","x":"100% - 190px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"trash","outline color":"no outline","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteUsers/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Scripting#7":{"t":"Scripting","lX":385,"lY":365,"sX":1,"sY":1,"s":"Edit User Role","ps":{"enabled":false,"scalingType":"OK","width":"4.2%","height":"7.9%","x":"16.07%","y":"49.45%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar userId;\nvar modifyType;\nvar companyId;\nvar userData;\n\nconst userFormContainer = Script.getWidget(\"userRoleContainer\");\nconst userSubmitButton = Script.getWidget(\"userRoleSubmit\");\nconst editUserSelect = Script.getWidget(\"editUserSelect\");\nconst editUserCompSelect = Script.getWidget(\"editUserCompSelect\");\nconst editUserIsAdmin = Script.getWidget(\"editUserIsAdmin\");\n//IsPrimaryCheck\nconst IsPrimaryCheck = Script.getWidget(\"IsPrimaryCheck\");\nconst cancelRoleButton = Script.getWidget(\"cancelRoleButton\");\n\nScript.on('load', function() {\n\t\n\t  //Script.setState(\"userRoleInfo\", eventData.value);\n\t //console.log(\"User event data \" + JSON.stringify(eventData.value, null, 4));\n    //Script.setState(\"companyId\", currentCompany);\n\tmodifyType = Script.getState(\"modifyType\");\n\tcancelRoleButton.subscribe(\"pressed\", ()=> {\n\t\tClient.jumpToScreen(\"User Roles\");\n\t});\n\tif (modifyType == \"add\") {\n        userFormContainer.setTitle(\"New User Role\");\n\t\t\n\t\tDatabase.readRecords(\"Directory\", \"users\", function(eventData) {\n\t\t\tlet userCollection = SensaCollection.load(eventData.value);\n\t\t\teditUserSelect.receiveList(userCollection.getColumn(\"username\"));\n\t\t});\n    } else if (modifyType == \"edit\") {\n        userData = Script.getState(\"userRoleInfo\");\n\t\t//console.log(\"user role is \" + JSON.stringify(userData, null, 4));\n\t\tuserFormContainer.setTitle(\"Edit User Role\");\n\t\tIsPrimaryCheck.receiveValue(userData.getColumn(\"is primary\")[0]);\n\t\teditUserIsAdmin.receiveValue(userData.getColumn(\"is admin\")[0]);\n\t\t\n\t\t//userFormContainer.setTitle(\"Edit User Role\");\n    }\n\t\n\tDatabase.readRecords(\"rodent\", \"Companies\", function(eventData) {\n\t\tlet companyCollection = SensaCollection.load(eventData.value);\n\t\tDatabase.readRecords(\"rodent\", \"UserRoles\", function(eventData) {\n\t\t\t let userCollection = SensaCollection.load(eventData.value);\n\t\t\t let filteredUsers = userCollection.query((record, pk) => {\n\t\t\t\t if (record['User'] == Client.getUser()) {\n\t\t\t\t\t return true;\n\t\t\t\t }\n\t\t\t });\n\t\t\t var userCompanies = filteredUsers.getColumn(\"CompanyId\");\n\t\t\t\n\t\t\tlet filteredCompanies = companyCollection;\n\t\t\t// if a user is NOT an admin, only show the companies that the user is a part of\n\t\t\t if (!(Client.getUser() == \"admin\" || Client.getUser() == \"devadmin@pestsense.com\")) {\n\t\t\t\t filteredCompanies = companyCollection.query((record, pk) => {\n\t\t\t\t\t if (userCompanies.includes(pk)) {\n\t\t\t\t\t\t return true;\n\t\t\t\t\t }\n\t\t\t\t });\n\t\t\t }\n\n\t\t\t let compNames = filteredCompanies.getColumn(\"Name\");\n\t\t\t let compLoc = filteredCompanies.getColumn(\"Address\");\n\t\t\t let compIds = filteredCompanies.getColumn(\"Id\");\n\n\t\t\t companyId = Script.getState(\"companyId\");\n\t\t\t if (companyId == null) {\n\t\t\t\t companyId = compIds[0];\n\t\t\t }\n\n\t\t\t let compObj = {};\n\t\t\t compIds.map((comp, idx) => {\n\t\t\t\t compObj[comp] = compNames[idx] + \", \" + compLoc[idx];\n\t\t\t });\n\n\t\t\t Object.keys(compObj).forEach((comp, idx) => {\n\t\t\t\t filteredCompanies.set({\"Id\": comp, \"Name\": compObj[comp]});\n\t\t\t });\n\n\t\t\t filteredCompanies.renameColumn(\"Name\", \"text\");\n\t\t\t filteredCompanies.renameColumn(\"Id\", \"value\");\n\n\t\t\t editUserCompSelect.receiveTextValues(filteredCompanies);\n\t\t\t editUserCompSelect.receiveValue(filteredCompanies.get(companyId).text);\n\t\t\tif (userData != undefined) {\n\t\t\t\teditUserSelect.receiveValue(userData.getColumn(\"user\")[0]);\n\t\t\t\t//Script.disableWidget(\"editUserSelect\");\n\t\t\t\tuserId = userData.getColumn(\"id\")[0];\n\t\t\t}\n\t\t });\n\t});\n});\n\nClientEvents.subscribe(\"finishEditUser\", function() {\n\tswitch (modifyType) {\n\t\tcase 'edit':\n\t\t\thandleEdit();\n\t\t\tbreak;\n\t\tcase 'add':\n\t\t\thandleCreate();\n\t\t\tbreak;\n\t}\n});\n\nfunction handleEdit() {\n\tvar formObj = Script.getFormByKey(\"editUser\");\n\tif (formObj == undefined) {\n\t\talert(\"Please fill out all required fields\");\n\t\treturn;\n\t}\n\tvar dbReq = {};\n\tformObj.Id = userId;\n\tlet today = new Date();\n\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\tformObj.UpdatedOn = today;\n\tformObj.UpdatedBy = Client.getUser();\n\tformObj.IsAdmin = +formObj.IsAdmin;\n\tformObj.IsPrimary = +formObj.IsPrimary;\n\tdbReq[userId] = formObj;\n\t\n\tDatabase.updateRecord(\"rodent\", \"UserRoles\", dbReq, () => {\n\t\tScript.setState(\"currentCompany\", formObj.CompanyId);\n\t\t// Update the other records with this user to account for the IsAdmin field\n\t\tDatabase.readRecords(\"rodent\", \"UserRoles\", function (eventData) {\n\t\t\teventData.value.forEach((record, pk) => {\n\t\t\t\tif (record.Id != userId) {\n\t\t\t\t\tlet newReq = {};\n\t\t\t\t\trecord.IsAdmin = +formObj.IsAdmin;\n\t\t\t\t\tnewReq[userId] = record;\n\t\t\t\t\tDatabase.updateRecord(\"rodent\", \"UserRoles\", newReq);\n\t\t\t\t}\n\t\t\t});\n\t\t\tClient.jumpToScreen(\"User Roles\");\n\t\t}, {filter: \n\t\t\t`User='${userData.getColumn(\"user\")[0]}'`\n\t\t   }\n\t    );\n    });\n}\n\nfunction handleCreate() {\n\tDatabase.readRecords(\"rodent\", \"UserRoles\", function(eventData) {\n\t\tlet userRoleCollection = SensaCollection.load(eventData.value);\n\t\tvar formObj = Script.getFormByKey(\"editUser\");\n\t\tif (formObj == undefined) {\n\t\t\talert(\"Please fill out all required fields\");\n\t\t\treturn;\n\t\t}\n\t\tvar dbReq = {};\n\t\t\n\t\tlet today = new Date();\n\t\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\t\tlet id = +userRoleCollection.getColumn(\"Id\").at(-1) + 1;\n\t\tformObj.Id = `${id}`;\n\t\tformObj.CreatedOn = today;\n\t\tformObj.UpdatedOn = today;\n\t\tformObj.Owner = Client.getUser();\n\t\tformObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n\t\tformObj.IsAdmin = +formObj.IsAdmin;\n\t\tconsole.log(\"data before \" + formObj.IsPrimary);\n\t\tformObj.IsPrimary = +formObj.IsPrimary;\n\t\n\t\tconsole.log(\"data after \" + formObj.IsPrimary);\n\t\t\n\t\tdbReq[id] = formObj;\n\t\tDatabase.createRecords(\"rodent\", \"UserRoles\", dbReq, () => {\n             Script.setState(\"currentCompany\", formObj.CompanyId);\n\t\t\t Database.readRecords(\"rodent\", \"UserRoles\", function (eventData) {\n\t\t\t\teventData.value.forEach((record, pk) => {\n\t\t\t\t\tif (record.Id != userId) {\n\t\t\t\t\t\tlet newReq = {};\n\t\t\t\t\t\trecord.IsAdmin = +formObj.IsAdmin;\n\t\t\t\t\t\tnewReq[userId] = record;\n\t\t\t\t\t\tDatabase.updateRecord(\"rodent\", \"UserRoles\", newReq);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tClient.jumpToScreen(\"User Roles\");\n\t\t\t}, {filter: \n\t\t\t\t`User='${formObj.User}'`\n\t\t\t   }\n\t\t\t);\n         });\n\t});\n}"},"ev":{}},"userRoleContainer":{"t":"Container","lX":40,"lY":40,"sX":6.5,"sY":3.2,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"OK","width":"650px","height":"320px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Title"},"ev":{}},"userRoleSubmit":{"t":"Button","lX":525,"lY":240,"sX":1,"sY":1.09,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"OK","width":"100px","height":"50px","x":"525px","y":"260px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"finishEditUser/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"editUserCompSelect":{"t":"Dropdown","lX":80,"lY":170,"sX":5.5,"sY":1,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"170px"},"ver":"190104c210519","dis":false,"tt":"","a":{"label text":"Company","form id":"editUser","form key":"CompanyId","default options":""},"ev":{}},"editUserSelect":{"t":"Dropdown","lX":80,"lY":100,"sX":5.5,"sY":1,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"100px"},"ver":"190104c210519","dis":false,"tt":"","a":{"label text":"User","form id":"editUser","form key":"User","default options":""},"ev":{}},"Icon#2":{"t":"Icon","lX":1133,"lY":50,"sX":1,"sY":1,"s":"User Roles","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"6.89%","x":"100% - 130px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"newUser/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Scripting#0":{"t":"Scripting","lX":30,"lY":605,"sX":1,"sY":1,"s":"Error Codes","ps":{"enabled":"false","scalingType":"OK","width":"9.07%","height":"8.26%","x":"1.36%","y":"62.76%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nconst errorCodesTable = Script.getWidget(\"errorCodesTable\");\nconst troubleTable = Script.getWidget(\"troubleTable\");\nconst deviceModelDropdown = Script.getWidget(\"deviceModelDropdown\");\nconst errorColumns = [\"Id\", \"Code Id\", \"Description\", \"Troubleshooting Help\", \"Code Type\", \"CreatedBy\", \"UpdatedBy\", \"CreatedOn\", \"UpdatedOn\", \"Out of bounds\", \"Status\", \"Model Id\"];\nconst fileColumns = [\"Id\", \"File Location\", \"CreatedBy\", \"UpdatedBy\", \"CreatedAt\", \"Status\"];\n\nvar errorCollection;\nvar troubleFilesCollection;\n\nvar status = \"Show Active\";\nvar deviceModel;\nvar deviceModelMap = {};\n\nconst deleteCodes = {\n    \"errorCodesTable\": \"compDelErrorRows\",\n    \"troubleTable\": \"compDelFileRows\"\n}\n\nClientEvents.subscribe(\"errorCodeSelected\", editErrorCode);\nClientEvents.subscribe(\"addErrorCode\", createNewErrorCode);\nClientEvents.subscribe(\"troubleFileSelected\", editTroubleFile);\nClientEvents.subscribe(\"addTroubleFile\", createNewTroubleFile);\nClientEvents.subscribe(\"deleteErrorCodes\", removeErrorCode);\nClientEvents.subscribe(\"deleteTroubleFiles\", removeTroubleFiles);\nClientEvents.subscribe(\"deviceModelSelected\", setDeviceModel);\n\t\t\t\t\t   \nClientEvents.subscribe(\"changeActiveError\", (eventData) => {\n    status = eventData.value; \n    Database.readRecords(\"rodent\", \"ErrorCodes\", function(eventData) {\n        errorCollection = SensaCollection.load(eventData.value);\n        errorCollection.setColumns(errorColumns);\n        updateTable(errorCodesTable, errorCollection);\n    });\n    if (status !== \"Show Active\") {\n        // Do not attempt to delete inactive elements\n        Script.hideWidget(\"deleteErrorCodeIcon\");\n    } else {\n        // Re-enable widgets if hidden before\n        Script.showWidget(\"deleteErrorCodeIcon\");\n    }\n});\n\nClientEvents.subscribe(\"changeActiveFiles\", (eventData) => {\n    status = eventData.value; \n    Database.readRecords(\"rodent\", \"TroubleshootingFiles\", function(eventData) {\n        troubleFilesCollection = SensaCollection.load(eventData.value);\n        troubleFilesCollection.setColumns(fileColumns);\n        updateTable(troubleTable, troubleFilesCollection);\n    });\n    if (status !== \"Show Active\") {\n        // Do not attempt to delete inactive elements\n        Script.hideWidget(\"deleteTroubleFilesIcon\");\n    } else {\n        // Re-enable widgets if hidden before\n        Script.showWidget(\"deleteTroubleFilesIcon\");\n    }\n});\n\nScript.on('load', function() {\n\n    Database.readRecords(\"rodent\", \"ErrorCodes\", function(eventData) {\n        errorCollection = SensaCollection.load(eventData.value);\n        errorCollection.setColumns(errorColumns);\n\t\tDatabase.readRecords(\"rodent\", \"Model\", function (eventData) {\n\t\t\tlet modelIds = eventData.value.getColumn(\"Id\");\n\t\t\tlet modelNames = eventData.value.getColumn(\"Name\");\n\t\t\tmodelNames.forEach((key, i) => deviceModelMap[key] = modelIds[i]);\n\t\t\t\n\t\t\tdeviceModelDropdown.receiveList(modelNames);\n\t\t\tdeviceModel = modelIds[0];\n\t\t\tScript.setState(\"errorDeviceModel\", deviceModel);\n\t\t\tupdateTable(errorCodesTable, errorCollection);\n\t\t});\n    });\n\n    Database.readRecords(\"rodent\", \"TroubleshootingFiles\", function(eventData) {\n        troubleFilesCollection = SensaCollection.load(eventData.value);\n        troubleFilesCollection.setColumns(fileColumns)\n        updateTable(troubleTable, troubleFilesCollection);\n    });\n\n});\n\nfunction setDeviceModel(eventData) {\n\t\n\tdeviceModel = deviceModelMap[eventData.value];\n\t\n\tupdateTable(errorCodesTable, errorCollection);\n\tScript.setState(\"errorDeviceModel\", deviceModel); \n}\n\nfunction updateTable(table, collection) {\n\t\n\tconsole.log(\" receive are \" + JSON.stringify(collection, null, 4));\n    let filteredCollection = collection.query((record, pk) => {\n\t\tif (record[\"Model Id\"] == undefined) {\n\t\t\t// Troubleshooting file\n\t\t\tif (record['Status'] == (status == \"Show Active\")){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Error Code\n\t\t\tif (record['Status'] == (status == \"Show Active\") && record[\"Model Id\"] == deviceModel){\n\t\t\t\treturn true;\n\t\t\t} \n\t\t\t\n\t\t}\n\t\t\n    });\n    \n    ClientEvents.publish(deleteCodes[table._name], \"\");\n    table.receiveValue(filteredCollection);\n}\n\nfunction editErrorCode(eventData) {\n    Script.setState(\"errorData\", eventData.value);\n    Script.setState(\"modifyType\", \"edit\");\n    Client.jumpToScreen(\"Edit Error Codes\");\n}\n\nfunction editTroubleFile(eventData) {\n    Script.setState(\"fileData\", eventData.value);\n    Script.setState(\"modifyType\", \"edit_file\");\n    Client.jumpToScreen(\"Edit Error Codes\");\n}\n\nfunction createNewErrorCode() {\n    Script.setState(\"modifyType\", \"add\");\n    Client.jumpToScreen(\"Edit Error Codes\");\n}\n\nfunction createNewTroubleFile() {\n    Script.setState(\"modifyType\", \"add_file\");\n    Client.jumpToScreen(\"Edit Error Codes\");\n}\n\nfunction removeErrorCode() {\n    var formData = Script.getFormByKey(\"errors\");\n    var ids = formData.codes.getColumn(\"id\");\n    /*for (var i = 0; i < ids.length; i++) {\n        errorCodesTable.deleteRows(ids[i]);\n        let req = {};\n        req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n        Database.updateRecord(\"rodent\", \"ErrorCodes\", req);\n    } */\n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete error code?\", \"Delete Error Codes\", option).then((eventData) => {\n\t\t\n\t\tconsole.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\terrorCodesTable.deleteRows(ids[i]);\n\t\t\t//let req = {};\n\t\t\t//req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t\t//Database.updateRecord(\"rodent\", \"Products\", req);\n\t\t\tDatabase.deleteRecord(\"rodent\", \"ErrorCodes\", \"Id\", ids[i]);\n\t\t}\n\t});\n}\n\nfunction removeTroubleFiles() {\n    var formData = Script.getFormByKey(\"errors\");\n    var ids = formData.files.getColumn(\"id\");\n   /* for (var i = 0; i < ids.length; i++) {\n        troubleTable.deleteRows(ids[i]);\n        let req = {};\n        req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n        Database.updateRecord(\"rodent\", \"TroubleshootingFiles\", req);\n    } */\n\t\n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete trouble shooting file?\", \"Delete Trouble Shouting File\", option).then((eventData) => {\n\t\t\n\t\tconsole.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\ttroubleTable.deleteRows(ids[i]);\n\t\t\t//let req = {};\n\t\t\t//req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t\t//Database.updateRecord(\"rodent\", \"Products\", req);\n\t\t\tDatabase.deleteRecord(\"rodent\", \"TroubleshootingFiles\", \"Id\", ids[i]);\n\t\t}\n\t});\n\t\n}"},"ev":{}},"errorCodesTable":{"t":"Table","lX":80,"lY":130,"sX":10.71,"sY":5,"s":"Error Codes","ps":{"enabled":"true","scalingType":"OK","width":"50% - 120px","height":"100% - 200px","x":"80px","y":"130px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"code id,description,troubleshooting help,code type,out of bounds","display header":"true","selectable":"multi + single","title":"Error Codes","form id":"errors","form key":"codes","colWidths":"0.09626168224299066,0.19532710280373833,0.27476635514018694,0.1485981308411215,0.2383177570093458"},"ev":{"clientEvents":{"inputEvents":{"Delete All Rows":{"channel":"compDelErrorRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Selected Error code":{"channel":"errorCodeSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"troubleTable":{"t":"Table","lX":1232,"lY":130,"sX":10.71,"sY":5,"s":"Error Codes","ps":{"enabled":"true","scalingType":"OK","width":"50% - 120px","height":"100% - 200px","x":"50% + 40px","y":"130px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"file location","display header":"true","colWidths":"0.9532273152478953","selectable":"multi + single","title":"Troubleshooting Files","form id":"errors","form key":"files","auto scroll":"false"},"ev":{"clientEvents":{"inputEvents":{"Delete All Rows":{"channel":"compDelFileRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Edit Row":{"channel":"troubleFileSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"deleteErrorCodeIcon":{"t":"Icon","lX":722,"lY":80,"sX":1,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"50% - 450px","y":"80px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"trash","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteErrorCodes/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addErrorCodeIcon":{"t":"Icon","lX":772,"lY":80,"sX":1,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"50% - 400px","y":"80px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"addErrorCode/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"deleteTroubleFilesIcon":{"t":"Icon","lX":2203,"lY":80,"sX":1,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 170px","y":"80px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"trash","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteTroubleFiles/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addTroubleFilesIcon":{"t":"Icon","lX":2233,"lY":80,"sX":1,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 120px","y":"80px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"addTroubleFile/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Scripting#1":{"t":"Scripting","lX":660,"lY":315,"sX":1,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"false","scalingType":"OK","width":"4.2%","height":"7.9%","x":"27.74%","y":"25.04%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar errorId;\nvar fileId;\nvar modifyType;\nvar deviceModelMap = {};\nconst errorContainer = Script.getWidget(\"errorContainer\");\nconst errorSubmitButton = Script.getWidget(\"errorSubmitButton\");\nconst troubleshootinghelp = Script.getWidget(\"troubleshootinghelp\");\nconst errorModelDropdown = Script.getWidget(\"errorModelDropdown\");\nconst cancelErrorCode = Script.getWidget(\"cancelErrorCode\");\nScript.on('load', function() {\n    // hide at start\n    hideErrorForm();\n    hideFileForm();\n\n\tcancelErrorCode.subscribe(\"pressed\", ()=> {\n\t\tClient.jumpToScreen(\"Error Codes\");\n\t});\n\t\n    modifyType = Script.getState(\"modifyType\");\n    if (modifyType == \"add_file\") {\n        errorContainer.setTitle(\"New Troubleshooting File\");\n        showFileForm();\n        return;\n    } else if (modifyType == \"edit_file\") {\n        var fileData = Script.getState(\"fileData\");\n        errorContainer.setTitle(\"Edit Troubleshooting File\");\n\n        var fileObj = {};\n        fileId = fileData.getColumn(\"id\")[0];\n        fileObj.FileLocation = fileData.getColumn(\"file location\");\n        fileObj.Status = fileData.getColumn(\"status\");\n        Script.setForm(\"filelocation\", fileObj);\n        showFileForm();\n        return;\n    }\n\n    showErrorForm();\n    Database.readRecords(\"rodent\", \"TroubleshootingFiles\", function(eventData) {\n        let fileCollection = SensaCollection.load(eventData.value);\n        fileCollection = fileCollection.filter([\"Id\", \"FileLocation\"]);\n        fileCollection.setColumns([\"value\", \"text\"])\n        troubleshootinghelp.receiveTextValues(fileCollection);\n\t\t\n\t\tDatabase.readRecords(\"rodent\", \"Model\", function (eventData) {\n\t\t\tvar errorData;\n \n\t\t\tlet modelIds = eventData.value.getColumn(\"Id\");\n\t\t\tlet modelNames = eventData.value.getColumn(\"Name\");\n\t\t\tlet errorModels = eventData.value;\n\t\t\tmodelIds.forEach((key, i) => deviceModelMap[key] = modelNames[i]);\n\t\t\t\n\t\t\terrorModels.filter([\"Id\", \"Name\"]);\n\t\t\terrorModels.renameColumn(\"Name\", \"text\");\n\t\t\terrorModels.renameColumn(\"Id\", \"value\");\n\t\t\terrorModelDropdown.receiveTextValues(errorModels);\n\t\t\t\n\t\t\tif (modifyType == \"add\") {\n\t\t\t\terrorContainer.setTitle(\"New Error Code\");\n\t\t\t\treturn;\n\t\t\t} else if (modifyType == \"edit\") {\n\t\t\t\terrorData = Script.getState(\"errorData\");\n\t\t\t}\n\t\t\t\n\t\t\tvar errorObj = {}\n\t\t\terrorId = errorData.getColumn(\"id\")[0];\n\t\t\terrorObj.CodeId = errorData.getColumn(\"code id\");\n\t\t\terrorObj.Description = errorData.getColumn(\"description\");\n\t\t\terrorObj.Status = errorData.getColumn(\"status\");\n\t\t\tlet filteredFile = fileCollection.query((record, pk) => {\n\t\t\t\tif (record.value == errorData.getColumn(\"troubleshooting help\")[0]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\terrorObj.TroubleshootingHelp = filteredFile.data[0];\n\t\t\terrorObj.CodeType = errorData.getColumn(\"code type\");\n\t\t\terrorObj.OOB = errorData.getColumn(\"out of bounds\");\n\t\t\t//errorObj.ModelId = errorData.getColumn(\"model id\")[0];\n\t\t\tScript.setForm(\"errorcode\", errorObj);\n\t\t\terrorModelDropdown.receiveValue(deviceModelMap[errorData.getColumn(\"model id\")[0]]);\n\t\t\terrorContainer.setTitle(\"Edit Error Code\");\n\t\t});\n    });\n});\n  \nClientEvents.subscribe(\"finishSubmitError\", function() {\n\tdebugger;\n    switch (modifyType) {\n        case 'edit':\n            handleEdit();\n            break;\n        case 'add':\n            handleCreate();\n            break;\n        case 'edit_file':\n            handleEditFile();\n            break;\n        case 'add_file':\n            handleCreateFile();\n            break;\n    }\n});\n  \nfunction handleEdit() {\n    var formObj = Script.getFormByKey(\"errorcode\");\n    if (formObj == undefined) {\n        alert(\"Please fill out all required fields\");\n        return;\n    }\n        \n    var dbReq = {};\n    formObj.Id = errorId;\n    formObj.Status = +formObj.Status;\n    let today = new Date();\n    today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n    formObj.UpdatedOn = today;\n    formObj.UpdatedBy = Client.getUser();\n    dbReq[errorId] = formObj;\n        \n    Database.updateRecord(\"rodent\", \"ErrorCodes\", dbReq, () => {\n        //Script.setState(\"currentCompany\", formObj.CompanyId);\n        Client.jumpToScreen(\"Error Codes\");\n    });\n}\n\nfunction handleEditFile() {\n    var formObj = Script.getFormByKey(\"filelocation\");\n    if (formObj == undefined) {\n        alert(\"Please fill out all required fields\");\n        return;\n    }\n    var dbReq = {};\n    formObj.Id = fileId;\n    formObj.Status = +formObj.Status;\n    formObj.UpdatedBy = Client.getUser();\n    dbReq[fileId] = formObj;\n        \n    Database.updateRecord(\"rodent\", \"TroubleshootingFiles\", dbReq, () => {\n        //Script.setState(\"currentCompany\", formObj.CompanyId);\n        Client.jumpToScreen(\"Error Codes\");\n    });\n}\n \n  \nfunction handleCreate() {\n    Database.readRecords(\"rodent\", \"ErrorCodes\", function(eventData) {\n        var errorCollection = SensaCollection.load(eventData.value);\n        var formObj = Script.getFormByKey(\"errorcode\");\n        \n        if (formObj == undefined) {\n            alert(\"Please fill out all required fields\");\n            return;\n        }\n\n        var dbReq = {};\n        var errorCount = Object.keys(errorCollection.data).length;\n        formObj.Id = `${errorCount + 1}`;\n        formObj.Status = +formObj.Status;\n\n        let today = new Date();\n        today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n        formObj.CreatedOn = today;\n        formObj.UpdatedOn = today;\n        formObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n        dbReq[errorCount + 1] = formObj;\n\n        Database.createRecords(\"rodent\", \"ErrorCodes\", dbReq, () => {\n            \n            Client.jumpToScreen(\"Error Codes\");\n        });\n    });\n}\n\nfunction handleCreateFile() {\n    Database.readRecords(\"rodent\", \"TroubleshootingFiles\", function(eventData) {\n        var fileCollection = SensaCollection.load(eventData.value);\n        var formObj = Script.getFormByKey(\"filelocation\");\n        \n        if (formObj == undefined) {\n            alert(\"Please fill out all required fields\");\n            return;\n        }\n\n        var dbReq = {};\n        var fileCount = Object.keys(fileCollection.data).length;\n        formObj.Id = `${fileCount + 1}`;\n        formObj.Status = +formObj.Status;\n\n        let today = new Date();\n        today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n        formObj.CreatedAt = today;\n        formObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n        dbReq[fileCount + 1] = formObj;\n\n        Database.createRecords(\"rodent\", \"TroubleshootingFiles\", dbReq, () => {\n            \n            Client.jumpToScreen(\"Error Codes\");\n        });\n    });\n}\n\nfunction hideErrorForm() {\n    Script.hideWidget(\"codeId\");\n    Script.hideWidget(\"desc\");\n    Script.hideWidget(\"troubleshootinghelp\");\n    Script.hideWidget(\"codetype\");\n    Script.hideWidget(\"oob\");\n\tScript.hideWidget(\"errorModelDropdown\");\n}\n\nfunction showErrorForm() {\n    Script.showWidget(\"codeId\");\n    Script.showWidget(\"desc\");\n    Script.showWidget(\"troubleshootinghelp\");\n    Script.showWidget(\"codetype\");\n    Script.showWidget(\"oob\");\n\tScript.showWidget(\"errorModelDropdown\");\n}\n\nfunction hideFileForm() {\n    Script.hideWidget(\"fileloc\");\n    Script.hideWidget(\"filestatus\");\n}\n\nfunction showFileForm() {\n    Script.showWidget(\"fileloc\");\n    Script.showWidget(\"filestatus\");\n}"},"ev":{}},"Input#3":{"t":"Input","lX":75,"lY":620,"sX":1,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"100px","height":"4.19%","x":"75px","y":"620px"},"ver":"270520c210519","dis":false,"tt":"","a":{"color":"grey","label text":"Enabled","type":"checkbox","checkbox label side":"right","default value":"1","form id":"errorcode","form key":"Status"},"ev":{}},"errorContainer":{"t":"Container","lX":40,"lY":40,"sX":6.5,"sY":7,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"OK","width":"650px","height":"700px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Title"},"ev":{}},"errorSubmitButton":{"t":"Button","lX":796,"lY":954,"sX":1,"sY":1.09,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"525px","y":"620px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"finishSubmitError/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"troubleshootinghelp":{"t":"Dropdown","lX":80,"lY":380,"sX":5.4,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"540px","height":"4.19%","x":"80px","y":"380px"},"ver":"190104c210519","z":"110","dis":false,"tt":"","a":{"default options":"","form id":"errorcode","form key":"TroubleshootingHelp","label text":"Troubleshooting Help","disable edit":"false"},"ev":{}},"codeId":{"t":"Input","lX":80,"lY":170,"sX":5.5,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"170px"},"ver":"270520c210519","dis":false,"tt":"","a":{"color":"grey","form id":"errorcode","label text":"Code ID","form key":"CodeId","type":"number","required":"true"},"ev":{}},"desc":{"t":"Input","lX":80,"lY":507,"sX":5.5,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"310px"},"ver":"270520c210519","z":"110","dis":false,"tt":"","a":{"color":"grey","form id":"errorcode","label text":"Description","form key":"Description","required":"true"},"ev":{}},"codetype":{"t":"Input","lX":80,"lY":450,"sX":5.5,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"450px"},"ver":"270520c210519","dis":false,"tt":"","a":{"color":"grey","form id":"errorcode","label text":"Code Type","form key":"CodeType","type":"number","required":"true"},"ev":{}},"oob":{"t":"Input","lX":80,"lY":520,"sX":5.5,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"520px"},"ver":"270520c210519","dis":false,"tt":"","a":{"color":"grey","form id":"errorcode","label text":"Out of Bounds","form key":"OOB","type":"number","required":"true"},"ev":{}},"fileloc":{"t":"Input","lX":80,"lY":100,"sX":5.5,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"100px"},"ver":"270520c210519","dis":false,"tt":"","a":{"color":"grey","form id":"filelocation","label text":"File Location","form key":"FileLocation","required":"true"},"ev":{}},"filestatus":{"t":"Input","lX":200,"lY":620,"sX":1.2,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"120px","height":"4.19%","x":"200px","y":"620px"},"ver":"270520c210519","dis":false,"tt":"","a":{"color":"grey","label text":"Enabled","type":"checkbox","checkbox label side":"right","default value":"1","form key":"Status","form id":"filelocation"},"ev":{}},"Scripting#2":{"t":"Scripting","lX":50,"lY":900,"sX":1,"sY":1,"s":"Manage Companies","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nconst companiesTable = Script.getWidget(\"companiesTable\");\n \nvar companiesCollection;\n \nvar status = \"Show Active\";\n \nClientEvents.subscribe(\"editCompany\", editCompany);\nClientEvents.subscribe(\"addCompany\", addCompany);\nClientEvents.subscribe(\"deleteCompany\", deleteCompany);\nClientEvents.subscribe(\"changeActiveCompany\", (eventData) => {\n    status = eventData.value; \n    Database.readRecords(\"rodent\", \"Companies\", function(eventData) {\n        companiesCollection = SensaCollection.load(eventData.value);\n        updateTable(companiesTable, companiesCollection);\n    });\n\t\n    if (status !== \"Show Active\") {\n        // Do not attempt to delete inactive elements\n        Script.hideWidget(\"deleteCompanyIcon\");\n    } else {\n        // Re-enable widgets if hidden before\n        Script.showWidget(\"deleteCompanyIcon\");\n    } \n});\n \nScript.on('load', function() {\n\n    Database.readRecords(\"rodent\", \"Companies\", function(eventData) {\n        companiesCollection = SensaCollection.load(eventData.value);\n        updateTable(companiesTable, companiesCollection);\n    });\n});\n \nfunction updateTable(table, collection) {\n    let filteredCollection = collection.query((record, pk) => {\n        if (record['Status'] == (status == \"Show Active\")) {\n            return true;\n        }\n    });\n    \n    ClientEvents.publish(\"clearAllCompanies\", \"\");\n    table.receiveValue(filteredCollection);\n}\n \nfunction editCompany(eventData) {\n    Script.setState(\"companyData\", eventData.value);\n    Script.setState(\"modifyType\", \"edit\");\n    Client.jumpToScreen(\"Edit Company\");\n}\n\nfunction addCompany() {\n    Script.setState(\"modifyType\", \"add\");\n    Client.jumpToScreen(\"Edit Company\");\n}\n\nfunction deleteCompany() {\n    var formData = Script.getFormByKey(\"company\");\n    var ids = formData.company.getColumn(\"id\");\n    /*for (var i = 0; i < ids.length; i++) {\n        companiesTable.deleteRows(ids[i]);\n        let req = {};\n        req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n        Database.updateRecord(\"rodent\", \"Companies\", req);\n    } */\n\t\n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete company?\", \"Delete Companies\", option).then((eventData) => {\n\t\t\n\t\tconsole.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\tcompaniesTable.deleteRows(ids[i]);\n\t\t\t//let req = {};\n\t\t\t//req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t\t//Database.updateRecord(\"rodent\", \"Products\", req);\n\t\t\tDatabase.deleteRecord(\"rodent\", \"Companies\", \"Id\", ids[i]);\n\t\t}\n\t});\n\t\n\t\n}"},"ev":{}},"companiesTable":{"t":"Table","lX":80,"lY":100,"sX":22.23,"sY":6.66,"s":"Manage Companies","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 180px","x":"80px","y":"100px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"name,address","form id":"company","form key":"company","title":"Companies","colWidths":"0.6441441441441441,0.3333333333333333","display header":"true","selectable":"multi + single"},"ev":{"clientEvents":{"inputEvents":{"Delete Rows":{"channel":"clearAllCompanies/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Edit Company":{"channel":"editCompany/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"deleteCompanyIcon":{"t":"Icon","lX":95,"lY":1128,"sX":1,"sY":1,"s":"Manage Companies","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"6.24%","x":"100% - 190px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"trash","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteCompany/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addCompanyIcon":{"t":"Icon","lX":179,"lY":1128,"sX":1,"sY":1,"s":"Manage Companies","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"6.24%","x":"100% - 130px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"plus-square"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"addCompany/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"companyContainer":{"t":"Container","lX":40,"lY":40,"sX":6.3,"sY":3.5,"s":"Edit Company","ps":{"enabled":"true","scalingType":"OK","width":"630px","height":"350px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Title"},"ev":{}},"Input#0":{"t":"Input","lX":140,"lY":162,"sX":5.5,"sY":1,"s":"Edit Company","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"100px"},"ver":"270520c210519","dis":false,"tt":"","a":{"label text":"Name","color":"grey","form id":"companyform","form key":"Name","required":"true"},"ev":{}},"Input#1":{"t":"Input","lX":145,"lY":322,"sX":5.5,"sY":1,"s":"Edit Company","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"170px"},"ver":"270520c210519","dis":false,"tt":"","a":{"label text":"Address","color":"grey","form id":"companyform","form key":"Address","required":"true"},"ev":{}},"Input#7":{"t":"Input","lX":75,"lY":270,"sX":1,"sY":1,"s":"Edit Company","ps":{"enabled":"true","scalingType":"NOVERT","width":"100px","height":"4.19%","x":"75px","y":"270px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","checkbox label side":"right","label text":"Enabled","form id":"companyform","form key":"Status","default value":"1"},"ev":{}},"companySubmitButton":{"t":"Button","lX":525,"lY":270,"sX":1,"sY":1.09,"s":"Edit Company","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"525px","y":"270px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","button name":"Submit"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"finishSubmitCompany/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"editUserIsAdmin":{"t":"Input","lX":75,"lY":240,"sX":1.2,"sY":1,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"NOVERT","width":"120px","height":"4.19%","x":"75px","y":"260px"},"ver":"270520c210519","dis":false,"tt":"","a":{"label text":"Is Admin","type":"checkbox","checkbox label side":"right","form id":"editUser","form key":"IsAdmin"},"ev":{}},"deviceModelDropdown":{"t":"Dropdown","lX":852,"lY":70,"sX":3,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"5.51%","x":"50% - 340px","y":"70px"},"ver":"190104c210519","dis":false,"tt":"","a":{"default options":""},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deviceModelSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"errorModelDropdown":{"t":"Dropdown","lX":80,"lY":240,"sX":5.4,"sY":1,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"540px","height":"4.19%","x":"80px","y":"240px"},"ver":"190104c210519","z":"110","dis":false,"tt":"","a":{"default options":"","form id":"errorcode","form key":"ModelId","label text":"Device Model","disable edit":"false"},"ev":{}},"modelTypesTable":{"t":"Table","lX":80,"lY":100,"sX":22.23,"sY":5.1,"s":"Manage Model Types","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% -  190px","x":"80px","y":"100px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"name","form id":"modelType","title":"Model Types","form key":"modelType","selectable":"multi + single","display header":"true","colWidths":"0.9774876181900045"},"ev":{"clientEvents":{"inputEvents":{"Delete Modal Type":{"channel":"clearAllModalTypes/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Edit Modal Type":{"channel":"editModalType/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"deleteModalTypeIcon":{"t":"Icon","lX":2283,"lY":50,"sX":1,"sY":1,"s":"Manage Model Types","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 190px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"trash","outline color":"no outline","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteModalType/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addModalTypeIcon":{"t":"Icon","lX":2193,"lY":50,"sX":1,"sY":1,"s":"Manage Model Types","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 130px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"addModalType/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"modelTypeSubmitButton":{"t":"Button","lX":1085,"lY":339,"sX":1,"sY":1.09,"s":"Edit Model Type","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"525px","y":"170px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"outputEvents":{"Submit":{"channel":"finishSubmitModalType/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"modelTypeContainer":{"t":"Container","lX":40,"lY":40,"sX":6.5,"sY":2,"s":"Edit Model Type","ps":{"enabled":"true","scalingType":"OK","width":"650px","height":"200px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Edit Model Type"},"ev":{}},"modelsTable":{"t":"Table","lX":80,"lY":100,"sX":15.83,"sY":6.94,"s":"Manage Device Models","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 180px","x":"80px","y":"100px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"name,model type,battery upper,battery lower","form id":"models","form key":"models","selectable":"multi + single","display header":"true","title":"Models","colWidths":"0.24673570463755065,0.24313372354795137,0.24313372354795137,0.2444844664565511"},"ev":{"clientEvents":{"inputEvents":{"Delete all Rows":{"channel":"userDelModels/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Edit Model":{"channel":"editModel/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"modelTypesDropdown":{"t":"Dropdown","lX":900,"lY":305,"sX":3,"sY":1,"s":"Manage Device Models","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"4.19%","x":"100% - 385px","y":"84px"},"ver":"190104c210519","dis":false,"tt":"","a":{"default options":""},"ev":{"clientEvents":{"outputEvents":{"Model Type Select":{"channel":"modelTypeSelected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"deleteModelIcon":{"t":"Icon","lX":2193,"lY":50,"sX":1,"sY":1,"s":"Manage Device Models","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"6.16%","x":"100% - 190px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"trash","outline color":"no outline","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"Delete Model":{"channel":"deleteModel/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"modelTypeSelect":{"t":"Dropdown","lX":80,"lY":170,"sX":3,"sY":1,"s":"Edit Model","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"4.19%","x":"80px","y":"170px"},"ver":"190104c210519","dis":false,"tt":"","a":{"form id":"modelForm","form key":"ModelType","default options":"","label text":"Model Type"},"ev":{}},"modelSubmit":{"t":"Button","lX":240,"lY":380,"sX":1,"sY":1.09,"s":"Edit Model","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"270px","y":"380px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","outline color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"finishEditModel/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"modelFormContainer":{"t":"Container","lX":40,"lY":40,"sX":3.8,"sY":4.2,"s":"Edit Model","ps":{"enabled":"true","scalingType":"OK","width":"380px","height":"420px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Title"},"ev":{}},"addModalIcon":{"t":"Icon","lX":181,"lY":374,"sX":0.07,"sY":0.07,"s":"Manage Device Models","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"3.31","height":"7.3%","x":"14.3%","y":"51.5%"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"Add Model":{"channel":"addModel/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"activeModelTypeDropDown":{"t":"Dropdown","lX":1584,"lY":124,"sX":3,"sY":1,"s":"Manage Model Types","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"4.19%","x":"100% - 385px","y":"84px"},"ver":"190104c210519","dis":false,"tt":"","a":{"default options":"Show Active, Show Inactive","default value":"Show Active"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"changeActiveModalType/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"modelTypeScript":{"t":"Scripting","lX":35,"lY":560,"sX":1,"sY":1,"s":"Manage Model Types","ps":{"enabled":"false","scalingType":"OK","width":"15.77%","height":"17.79%","x":"19.56%","y":"76.51%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nconst modelTypesTable = Script.getWidget(\"modelTypesTable\");\n \nvar modelTypesCollection;\n \nvar status = \"Show Active\";\n\nClientEvents.subscribe(\"editModalType\", editModalType);\nClientEvents.subscribe(\"addModalType\", addModalType);\nClientEvents.subscribe(\"deleteModalType\", deleteModalType);\nClientEvents.subscribe(\"changeActiveModalType\", (eventData) => {\n    status = eventData.value; \n    Database.readRecords(\"rodent\", \"ModelType\", function(eventData) {\n        modelTypesCollection = SensaCollection.load(eventData.value);\n        updateTable(modelTypesTable, modelTypesCollection);\n    });\n    if (status !== \"Show Active\") {\n        // Do not attempt to delete inactive elements\n        Script.hideWidget(\"deleteModalTypeIcon\");\n    } else {\n        // Re-enable widgets if hidden before\n        Script.showWidget(\"deleteModalTypeIcon\");\n    }\n});\n\nScript.on('load', function() {\n\tDatabase.readRecords(\"rodent\", \"ModelType\", function(eventData) {\n        modelTypesCollection = SensaCollection.load(eventData.value);\n\t\tupdateTable(modelTypesTable, modelTypesCollection);\n    });\n});\n\nfunction updateTable(table, collection) {\n    let filteredCollection = collection.query((record, pk) => {\n        if (record['Status'] == (status == \"Show Active\")) {\n            return true;\n        }\n    });\n    ClientEvents.publish(\"clearAllModalTypes\", \"\");\n    table.receiveValue(filteredCollection);\n}\n \nfunction editModalType(eventData) {\n    Script.setState(\"modelTypeData\", eventData.value);\n    Script.setState(\"modifyType\", \"edit\");\n    Client.jumpToScreen(\"Edit Model Type\");\n}\n\nfunction addModalType() {\n    Script.setState(\"modifyType\", \"add\");\n    Client.jumpToScreen(\"Edit Model Type\");\n}\n\nfunction deleteModalType() {\n    var formData = Script.getFormByKey(\"modelType\");\n    var ids = formData.modelType.getColumn(\"id\");\n   /** for (var i = 0; i < ids.length; i++) {\n        modelTypesTable.deleteRows(ids[i]);\n        let req = {};\n        req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n        Database.updateRecord(\"rodent\", \"ModelType\", req);\n    }\n\t*/\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete model types?\", \"Delete Model Types\", option).then((eventData) => {\n\t\t\n\t\t//console.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\tmodelTypesTable.deleteRows(ids[i]);\n\t\t\t//let req = {};\n\t\t\t//req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t\t//Database.updateRecord(\"rodent\", \"Products\", req);\n\t\t\tDatabase.deleteRecord(\"rodent\", \"ModelType\", \"Id\", ids[i]);\n\t\t}\n\t});\n}"},"ev":{}},"modelTypeNameInput":{"t":"Input","lX":197,"lY":191,"sX":5.5,"sY":1,"s":"Edit Model Type","ps":{"enabled":"true","scalingType":"NOVERT","width":"550px","height":"4.19%","x":"80px","y":"100px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"modalTypeForm","form key":"Name","required":"true","label text":"Name","color":"grey"},"ev":{}},"modelTypeEnabledCheckbox":{"t":"Input","lX":75,"lY":150,"sX":1,"sY":1,"s":"Edit Model Type","ps":{"enabled":"true","scalingType":"NOVERT","width":"100px","height":"4.19%","x":"75px","y":"170px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"modalTypeForm","form key":"Status","type":"checkbox","default value":"1","label text":"Enabled","checkbox label side":"right"},"ev":{}},"modelTypeSubmitScript":{"t":"Scripting","lX":40,"lY":595,"sX":1,"sY":1,"s":"Edit Model Type","ps":{"enabled":"false","scalingType":"OK","width":"12.33%","height":"17.79%","x":"6.29%","y":"70.28%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar modelTypeId;\nvar modifyType;\nconst modelTypeContainer = Script.getWidget(\"modelTypeContainer\");\nconst modelTypeSubmitButton = Script.getWidget(\"modelTypeSubmitButton\");\nconst cancelModelType = Script.getWidget(\"cancelModelType\");\nScript.on('load', function() {\n    modifyType = Script.getState(\"modifyType\");\n    var modelTypeData;\n\t\n\tcancelModelType.subscribe(\"pressed\", ()=> {\n\t\tClient.jumpToScreen(\"Manage Model Types\");\n\t});\n\tif (modifyType == \"add\") {\n        modelTypeContainer.setTitle(\"New Model Type\");\n        return;\n    } else if (modifyType == \"edit\") {\n        modelTypeData = Script.getState(\"modelTypeData\");\n    }\n    var modelTypeObj = {};\n    modelTypeId = modelTypeData.getColumn(\"id\")[0];\n    modelTypeObj.Name = modelTypeData.getColumn(\"name\");\n    modelTypeObj.Status = modelTypeData.getColumn(\"status\");\n\n    Script.setForm(\"modalTypeForm\", modelTypeObj);\n    modelTypeContainer.setTitle(\"Edit Model Type\");\n});\n\n\nClientEvents.subscribe(\"finishSubmitModalType\", function() {\n    switch (modifyType) {\n        case 'edit':\n            handleEdit();\n            break;\n        case 'add':\n            handleCreate();\n            break;\n    }\n});\n\nfunction handleEdit() {\n    var formObj = Script.getFormByKey(\"modalTypeForm\");\n    if (formObj == undefined) {\n        alert(\"Please fill out all required fields\");\n        return;\n    }\n    var dbReq = {};\n    formObj.Id = modelTypeId;\n    formObj.Status = +formObj.Status;\n    let today = new Date();\n    today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n    formObj.UpdatedOn = today;\n    formObj.UpdatedBy = Client.getUser();\n    dbReq[modelTypeId] = formObj;\n\tdebugger;\n    Database.updateRecord(\"rodent\", \"ModelType\", dbReq, () => {\n        Client.jumpToScreen(\"Manage Model Types\");\n    });\n}\n\nfunction handleCreate() {\n    Database.readRecords(\"rodent\", \"ModelType\", function(eventData) {\n        var modelTypeCollection = SensaCollection.load(eventData.value);\n        var formObj = Script.getFormByKey(\"modalTypeForm\");\n        if (formObj == undefined) {\n            alert(\"Please fill out all required fields\");\n            return;\n        }\n        var dbReq = {};\n        var modelTypeCount = Object.keys(modelTypeCollection.data).length;\n        formObj.Id = `${modelTypeCount + 1}`;\n        formObj.Status = +formObj.Status;\n        let today = new Date();\n        today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n        formObj.CreatedOn = new Date().getTime();\n        formObj.UpdatedOn =  new Date().getTime();\n        formObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n        dbReq[modelTypeCount + 1] = formObj;\n\t\tdebugger;\n        Database.createRecords(\"rodent\", \"ModelType\", dbReq, () => {\n            Client.jumpToScreen(\"Manage Model Types\");\n        });\n    });\n}"},"ev":{}},"modelScript":{"t":"Scripting","lX":1000,"lY":55,"sX":1,"sY":1,"s":"Manage Device Models","ps":{"enabled":"false","scalingType":"OK","width":"4.2%","height":"7.9%","x":"41.96%","y":"4.34%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n \nvar modelCollection;\nvar currentModelType;\nvar modelTypesCollection;\n\nconst modelTypesTable = Script.getWidget(\"modelsTable\");\nconst compDropdown = Script.getWidget(\"modelTypesDropdown\");\n\nClientEvents.subscribe(\"modelTypeSelected\", changeModel);\nClientEvents.subscribe(\"deleteModel\", deleteModel);\nClientEvents.subscribe(\"editModel\", editModel);\nClientEvents.subscribe(\"addModel\", addModel);\n\nScript.on('load', function() {\n\tDatabase.readRecords(\"rodent\", \"ModelType\", function(eventData) {\n\t\tmodelTypesCollection = SensaCollection.load(eventData.value);\n\t\tDatabase.readRecords(\"rodent\", \"Model\", function(eventData) {\n\t\t\tmodelCollection = SensaCollection.load(eventData.value);\n\t\t\tcurrentModelType = Script.getState(\"currentModelType\");\n\t\t\tlet modelTypeNames = modelTypesCollection.getColumn(\"Name\");\n\t\t\tlet modelTypeIds = modelTypesCollection.getColumn(\"Id\");\n\t\t\tif (currentModelType == null) {\n\t\t\t  currentModelType = modelTypeIds[0];\n\t\t\t}\n\t\t\tlet modelTypeObj = {};\n\t\t\tmodelTypeIds.map((model, idx) => {\n\t\t\t\tmodelTypeObj[model] = modelTypeNames[idx];\n\t\t\t});\n\t\t\tObject.keys(modelTypeObj).forEach((model, idx) => {\n\t\t\t\tmodelTypesCollection.set({\"Id\": model, \"Name\": modelTypeObj[model]});\n\t\t\t});\n\t\t    modelTypesCollection.renameColumn(\"Name\", \"text\");\n\t\t\tmodelTypesCollection.renameColumn(\"Id\", \"value\");\n\t\t\tcompDropdown.receiveTextValues(modelTypesCollection);\n\t\t\tcompDropdown.receiveValue(modelTypeObj[currentModelType]);\n\t\t    modelTypesCollection.renameColumn(\"text\", \"Name\");\n\t\t\tmodelTypesCollection.renameColumn(\"value\", \"Id\");\n\t\t\tupdateTable();\n\t\t});\n\t});\n});\n\nfunction updateTable() {\n      let filteredModels = modelCollection.query((record, pk) => {\n          if ((record['ModelType'] == currentModelType) &&\n              (record['Status'] == '1')){\n              return true;\n          }\n      });\n\t  let modelTypeName = modelTypesCollection.query((modelType, pk) => {\n\t\t  if (modelType['Id'] == currentModelType){\n\t\t\t  return true;\n\t\t  }\n\t  }).getFirst();\n\t  filteredModels.forEach((model, pk) => {\n          filteredModels.set({\"Id\": model['Id'], \"ModelType\": modelTypeName['Name']});\n      });\n\t//name,model type,battery upper,battery lower\n      ClientEvents.publish(\"userDelModels\", \"\");\n\t  filteredModels.renameColumn(\"ModelType\", \"Model Type\");\n\t  filteredModels.renameColumn(\"BatteryUpper\", \"Battery Upper\");\n\t  filteredModels.renameColumn(\"BatteryLower\", \"Battery Lower\");\n      modelTypesTable.receiveValue(filteredModels);\n}\n\nfunction changeModel(selected) {\n\tcurrentModelType = selected.value;\n    updateTable();\n}\n\nfunction deleteModel() {\n     let formData = Script.getFormByKey(\"models\");\n     var ids = formData.models.getColumn(\"id\");\n     \n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete device model?\", \"Delete Device Model\", option).then((eventData) => {\n\t\t\n\t\t//console.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n          modelTypesTable.deleteRows(ids[i]);\n          Database.deleteRecord(\"rodent\", \"Model\", \"Id\", ids[i]);\n\t\t }\n\t});\n}\n\nfunction editModel(eventData) {\n    Script.setState(\"modelInfo\", eventData.value);\n    Script.setState(\"currentModelType\", currentModelType);\n    Script.setState(\"modifyType\", \"edit\");\n    Client.jumpToScreen(\"Edit Model\");\n}\n\n function addModel() {\n     Script.setState(\"currentModelType\", currentModelType);\n     Script.setState(\"modifyType\", \"add\");\n     Client.jumpToScreen(\"Edit Model\");\n }"},"ev":{}},"modelNameInput":{"t":"Input","lX":80,"lY":100,"sX":3,"sY":1,"s":"Edit Model","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"4.19%","x":"80px","y":"100px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"modelForm","form key":"Name","label text":"Name","required":"true","color":"grey"},"ev":{}},"modelSubmitScript":{"t":"Scripting","lX":945,"lY":310,"sX":1,"sY":1,"s":"Edit Model","ps":{"enabled":"false","scalingType":"OK","width":"8.41%","height":"17.79%","x":"8.41%","y":"77.58%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar userId;\nvar modifyType;\nvar modelTypeId;\nvar modelData;\n\nconst modelFormContainer = Script.getWidget(\"modelFormContainer\");\n//const userSubmitButton = Script.getWidget(\"userRoleSubmit\");\nconst modelTypeSelect = Script.getWidget(\"modelTypeSelect\");\nconst cancelModelBtn = Script.getWidget(\"cancelModelBtn\");\n\nScript.on('load', function() {\n\t\n\tcancelModelBtn.subscribe(\"pressed\", ()=> {\n\t\tClient.jumpToScreen(\"Manage Device Models\");\n\t});\n\tmodifyType = Script.getState(\"modifyType\");\n\tif (modifyType == \"add\") {\n        modelFormContainer.setTitle(\"New User Role\");\n    } else if (modifyType == \"edit\") {\n        modelData = Script.getState(\"modelInfo\");\n\t\tmodelFormContainer.setTitle(\"Edit User Role\");\n\t\tif(modelData != null){\n\t\t\tvar modelObj = {};\n\t\t\tmodelObj.Name = modelData.getColumn(\"name\");\n\t\t\tmodelObj.BatteryLower = modelData.getColumn(\"batterylower\");\n\t\t\tmodelObj.BatteryUpper = modelData.getColumn(\"batteryupper\");\n\t\t\tScript.setForm(\"modelForm\", modelObj);\n\t\t}\n    }\n\tDatabase.readRecords(\"rodent\", \"ModelType\", function(eventData) {\n\t\tlet modelTypesCollection = SensaCollection.load(eventData.value);\n\t\tlet modelTypeNames = modelTypesCollection.getColumn(\"Name\");\n\t\tlet modelTypeIds = modelTypesCollection.getColumn(\"Id\");\n\t\tmodelTypeId = Script.getState(\"currentModelType\");\n\t\tif (modelTypeId == null) {\n\t\t\tmodelTypeId = compIds[0];\n\t\t}\n\t\tlet modelTypeObj = {};\n\t\t modelTypeIds.map((model, idx) => {\n\t\t\t modelTypeObj[model] = modelTypeNames[idx];\n\t\t });\n\t\t Object.keys(modelTypeObj).forEach((model, idx) => {\n\t\t\t modelTypesCollection.set({\"Id\": model, \"Name\": modelTypeObj[model]});\n\t\t });\n\t\t modelTypesCollection.renameColumn(\"Name\", \"text\");\n\t\t modelTypesCollection.renameColumn(\"Id\", \"value\");\n\t\t modelTypeSelect.receiveTextValues(modelTypesCollection);\n\t\t modelTypeSelect.receiveValue(modelTypesCollection.get(modelTypeId).text);\n\t});\n});\n\nClientEvents.subscribe(\"finishEditModel\", function() {\n\tswitch (modifyType) {\n\t\tcase 'edit':\n\t\t\thandleEdit();\n\t\t\tbreak;\n\t\tcase 'add':\n\t\t\thandleCreate();\n\t\t\tbreak;\n\t}\n});\n\nfunction handleEdit() {\n\tvar formObj = Script.getFormByKey(\"modelForm\");\n\tif (formObj == undefined) {\n\t\talert(\"Please fill out all required fields\");\n\t\treturn;\n\t}\n\tvar dbReq = {};\n\tlet today = new Date();\n\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\tformObj.UpdatedOn = today;\n\tformObj.UpdatedBy = Client.getUser();\n\tlet modelData = Script.getState(\"modelInfo\");\n    let modelId = modelData.getColumn(\"id\")[0];\n\tformObj.Id = modelId;\n\tdbReq[modelId] = formObj;\n\tDatabase.updateRecord(\"rodent\", \"Model\", dbReq, () => {\n\t\tScript.setState(\"currentModelType\", formObj.ModelType);\n\t\tClient.jumpToScreen(\"Manage Device Models\");\n    });\n}\n\nfunction handleCreate() {\n\tDatabase.readRecords(\"rodent\", \"Model\", function(eventData) {\n\t\tlet modelCollection = SensaCollection.load(eventData.value);\n\t\tvar formObj = Script.getFormByKey(\"modelForm\");\n\t\tif (formObj == undefined) {\n\t\t\talert(\"Please fill out all required fields\");\n\t\t\treturn;\n\t\t}\n\t\tvar dbReq = {};\n\t\tlet today = new Date();\n\t\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\t\tlet id = +modelCollection.getColumn(\"Id\").at(-1) + 1;\n\t\tformObj.Id = `${id}`;\n\t\tformObj.CreatedOn = today;\n\t\tformObj.UpdatedOn = today;\n\t\tformObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n\t\tdbReq[id] = formObj;\n\t\tDatabase.createRecords(\"rodent\", \"Model\", dbReq, () => {\n\t\tScript.setState(\"currentModelType\", formObj.ModelType);\n\t\tClient.jumpToScreen(\"Manage Device Models\");\n         });\n\t});\n}"},"ev":{}},"modelBatteryUpperInput":{"t":"Input","lX":80,"lY":240,"sX":3,"sY":1,"s":"Edit Model","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"6.06%","x":"80px","y":"240px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"modelForm","form key":"BatteryUpper","label text":"Battery Upper","color":"grey"},"ev":{}},"modelBatteryLowerInput":{"t":"Input","lX":80,"lY":310,"sX":3,"sY":1,"s":"Edit Model","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"6.06%","x":"80px","y":"310px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"modelForm","form key":"BatteryLower","label text":"Battery Lower","color":"grey"},"ev":{}},"packetContainer":{"t":"Container","lX":40,"lY":40,"sX":16.63,"sY":7.94,"s":"Packet 6 Transactions","ps":{"enabled":"true","scalingType":"OK","width":"100%-80px","height":"100%-80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Transaction Table","color":"grey"},"ev":{}},"tableCtl":{"t":"PickSlider","lX":80,"lY":80,"sX":7.84,"sY":1,"s":"Packet 6 Transactions","ps":{"enabled":"true","scalingType":"NOVERT","width":"90%","height":"5.72%","x":"80px","y":"80px"},"ver":"190104c210519","dis":false,"tt":"","a":{"tick values":"Day,Week,Month,3 Months,Year","form id":"slider-info","form key":"slider-value"},"ev":{"clientEvents":{"outputEvents":{"interval Set":{"channel":"intervalSet/receive value","event":"changed","trigger":"changed","important":"false"}}}}},"packet6Script":{"t":"Scripting","lX":1600,"lY":365,"sX":1,"sY":1,"s":"Packet 6 Transactions","ps":{"enabled":"false","scalingType":"OK","width":"5.74%","height":"11.44%","x":"43.83%","y":"86.84%"},"ver":"200124c210519","z":"140","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nconst transactionTable = Script.getWidget(\"transactionTable\");\nvar transactionDataCollection = null;\n\nconst tableSlider = Script.getWidget(\"tableCtl\");\n\nvar slideValue = \"Day\";\n\nvar intervalMap = {\n\t\"Day\": 1,\n    \"Week\": 7,\n    \"Month\": 30,\n    \"3 Months\": 90,\n    \"Year\": 365\n};\n\n\nvar locationData = [\n    {\n        \"TableName\": \"Locations\", // Specify the primary table used to construct the join request\n        \"Join\": 1, // Join type 1 - Inner Join, 2 - Outer Join, 3 - Left join, 4 - Right Join.\n        \"Columns\":\n            [\n                \"Id\",\n                \"Name\"\n\n            ], // Specify the list of columns to take from the reference table.\n        // Specify the list of columns to take from the reference table.\n\n\n    }];\n\n\nvar siteData = [\n    {\n        \"TableName\": \"Sites\", // Specify the primary table used to construct the join request\n        \"Join\": 1, // Join type 1 - Inner Join, 2 - Outer Join, 3 - Left join, 4 - Right Join.\n        \"Columns\":\n            [\n                \"Id\",\n                \"Name\"\n\n            ], // Specify the list of columns to take from the reference table.\n        // Specify the list of columns to take from the reference table.\n\n\n    }];\n/*.\nvar selectPacket = [\n        {\n            \"TableName\": \"P6Transactions\", // Specify the primary table used to construct the join request\n            \"Join\": 1, // Join type 1 - Inner Join, 2 - Outer Join, 3 - Left join, 4 - Right Join.\n            \"Columns\":\n            [\n            \"DateTime\",\n            \"DeviceNumber\", \n            \"P5Total\",\n            \"IRLeft\",\n            \"IRRight\",\n            \"AvgDelta\",\n            \"MinDelta\",\n            \"MaxDelta\",\n            \"L1\",\n            \"L2\",\n            \"Range\",\n            \"RebaitRange\",\n            \"TakenG\",\n            \"IRL Top\",\n            \"IRL Bottom\",\n            \"IRR Top\",\n            \"IRR Bottom\",\n            \"LocationId\",\n            \"SiteId\"\n            ], // Specify the list of columns to take from the reference table.\n            // Specify the list of columns to take from the reference table.\n        \n\n        }];*/\nvar locationsData;\nvar sitesData;\nvar selectPacket = [\n    {\n        \"TableName\": \"P6Transactions\", // Specify the primary table used to construct the join request\n        \"Join\": 1, // Join type 1 - Inner Join, 2 - Outer Join, 3 - Left join, 4 - Right Join.\n        \"Columns\":\n            [\n                \"DateTime\",\n                \"DeviceNumber\",\n                \"P5Total\",\n                \"IRLeft\",\n                \"IRRight\",\n                \"AvgDelta\",\n                \"MinDelta\",\n                \"MaxDelta\",\n                \"L1\",\n                \"L2\",\n                \"Range\",\n                \"RebaitRange\",\n                \"TakenG\",\n                \"IRLTop\",\n                \"IRLBottom\",\n                \"IRRTop\",\n                \"IRRBottom\",\n\t\t\t\t\"Tilt\",\n\t\t\t\t\"PrevLC\",\n                \"LocationId\",\n                \"SiteId\"\n            ], // Specify the list of columns to take from the reference table.\n        // Specify the list of columns to take from the reference table.\n\n    }];\n\n\n\nconst tableColumns = [\"date time\", \"device number\", \"p5 total\", \"irleft\", \"irright\", \"average\",\n    \"mindelta\", \"maxdelta\", \"l1\", \"l2\", \"range\", \"rebait range\", \"takeng\",\n    \"IRL Top\", \"IRL Bottom\", \"IRR Top\", \"IRR Bottom\", \"location\", \"site\"];\n\nconst tableColumns1 = [\"date time\", \"device number\", \"p5 total\", \"irleft\", \"irright\", \"average\",\n    \"mindelta\", \"maxdelta\", \"l1\", \"l2\", \"range\", \"rebait range\", \"takeng\", \"IRL Top\",\n    \"IRL Bottom\", \"IRR Top\", \"IRR Bottom\", \"location\", \"site\"];\nScript.on('load', function () {\n\tDatabase.readRecords(\"rodent\", \"Locations\", (lData)=> {\n\t\tlocationsData = SensaCollection.load(lData.value);\n\t});\n\n\tDatabase.readRecords(\"rodent\", \"Sites\", (eventData)=> {\n\t\tsitesData = SensaCollection.load(eventData.value);\n\t});\n\n\n    let downloadBtn = Script.getWidget(\"downloadData\");\n\n    downloadBtn.subscribe(\"pressed\", (eventData) => {\n\n        Script.downloadCSV(\"packet_6_data.csv\", transactionDataCollection);\n    });\n\n    ClientEvents.subscribe(\"intervalSet\", function (timeData) {\n        slideValue = timeData.value;\n        //sortData(slideValue);\n\n    });\n\n    ClientEvents.subscribe(\"displayTransactions\", function (eventData) {\n        // button has been pressed, grab the device number and only display that data\n        sortDataV2();\n    }) \n\n    //sortData(\"Day\");\n\n});\n\n\n/**\n* Sort and populate the data in the table\n*/\nfunction sortData(timeValue) {\n    Database.readCompound(\"rodent\", \"P6Transactions\", selectPacket, function(eventData){\n\t\ttransactionDataCollection = SensaCollection.load(eventData.value);\n        var tableData = {};\n        \n        //console.log(\"Data from the P6 table is on line 157 \" + JSON.stringify(transactionDataCollection, null, 4));\n\t\t\n\n        const date = Date.parse(new Date()); //new Date();\n\n        var slideData = intervalMap[timeValue];\n\t\t\n\t\t for (const packet in transactionDataCollection.data) {\n\t\t \n\t\n\t\t\tvar dataValue = transactionDataCollection.data[packet][0]; //grab the data\n\t\t\t \n\t\t\tvar dateDiff = date - parseInt(dataValue);\n\t\t\t//var daysMiliseconds = 86400000;\n\t\t\tvar days = (dateDiff / (60 * 60 * 24 * 1000)) % 365;\n\t\t\t//console.log(\"Th data value is \" + dataValue + \" datedif is \" + dateDiff + \" dys is \" + days + \" if statement \" + days <= slideData || days > 365);\n\t\t\tif (days <= slideData || days > 365) {\n\t\t\t\ttransactionDataCollection.data[packet][0] = formatTime(transactionDataCollection.data[packet][0]); //formating date\n\t\t\t\ttransactionDataCollection.data[packet][11] = parseFloat(transactionDataCollection.data[packet][11]).toFixed(2); // rebait range\n\t\t\t\ttransactionDataCollection.data[packet][12] = parseFloat(transactionDataCollection.data[packet][12]).toFixed(2); // taken gram\n\t\t\t\t\n\t\t\t\tif(transactionDataCollection.data[packet][17] in locationsData.data) {\n\t\t\t\t\ttransactionDataCollection.data[packet][17] = locationsData.data[transactionDataCollection.data[packet][17]][2];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(transactionDataCollection.data[packet][18] in sitesData.data) {\n\t\t\t\t\ttransactionDataCollection.data[packet][18] = sitesData.data[transactionDataCollection.data[packet][18]][1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tdelete transactionDataCollection.data[packet];\n\t\t\t}\n\t\t\t\n\t\t }\n\n\t\tconst data = Object.keys(transactionDataCollection.data).reverse().reduce(\n\t\t\t  (obj, key) => { \n\t\t\t\tobj[key] = transactionDataCollection.data[key]; \n\t\t\t\treturn obj;\n\t\t\t  }, \n\t\t  {}\n\t\t);\n\t\ttransactionDataCollection.data = data;\n\t\t\n\t\ttransactionDataCollection.renameColumn(\"AvgDelta\", \"Average\"); //AvgDelta\n\t\ttransactionDataCollection.renameColumn(\"DateTime\", \"date time\"); //AvgDelta\n\t\ttransactionDataCollection.renameColumn(\"DeviceNumber\", \"device number\");\n\t\ttransactionDataCollection.renameColumn(\"P5Total\", \"P5 Total\");\n\n\t\ttransactionDataCollection.renameColumn(\"RebaitRange\", \"rebait range\");\n\t\ttransactionDataCollection.renameColumn(\"IRLTop\", \"irl top\");\n\t\ttransactionDataCollection.renameColumn(\"IRLBottom\", \"irl bottom\");\n\t\ttransactionDataCollection.renameColumn(\"IRRTop\", \"irr top\");\n\t\ttransactionDataCollection.renameColumn(\"IRRBottom\", \"irr bottom\"); // PrevLC\n\t\ttransactionDataCollection.renameColumn(\"PrevLC\", \"Prev LoadCell\"); // PrevLC\n\t\ttransactionDataCollection.renameColumn(\"LocationId\", \"Location\"); // \n\t\ttransactionDataCollection.renameColumn(\"SiteId\", \"Site\");\n        updateTable(transactionTable, transactionDataCollection); //transactionDataCollection  newTransanction\n    });\n\n}\n\n/**\n* Sort and populate the data in the table\n*/\nfunction sortDataV2() {\n    var filteredDeviceNumber = Script.getFormByKey(\"device-info\")[\"device-number\"];\n    // var timeValue = Script.getFormByKey(\"slider-info\")[\"slider-value\"];\n    var timeValue = slideValue;\n    if (filteredDeviceNumber !== \"\" && !(isNaN(parseInt(filteredDeviceNumber))) ) {\n        // add filter to filter by device\n        selectPacket[0][\"Filters\"] = \n             [{\n                 \"Column\": \"DeviceNumber\", //Column that will be applied (don't include table name will be resolved if its contained within the reference table.\n                 \"ParamName\": \"DeviceNumber\", // Parameter name, must be unique and should not contain $ as its resolved by the mapper. \n                 \"Value\": filteredDeviceNumber // Value that you want to pass for comparison (any object)\n             }];\n\n    } else {\n        // otherwise remove it\n        delete selectPacket[0][\"Filters\"];\n    }\n\n    console.log(JSON.stringify(selectPacket,null,4));\n    Database.readCompound(\"rodent\", \"P6Transactions\", selectPacket, function(eventData){\n\t\ttransactionDataCollection = SensaCollection.load(eventData.value);\n        var tableData = {};\n        \n        //console.log(\"Data from the P6 table is on line 157 \" + JSON.stringify(transactionDataCollection, null, 4));\n\t\t\n\n        const date = Date.parse(new Date()); //new Date();\n\n        var slideData = intervalMap[timeValue];\n\t\t\n\t\t for (const packet in transactionDataCollection.data) {\n\t\t \n\t\n\t\t\tvar dataValue = transactionDataCollection.data[packet][0]; //grab the data\n\t\t\t \n\t\t\tvar dateDiff = date - parseInt(dataValue);\n\t\t\t//var daysMiliseconds = 86400000;\n\t\t\tvar days = (dateDiff / (60 * 60 * 24 * 1000)) % 365;\n\t\t\t//console.log(\"Th data value is \" + dataValue + \" datedif is \" + dateDiff + \" dys is \" + days + \" if statement \" + days <= slideData || days > 365);\n\t\t\tif (days <= slideData || days > 365) {\n\t\t\t\ttransactionDataCollection.data[packet][0] = formatTime(transactionDataCollection.data[packet][0]); //formating date\n\t\t\t\ttransactionDataCollection.data[packet][11] = parseFloat(transactionDataCollection.data[packet][11]).toFixed(2); // rebait range\n\t\t\t\ttransactionDataCollection.data[packet][12] = parseFloat(transactionDataCollection.data[packet][12]).toFixed(2); // taken gram\n\t\t\t\t\n\t\t\t\tif(transactionDataCollection.data[packet][17] in locationsData.data) {\n\t\t\t\t\ttransactionDataCollection.data[packet][17] = locationsData.data[transactionDataCollection.data[packet][17]][2];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(transactionDataCollection.data[packet][18] in sitesData.data) {\n\t\t\t\t\ttransactionDataCollection.data[packet][18] = sitesData.data[transactionDataCollection.data[packet][18]][1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tdelete transactionDataCollection.data[packet];\n\t\t\t}\n\t\t\t\n\t\t }\n\n\t\tconst data = Object.keys(transactionDataCollection.data).reverse().reduce(\n\t\t\t  (obj, key) => { \n\t\t\t\tobj[key] = transactionDataCollection.data[key]; \n\t\t\t\treturn obj;\n\t\t\t  }, \n\t\t  {}\n\t\t);\n\t\ttransactionDataCollection.data = data;\n\t\t\n\t\ttransactionDataCollection.renameColumn(\"AvgDelta\", \"Average\"); //AvgDelta\n\t\ttransactionDataCollection.renameColumn(\"DateTime\", \"date time\"); //AvgDelta\n\t\ttransactionDataCollection.renameColumn(\"DeviceNumber\", \"device number\");\n\t\ttransactionDataCollection.renameColumn(\"P5Total\", \"P5 Total\");\n\n\t\ttransactionDataCollection.renameColumn(\"RebaitRange\", \"rebait range\");\n\t\ttransactionDataCollection.renameColumn(\"IRLTop\", \"irl top\");\n\t\ttransactionDataCollection.renameColumn(\"IRLBottom\", \"irl bottom\");\n\t\ttransactionDataCollection.renameColumn(\"IRRTop\", \"irr top\");\n\t\ttransactionDataCollection.renameColumn(\"IRRBottom\", \"irr bottom\"); // PrevLC\n\t\ttransactionDataCollection.renameColumn(\"PrevLC\", \"Prev LoadCell\"); // PrevLC\n\t\ttransactionDataCollection.renameColumn(\"LocationId\", \"Location\"); // \n\t\ttransactionDataCollection.renameColumn(\"SiteId\", \"Site\");\n        updateTable(transactionTable, transactionDataCollection); //transactionDataCollection  newTransanction\n    });\n\n}\n\n/*Delay function*/\nfunction delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\n/**\n* Update data in the table\n*/\nfunction updateTable(table, collection) {\n    ClientEvents.publish(\"deleteRows\", \"\");\n    table.receiveValue(collection);\n\n}\n\n//date time,device number,p5 total,irleft,irright,average,mindelta,maxdelta,l1,l2,range,rebait range,takeng,location,site\n/**\n* Format time from milisecond to Date and time format\n*/\nfunction formatTime(utcTime) {\n    var date = new Date(parseInt(utcTime)).toLocaleString('en-GB');\n    var d = date.split(\", \");\n    var d0 = d[0].split(\"/\");\n    d0[2] = Math.abs(d0[2] - 2000);\n    d0 = d0.join(\"/\");\n    return d[1] + \" \" + d0;\n}"},"ev":{}},"transactionTable":{"t":"Table","lX":80,"lY":200,"sX":15.83,"sY":5.94,"s":"Packet 6 Transactions","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 280px","x":"80px","y":"200px"},"ver":"190104c210519","dis":false,"tt":"","a":{"columns":"date time,device number,p5 total,irleft,irright,average,mindelta,maxdelta,l1,l2,range,rebait range,takeng,irl top,irl bottom,irr top,irr bottom,tilt,prev loadcell,location,site","text color":"#000000","row color":"#000000","display header":"true","enable search":"true","title":"Packet 6 Data","colWidths":"0.04743833017077799,0.0480708412397217,0.04743833017077799,0.04743833017077799,0.04743833017077799,0.0480708412397217,0.04743833017077799,0.04680581910183428,0.048703352308665404,0.04743833017077799,0.04743833017077799,0.04743833017077799,0.04743833017077799,0.0480708412397217,0.04680581910183428,0.048703352308665404,0.04680581910183428,0.0480708412397217,0.04743833017077799,0.04743833017077799,0.0480708412397217"},"ev":{"clientEvents":{"inputEvents":{"transTable6":{"channel":"deleteRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Row selected":{"channel":"rowSelected/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Scripting#4":{"t":"Scripting","lX":0,"lY":1155,"sX":1,"sY":1,"s":"Application Settings","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nClientEvents.subscribe(\"editApplicationSettings\", editApplicationSettings);\nClientEvents.subscribe(\"addApplicationSettings\", addApplicationSettings);\n\nconst applicationSettingsTable = Script.getWidget(\"applicationSettingsTable\");\n//deleteApplicationIcon\nClientEvents.subscribe(\"deleteApplicationIcon\", deleteApplicationSettings);\nScript.on('load', function() {\n\tDatabase.readRecords(\"rodent\", \"ApplicationSettings\", function(eventData) {\n\t\tconst applicationSettingsCollection = SensaCollection.load(eventData.value);\n\t\t\n\t\t//id,appname,settings,value\n\t\tapplicationSettingsCollection.renameColumn(\"AppName\", \"App Name\");\n\t\tapplicationSettingsTable.receiveValue(applicationSettingsCollection);\n\t});\n});\n\nfunction editApplicationSettings(eventData) {\n    Script.setState(\"applicationSettingsData\", eventData.value);\n\t//console.log(\"In the app \" + JSON.stringify(eventData.value, null, 4));\n    Script.setState(\"modifyType\", \"edit\");\n    Client.jumpToScreen(\"Edit Application Settings\");\n}\n\n function addApplicationSettings() {\n     Script.setState(\"modifyType\", \"add\");\n     Client.jumpToScreen(\"Edit Application Settings\");\n }\n\nfunction deleteApplicationSettings() {\n\tlet formData = Script.getFormByKey(\"applicationSetting\");\n\tvar ids = formData.applicationSetting.getColumn(\"id\");\n\t\n\tfor (var i = 0; i < ids.length; i++) {\n\t\t applicationSettingsTable.deleteRows(ids[i]);\n\t\t Database.deleteRecord(\"rodent\", \"ApplicationSettings\", \"Id\", ids[i]);\n\t}\n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete settings\", \"Delete Application Settings\", option).then((eventData) => {\n\t\t\n\t\t//console.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\t applicationSettingsTable.deleteRows(ids[i]);\n\t\t\t Database.deleteRecord(\"rodent\", \"ApplicationSettings\", \"Id\", ids[i]);\n\t\t}\n\t});\n}"},"ev":{}},"applicationSettingsTable":{"t":"Table","lX":80,"lY":120,"sX":15.83,"sY":6.74,"s":"Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 200px","x":"80px","y":"120px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,app name,settings,value","form id":"applicationSetting","form key":"applicationSetting","selectable":"multi + single","display header":"true","title":"Application Settings","colWidths":"0.15440508628519528,0.2025431425976385,0.2016348773841962,0.3960036330608538"},"ev":{"clientEvents":{"outputEvents":{"Edit Application Settings":{"channel":"editApplicationSettings/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"editApplicationSettings":{"t":"Container","lX":40,"lY":40,"sX":7,"sY":5.5,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"700px","height":"550px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Title"},"ev":{}},"appNameInput":{"t":"Input","lX":80,"lY":100,"sX":6,"sY":1,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"NOVERT","width":"600px","height":"12.56%","x":"80px","y":"100px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"applicationSettings","form key":"AppName","label text":"App Name","color":"grey","required":"true","tab index":"1"},"ev":{}},"Text Area#0":{"t":"Text Area","lX":80,"lY":260,"sX":6,"sY":2.5,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"600px","height":"250px","x":"80px","y":"260px"},"ver":"190104c210519","dis":false,"tt":"","a":{"form id":"applicationSettings","form key":"Value","color":"grey","label text":"Value","tab index":"3"},"ev":{}},"appSettingsNameInput":{"t":"Input","lX":80,"lY":190,"sX":6,"sY":1,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"NOVERT","width":"600px","height":"12.56%","x":"80px","y":"190px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"applicationSettings","form key":"Settings","color":"grey","required":"true","label text":"Settings","tab index":"2"},"ev":{}},"appSettingsEditScript":{"t":"Scripting","lX":955,"lY":50,"sX":1,"sY":1,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nvar userId;\nvar modifyType;\nvar modelTypeId;\nvar applicationSettingsData;\n\nconst editApplicationSettings = Script.getWidget(\"editApplicationSettings\");\n//const cancelSettingsBtn = Script.getWidget(\"cancelSettingsBtn\"); //cancelSettingsBtn\nScript.on('load', function() {\n\t/**\n\tcancelSettingsBtn.subsribe(\"pressed\", ()=> {\n\t\tClient.jumpToScreen(\"Application Settings\");\n\t}); */\n\tmodifyType = Script.getState(\"modifyType\");\n\tif (modifyType == \"add\") {\n        editApplicationSettings.setTitle(\"New Application Settings\");\n    } else if (modifyType == \"edit\") {\n        applicationSettingsData = Script.getState(\"applicationSettingsData\");\n\t\teditApplicationSettings.setTitle(\"Edit Application Settings\");\n\t\tif(applicationSettingsData != null){\n\t\t\tvar applicationSettingsObj = {};\n\t\t\tapplicationSettingsObj.AppName = applicationSettingsData.getColumn(\"app name\");\n\t\t\tapplicationSettingsObj.Settings = applicationSettingsData.getColumn(\"settings\");\n\t\t\tapplicationSettingsObj.Value = applicationSettingsData.getColumn(\"value\");\n\t\t\t//console.log(\"from the app setting \" + JSON.stringify(applicationSettingsObj, null, 4));\n\t\t\tScript.setForm(\"applicationSettings\", applicationSettingsObj);\n\t\t\t//debugger;\n\t\t}\n    }\n});\n\nClientEvents.subscribe(\"finishEdittAppSettings\", function() {\n\tswitch (modifyType) {\n\t\tcase 'edit':\n\t\t\thandleEdit();\n\t\t\tbreak;\n\t\tcase 'add':\n\t\t\thandleCreate();\n\t\t\tbreak;\n\t}\n});\n\nfunction handleEdit() {\n\tvar formObj = Script.getFormByKey(\"applicationSettings\");\n\tif (formObj == undefined) {\n\t\talert(\"Please fill out all required fields\");\n\t\treturn;\n\t}\n\tvar dbReq = {};\n\tlet applicationSettingsData = Script.getState(\"applicationSettingsData\");\n    let modelId = applicationSettingsData.getColumn(\"id\")[0];\n\tformObj.Id = modelId;\n\tdbReq[modelId] = formObj;\n\t//debugger;\n\tDatabase.updateRecord(\"rodent\", \"ApplicationSettings\", dbReq, () => {\n\t\tClient.jumpToScreen(\"Application Settings\");\n    });\n}\n\nfunction handleCreate() {\n\t\n\tDatabase.readLastPrimaryKey(\"rodent\",\"ApplicationSettings\",function(eventData){\n\t\t\n\t\tvar formObj = Script.getFormByKey(\"ApplicationSettings\");\n\t\tif (formObj == undefined) {\n\t\t\talert(\"Please fill out all required fields\");\n\t\t\treturn;\n\t\t}\n\t\tvar dbReq = {};\n\t\tlet id =  parseInt(eventData.value) + 1; ////+applicationSettingsCollection.getColumn(\"Id\")[0] + 1;\n\t\tformObj.Id =`${id}`;\n\t\tdbReq[id] = formObj;\n\t\t//debugger;\n\t\tDatabase.createRecords(\"rodent\", \"ApplicationSettings\", dbReq, () => {\n\t\t\tClient.jumpToScreen(\"Application Settings\");\n\t\t});\n\t\t\n\t\t/*Database.readRecords(\"rodent\", \"ApplicationSettings\", function(eventData) {\n\t\t\tlet applicationSettingsCollection = SensaCollection.load(eventData.value);\n\t\t\n\t\t}); */\n\t});\n\t//console.log(\"the created Id is \" + lastId);\n\t\n}"},"ev":{"serverEvents":{"inputEvents":{"database":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed"}}}}},"appSettingsSubmitButton":{"t":"Button","lX":560,"lY":525,"sX":1,"sY":1.09,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"560px","y":"525px"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"outputEvents":{"Submit":{"channel":"finishEdittAppSettings/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addApplicationSettings":{"t":"Icon","lX":2253,"lY":70,"sX":1,"sY":1,"s":"Application Settings","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 130px","y":"70px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"plus-square"},"ev":{"clientEvents":{"outputEvents":{"Add Application Settings":{"channel":"addApplicationSettings/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"IsPrimaryCheck":{"t":"Input","lX":200,"lY":260,"sX":1.2,"sY":1,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"NOVERT","width":"120px","height":"6.26%","x":"200px","y":"260px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","label text":"Is Primary","checkbox label side":"right","form id":"editUser","form key":"IsPrimary"},"ev":{}},"cancelRoleButton":{"t":"Button","lX":370,"lY":260,"sX":1,"sY":1.09,"s":"Edit User Role","ps":{"enabled":true,"scalingType":"OK","width":"100px","height":"50px","x":"370px","y":"260px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel"},"ev":{}},"Container#0":{"t":"Container","lX":40,"lY":40,"sX":16.63,"sY":7.94,"s":"User Access Role","ps":{"enabled":"true","scalingType":"OK","width":"100% - 80px","height":"100% - 80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"User Access Role","color":"grey"},"ev":{}},"removeUserRole":{"t":"Icon","lX":2193,"lY":80,"sX":1,"sY":1,"s":"User Access Role","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 190px","y":"80px"},"ver":"200628c210519","z":"130","dis":false,"tt":"","a":{"icon file":"trash","outline color":"no outline","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteUserRole/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"addNewUserRole":{"t":"Icon","lX":2253,"lY":50,"sX":1,"sY":1,"s":"User Access Role","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 130px","y":"80px"},"ver":"200628c210519","z":"130","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{}},"userRoleScript":{"t":"Scripting","lX":40,"lY":610,"sX":1,"sY":1,"s":"User Access Role","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nvar roleData = [\n        {\n            \"TableName\": \"Sites\", // Specify the primary table used to construct the join request\n            \"Join\": 1, // Join type 1 - Inner Join, 2 - Outer Join, 3 - Left join, 4 - Right Join.\n            \"Columns\":\n            [\n            \"Id\",\n\t\t\t\"CompanyId\",\n\t\t\t\"RoleName\",\n\t\t\t\"CreatedOn\",\n\t\t\t\"CreatedBy\"\n            \n            ],\n\n }];\nvar userTable = Script.getWidget(\"userTable\");\nconst tableColumns = [\"Role Name\", \"Created On\", \"Created By\"];\nconst addUserBtn = Script.getWidget(\"addNewUserRole\");\n\nvar companyIds;\nvar companyNames;\nvar senseCollectData;\n\nClientEvents.subscribe(\"editCompanyRole\", editCompany); //deleteUserRole\nClientEvents.subscribe(\"deleteUserRole\", deleteCompany);\nScript.on('load', function() {\n\n\taddUserBtn.subscribe(\"pressed\", ()=>{\n\t\tScript.setState(\"modifierType\", \"add\");\n\t\tClient.jumpToScreen(\"Edit User Access Role\");\n\t});\n\t\n\tClientEvents.subscribe(\"clickedUser\", function(eventData){\n\t\tvar formData = Script.getFormByKey(\"userRole\");\n\t\tvar ids = formData.userRole.getColumn(\"id\");\n\t\t\n\t});\n\t\n\n\tDatabase.readRecords(\"rodent\", \"UserAccessRole\", function(eventData){\n\t\tvar companyData = SensaCollection.load(eventData.value);\n\t\t\n\t\tcompanyData.renameColumn(\"RoleName\", \"Role Name\");\n\t\tcompanyData.renameColumn(\"CreatedOn\", \"Created On\");\n\t\tcompanyData.renameColumn(\"CreatedBy\", \"Created By\");\n\t\tClientEvents.publish(\"deleteRows\", \"\");\n\t\tuserTable.receiveValue(companyData); //senseCollectData\n\t\t//compDropdown.receiveList(companyNames);\n\t});\n});\n\nfunction editCompany(eventData) {\n    Script.setState(\"userRoleData\", eventData.value);\n    Script.setState(\"modifierType\", \"edit\");\n    Client.jumpToScreen(\"Edit User Access Role\");\n}\n\n\nfunction deleteCompany() {\n    var formData = Script.getFormByKey(\"userRole\");\n    var ids = formData.userRole.getColumn(\"id\");\n    \n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete access role\", \"Delete User Access Roles\", option).then((eventData) => {\n\t\t\n\t\t//console.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\t\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\tuserTable.deleteRows(ids[i]);\n\t\t\t//let req = {};\n\t\t\t//req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t\tDatabase.deleteRecord(\"rodent\", \"UserAccessRole\", \"Id\", ids[i]);\n\t\t}\n\t});\n}"},"ev":{}},"companyDropDown":{"t":"Dropdown","lX":95,"lY":95,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"4.19%","x":"95px","y":"95px"},"ver":"190104c210519","dis":false,"tt":"","a":{"form id":"addUser","form key":"CompanyId","label text":"Company Name","bold":"true","default options":"","tab index":"2"},"ev":{}},"feature01":{"t":"Input","lX":100,"lY":250,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"5.39%","x":"100px","y":"250px"},"ver":"270520c210519","z":"140","dis":false,"tt":"","a":{"type":"checkbox","form id":"addUser","form key":"Feature01","label text":"Heirarchy Maintenance","color":"grey","tab index":"2"},"ev":{}},"saveUserRoleButton":{"t":"Button","lX":230,"lY":550,"sX":1,"sY":1.09,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"230px","y":"600px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Save","color":"orange strong","text color":"white","tab index":"7"},"ev":{}},"cancelUserRoleButton":{"t":"Button","lX":100,"lY":600,"sX":1,"sY":1.09,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"100px","y":"600px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel","tab index":"6"},"ev":{}},"userRoleAccessScript":{"t":"Scripting","lX":430,"lY":590,"sX":1,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"false","scalingType":"OK","width":"4.2%","height":"11.12%","x":"9.86%","y":"71.86%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nconst compDropdown = Script.getWidget(\"companyDropDown\"); \nconst submitComp = Script.getWidget(\"saveUserRoleButton\");\nconst cancel = Script.getWidget(\"cancelUserRoleButton\");\nconst userRoleEditContainer = Script.getWidget(\"userRoleEditContainer\"); \nconst roleNameInput = Script.getWidget(\"roleNameInput\");\n\nconst feature01 = Script.getWidget(\"feature01\");\nconst feature02 = Script.getWidget(\"feature02\");\nconst feature03 = Script.getWidget(\"feature03\");\nconst feature04 = Script.getWidget(\"feature04\");\nconst feature05 = Script.getWidget(\"feature05\");\n//feature06\nconst feature06 = Script.getWidget(\"feature06\");\nconst features = [feature01, feature02,feature03, feature04, feature05, feature06];\n\nvar CompanyIds;\nvar companyNames;\nvar modifier;\nvar userData;\nvar id;\nvar companyId;\nvar roleName;\nScript.on('load', function() {\n\n\tScript.setState(\"Caller\", \"User Access Role\");\n\tmodifier = Script.getState(\"modifierType\");\n\tuserData = Script.getState(\"userRoleData\");\n\t\n\thandleModifier();\n\tcancel.subscribe(\"pressed\", (eventData) => {\n\t\tClient.jumpToScreen(\"User Access Role\");\n\t\n\t});\n\t\n\tsubmitComp.subscribe(\"pressed\", (eventData) => {\n\t\tconsole.log(\"Button pressed\");\n\t\tvar dataType = 1;\n\t\tvar formData = Script.getFormByKey(\"addUser\");\n\t\t\n\t\n\t\tif(formData === undefined){\n\t\t\talert(\"Please fill out all required fields\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar dbData = {};\n\t\t\n\t\tvar status = 1;\n\t\tvar companyName = formData.CompanyId;\n\t\tvar compIndex = companyNames.indexOf(companyName);\n\t\tvar today = new Date();\n\t\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);//new Date().getTime();\n\t\t\n\t\tif(modifier === \"add\"){\n\t\t   Database.readLastPrimaryKey(\"rodent\", \"UserAccessRole\", function(eventData){\n\t\t\t//console.log(\"Last key is \" + eventData.value);\n\t\t\tvar lastId = isNaN(eventData.value) ? 1 : parseInt(eventData.value) + 1;\n\t\t\tvar dbData = {};\n\t\t\t\n\t\t\t\n\t\t\tdbData[lastId] = formData;\n\t\t\t//Database.createRecords(\"rodent\", \"UserAccessRole\", dbData, ()=>{});\n\t\t\tconsole.log(\"data to be stored \" + JSON.stringify(dbData, null, 4));\n\t\t\t\n\t\t\t\n\t\t\tDatabase.saveRecordParam(\"rodent\", \"UserAccessRole\",{ //UserAccessRole\n\t\t\t\t\n\t\t\t\tlastId: {\n\t\t\t\t\t\"Id\": lastId,\n\t\t\t\t\t\"CompanyId\": CompanyIds[compIndex],\n\t\t\t\t\t\"RoleName\": formData.RoleName,\n\t\t\t\t\t\"Status\": 1,\n\t\t\t\t\t\"CreatedBy\": Client.getUser(),\n\t\t\t\t\t\"CreatedOn\": today,\n                    \"Feature01\": +formData.Feature01,\n\t\t\t\t\t\"Feature02\": +formData.Feature02,\n\t\t\t\t\t\"Feature03\": +formData.Feature03,\n\t\t\t\t\t\"Feature04\": +formData.Feature04,\n\t\t\t\t\t\"Feature05\": +formData.Feature05,\n\t\t\t\t\t\"Feature06\": +formData.Feature06,\n\t\t\t\t\t\"ModifiedBy\": Client.getUser(),\n\t\t\t\t\t\"ModifiedOn\": today\n\t\t\t\t}\n\t\t\t\t}, function(dataValue) {\n\t\t\t\t//console.log(\"Data value is : \" + JSON.stringify(dataValue, null, 4));\n\t\t\t\t\t//Client.jumpToScreen(\"User Access Role\");\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t   Client.jumpToScreen(\"User Access Role\");\n\t\t\t});\n\t\t} else if (modifier === \"edit\"){\n\t\t\t\n\t\t\t//var formData = Script.getFormByKey(\"addUser\");\n\t\t\tif (formData == undefined) {\n\t\t\t\talert(\"Please fill out all required fields\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dbReq = {};\n\t\t\tformData.Id = id;\n\t\t\t//formObj.Status = +formObj.Status;\n\t\t\t//formData.RoleName = roleName;\n\t\t\tformData.CompanyId = companyId;\n\t\t\tformData.Feature01 = +formData.Feature01;\n\t\t\tformData.Feature02 = +formData.Feature02;\n\t\t\tformData.Feature03 = +formData.Feature03;\n\t\t\tformData.Feature04 = +formData.Feature04;\n\t\t\tformData.Feature05 = +formData.Feature05;\n\t\t\tformData.Feature06 = +formData.Feature06;\n\t\t\tformData.ModifiedOn = today;\n\t\t\tformData.ModifiedBy = Client.getUser();\n\t\t\tdbReq[id] = formData;\n\n\t\t\tDatabase.updateRecord(\"rodent\", \"UserAccessRole\", dbReq, () => {\n\t\t\t\tClient.jumpToScreen(\"User Access Role\");\n\t\t\t});\n\t\t}\n\t\t \n\t});\n\t\n\tDatabase.readRecords(\"rodent\", \"Companies\", function(eventData){\n\t\tvar companyData = SensaCollection.load(eventData.value);\n\t\t\n\t\t//console.log(\"company data \" + JSON.stringify(companyData, null, 4));\n\t\tcompanyNames = companyData.getColumn(\"Name\");\n\t\t\n\t\tlet compLoc = companyData.getColumn(\"Address\");\n\t\tCompanyIds = companyData.getColumn(\"Id\");\n\t\t\n\t\t//console.log(\"name data \" + JSON.stringify(companyNames, null, 4));\n\t\tif(modifier === \"edit\"){\n\t\t   for(let i = 0; i < CompanyIds.length; i++){\n\t\t\t\tif(CompanyIds[i] === companyId) {\n\t\t\t\t\tcompDropdown.receiveValue(companyNames[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcompDropdown.receiveList(companyNames);\n\t\t}\n\t\t\n\t});\n});\n\nfunction handleModifier(){\n\n\tswitch(modifier) {\n\t\n\t\tcase \"add\":\n\t\t\t//handle add\n\t\t\tconsole.log(\"it is add\");\n\t\t\taddUserRole();\n\t\t\tbreak;\n\t\tcase \"edit\":\n\t\t\t//handle edit \n\t\t\tconsole.log(\"it is edit\");\n\t\t\teditForm();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log(\"go back\");\n\t\t\tClient.jumpToScreen(\"User Access Role\");\n\t\t\tbreak;\n\t}\n}\n\nfunction editForm(){\n\t userRoleEditContainer.setTitle(\"Edit User Role\");\n\t\n\tvar data = Object.values(userData.data)[0];\n\tid = data[0];\n\tcompanyId = data[1];\n\troleName = data[2];\n\troleNameInput.receiveValue(roleName);\n\t\n\tfor(let i = 0; i < features.length; i++) {\n\t\tfeatures[i].receiveValue(data[i + 3]);\n\t}\n\t//var name;\n\n    return;\n\t\n}\n\nfunction addUserRole(){\n\tuserRoleEditContainer.setTitle(\"New User Role\");\n    return;\n}"},"ev":{}},"userTable":{"t":"Table","lX":80,"lY":130,"sX":15.83,"sY":6.64,"s":"User Access Role","ps":{"enabled":"true","scalingType":"OK","width":"100% - 160px","height":"100% - 210px","x":"80px","y":"130px"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"role name,created on,created by","selectable":"multi + single","enable search":"true","form id":"userRole","form key":"userRole","colWidths":"0.32462854570013505,0.32733003151733453,0.3255290409725349"},"ev":{"clientEvents":{"inputEvents":{"deleteUserRows":{"channel":"deleteRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"clickerUser":{"channel":"clickedUser/receive value","event":"pressed","trigger":"pressed","important":"false"},"editCompanyRole":{"channel":"editCompanyRole/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"userRoleEditContainer":{"t":"Container","lX":40,"lY":40,"sX":3.7,"sY":6.5,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"OK","width":"370px","height":"650px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Title"},"ev":{}},"roleNameInput":{"t":"Input","lX":95,"lY":170,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"5.39%","x":"95px","y":"170px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"addUser","form key":"RoleName","required":"true","label text":"Role Name","tab index":"1","color":"grey"},"ev":{}},"cancelProduct":{"t":"Button","lX":200,"lY":380,"sX":1,"sY":1.09,"s":"Edit Product","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"200px","y":"380px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel"},"ev":{}},"Container#2":{"t":"Container","lX":40,"lY":40,"sX":14.23,"sY":2.3,"s":"Manage Master Products","ps":{"enabled":"true","scalingType":"OK","width":"100%-80px","height":"100%-80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"color":"grey","title":"Manage Master Products"},"ev":{}},"Container#3":{"t":"Container","lX":40,"lY":40,"sX":23.03,"sY":7.66,"s":"User Roles","ps":{"enabled":"true","scalingType":"OK","width":"100% - 80px","height":"100% - 80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"User Roles","color":"grey"},"ev":{}},"cancelErrorCode":{"t":"Button","lX":370,"lY":620,"sX":1,"sY":1.09,"s":"Edit Error Codes","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"370px","y":"620px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel"},"ev":{}},"Container#4":{"t":"Container","lX":40,"lY":40,"sX":23.03,"sY":6.2,"s":"Error Codes","ps":{"enabled":"true","scalingType":"OK","width":"100%- 80px","height":"100%- 80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Error Codes","color":"grey"},"ev":{}},"Container#5":{"t":"Container","lX":40,"lY":40,"sX":23.03,"sY":7.66,"s":"Manage Companies","ps":{"enabled":"true","scalingType":"OK","width":"100%-80px","height":"100%-80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Manage Companies","color":"grey"},"ev":{}},"canceCompanyBtn":{"t":"Button","lX":370,"lY":240,"sX":1,"sY":1.09,"s":"Edit Company","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"370px","y":"270px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel"},"ev":{}},"Container#6":{"t":"Container","lX":40,"lY":40,"sX":23.03,"sY":6.2,"s":"Manage Model Types","ps":{"enabled":"true","scalingType":"OK","width":"100%-80px","height":"100%-80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Manage Model Type","color":"grey"},"ev":{}},"cancelModelType":{"t":"Button","lX":370,"lY":170,"sX":1,"sY":1.09,"s":"Edit Model Type","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"370px","y":"170px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel"},"ev":{}},"Container#7":{"t":"Container","lX":40,"lY":40,"sX":16.63,"sY":7.94,"s":"Manage Device Models","ps":{"enabled":"true","scalingType":"OK","width":"100%-80px","height":"100%-80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Manage Device Models","color":"grey"},"ev":{}},"cancelModelBtn":{"t":"Button","lX":60,"lY":380,"sX":1,"sY":1.09,"s":"Edit Model","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"150px","y":"380px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel"},"ev":{}},"Container#8":{"t":"Container","lX":40,"lY":40,"sX":16.63,"sY":7.94,"s":"Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"100%-80px","height":"100%-80px","x":"40px","y":"40px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"title":"Application Settings","color":"grey"},"ev":{}},"cancelSettingsBtn":{"t":"Button","lX":410,"lY":525,"sX":1,"sY":1.09,"s":"Edit Application Settings","ps":{"enabled":"true","scalingType":"OK","width":"100px","height":"50px","x":"410px","y":"525px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Cancel","jump to screen":"Application Settings"},"ev":{}},"feature02":{"t":"Input","lX":100,"lY":310,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"5.39%","x":"100px","y":"310px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","form id":"addUser","form key":"Feature02","label text":"Device Provisioning","color":"grey","tab index":"3"},"ev":{}},"addModelIcon":{"t":"Icon","lX":208,"lY":870,"sX":1,"sY":1,"s":"Manage Device Models","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"6.16%","x":"100% - 130px","y":"50px"},"ver":"200628c210519","dis":false,"tt":"","a":{"icon file":"plus-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"Add Model":{"channel":"addModel/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"deleteApplicationIcon":{"t":"Icon","lX":2193,"lY":70,"sX":1,"sY":1,"s":"Application Settings","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"50px","height":"3.95%","x":"100% - 190px","y":"70px"},"ver":"200628c210519","dis":false,"tt":"","a":{"outline color":"no outline","icon file":"trash","hover":"red"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"deleteApplicationIcon/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"managerMasterProductScript":{"t":"Scripting","lX":55,"lY":934,"sX":1,"sY":1,"s":"Manage Master Products","ps":{"enabled":"false","scalingType":"OK","width":"4.2%","height":"14.29%","x":"2.31%","y":"126.43%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar productCollection;\n// Default\nvar status = \"Show Active\";\n\nconst productsTable = Script.getWidget(\"masterProductsTable\");\n\nScript.on('load', function() {\n\t\n\tDatabase.readRecords(\"rodent\", \"Products\", function(eventData) {\n\t\tproductCollection = SensaCollection.load(eventData.value);\n\t\tconsole.log(\" data in the big comp \" + JSON.stringify(productCollection, null, 4));\n\t\tupdateTable();\n\t});\n});\n\nClientEvents.subscribe(\"productSelected\", editProduct);\nClientEvents.subscribe(\"removeMasterProducts\", removeProductFromCompany);\nClientEvents.subscribe(\"addNewMasterProduct\", createNewProduct);\nClientEvents.subscribe(\"changeActive\", (eventData) => {\n\tstatus = eventData.value; \n\tDatabase.readRecords(\"rodent\", \"Products\", function(eventData) {\n\t\tproductCollection = SensaCollection.load(eventData.value);\n\t\tupdateTable();\n\t});\n\tif (status !== \"Show Active\") {\n\t\t// Do not attempt to delete inactive elements\n\t\tScript.hideWidget(\"deleteMasterProdIcon\");\n\t\t//Script.disableWidget(\"addMasterProdIcon\");\n\t} else {\n\t\t// Re-enable widgets if disabled before\n\t\tScript.showWidget(\"deleteMasterProdIcon\");\n\t\t//Script.enableWidget(\"addMasterProdIcon\");\n\t}\n});\n\nfunction editProduct(eventData) {\n\tScript.setState(\"productInfo\", eventData.value);\n\tScript.setState(\"modifyType\", \"edit_master\");\n\tScript.setState(\"masterProduct\", \"master\");\n\tClient.jumpToScreen(\"Edit Product\");\n}\n\nfunction updateTable() {\n\t//status = Script.getFormByKey(\"master\").activeSelection == \"Show Active\" ? '1' : '0';\n\tlet filteredComps = productCollection.query((record, pk) => {\n\t\tif (record['Status'] == (status == \"Show Active\")){\n\t\t\treturn true;\n\t\t}\n\t});\n\t\n\tClientEvents.publish(\"compDelRows\", \"\");\n\tvar tableComps = filteredComps.filter([\"Id\", \"Name\", \"Expiry\", \"WeightPerBlock\"]);\n\ttableComps.setColumns([\"Id\", \"Name\", \"Expiry\", \"Weight Per Block\"]);\n\tproductsTable.receiveValue(tableComps);\n}\n\nfunction createNewProduct(eventData) {\n\tScript.setState(\"modifyType\", \"add_master\");\n\tScript.setState(\"masterProduct\", \"master\");\n\tClient.jumpToScreen(\"Edit Product\");\n}\n\nfunction removeProductFromCompany() {\n\n\tvar formData =  Script.getFormByKey(\"master\");\n\tvar ids = formData.products.getColumn(\"id\");\n\t\n\tif(ids.length === 0) return;\n\t\n\tvar option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\tClient.confirm(\"Do you want to delete Company Records?\", \"Delete Records\", option).then((eventData) => {\n\t\t\n\t\t//console.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\tproductsTable.deleteRows(ids[i]);\n\t\t\t//let req = {};\n\t\t\t//req[{\"Id\": ids[i], \"Status\": \"0\"}] = {\"Id\": ids[i], \"Status\": \"0\"};\n\t\t\t//Database.updateRecord(\"rodent\", \"Products\", req);\n\t\t\tDatabase.deleteRecord(\"rodent\", \"Products\", \"Id\", ids[i]);\n\t\t}\n\t});\n\t//var selectedOption = await promise;\n\t//console.log(\"Ids are \" + ids);\n\t//console.log(\"Promise is \" + JSON.stringify(promise, null, 4));\n\t\n\t\n}"},"ev":{}},"manageCompanyStatus":{"t":"Dropdown","lX":1983,"lY":84,"sX":3,"sY":1,"s":"Manage Companies","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"5.51%","x":"100% - 385px","y":"84px"},"ver":"190104c210519","z":"140","dis":false,"tt":"","a":{"default options":"Show Active,Show Inactive","default value":"Show Active"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"changeActiveCompany/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"errorCodeStatus":{"t":"Dropdown","lX":842,"lY":113,"sX":3,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"7.57%","x":"50% - 342px","y":"113px"},"ver":"190104c210519","z":"140","dis":false,"tt":"","a":{"default value":"Show Active","default options":"Show Active, Show Inactive"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"changeActiveError/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"manageMasterStatus":{"t":"Dropdown","lX":1983,"lY":105,"sX":3,"sY":1,"s":"Manage Master Products","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"7.57%","x":"100% - 385px","y":"105px"},"ver":"190104c210519","z":"130","dis":false,"tt":"","a":{"default options":"Show Active, Show Inactive","default value":"Show Active"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"changeActive/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"errorCodeStatusFile":{"t":"Dropdown","lX":1993,"lY":115,"sX":3,"sY":1,"s":"Error Codes","ps":{"enabled":"true","scalingType":"NOVERT","width":"300px","height":"7.57%","x":"100% - 375px","y":"113px"},"ver":"190104c210519","dis":false,"tt":"","a":{"default value":"Show Active","default options":"Show Active, Show Inactive"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"changeActiveFiles/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Scripting#8df":{"t":"Scripting","lX":670,"lY":625,"sX":1,"sY":1,"s":"Edit Product","ps":{"enabled":"false","scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar prodId;\nvar modifyType;\nvar masterProduct;\nconst prodFormContainer = Script.getWidget(\"productFormContainer\");\nconst prodSubmitButton = Script.getWidget(\"prodSubmitButton\");\nconst cancelProduct = Script.getWidget(\"cancelProduct\");\nScript.on('load', function() {\n\t\n\tmasterProduct = Script.getState(\"masterProduct\"); \n\t\n\tcancelProduct.subscribe(\"pressed\", () => {\n\t\tjumpScreen();\n\t\t//Client.jumpToScreen(\"Manage Products\");\n\t});\n\tmodifyType = Script.getState(\"modifyType\");\n\t\n\tif (!modifyType) {\n\t\t\n\t\tjumpScreen();\n\t\t//Client.jumpToScreen(\"Manage Products\");\n\t}\n\tvar productData;\n\t\n\tif (modifyType.startsWith(\"add\")) {\n\t\tprodFormContainer.setTitle(\"New Product\");\n\t\treturn;\n    } else if (modifyType == \"edit\") {\n\t\tproductData = Script.getState(\"compProductInfo\");\n    } else if (modifyType == \"edit_master\") {\n\t\tproductData = Script.getState(\"productInfo\");\t   \n    }\n\tvar prodObj = {}\n\tprodId = productData.getColumn(\"id\")[0];\n\tprodObj.Name = productData.getColumn(\"name\");\n\tprodObj.Status = productData.getColumn(\"status\");\n\tprodObj.WeightPerBlock = productData.getColumn(\"weight per block\");\n\tprodObj.Expiry = productData.getColumn(\"expiry\");\n\n\tScript.setForm(\"editProduct\", prodObj);\n\tprodFormContainer.setTitle(\"Edit Product\");\n});\n\nClientEvents.subscribe(\"finishEditProduct\", function() {\n\tswitch (modifyType) {\n\t\tcase 'edit':\n\t\t\thandleEdit();\n\t\t\tbreak;\n\t\tcase 'edit_master':\n\t\t\thandleEditMaster();\n\t\t\tbreak;\n\t\tcase 'add':\n\t\t\thandleCreate();\n\t\t\tbreak;\n\t\tcase 'add_master':\n\t\t\thandleCreateMaster();\n\t\t\tbreak;\n\t}\n});\n\n\nfunction jumpScreen() {\n\t\n\tif(masterProduct === \"master\"){\n\t   Client.jumpToScreen(\"Manage Master Products\");\n\t} else if(masterProduct === \"product\") {\n\t\tClient.jumpToScreen(\"Manage Products\");\n\t}\n\n}\nfunction handleEdit() {\n\tvar formObj = Script.getFormByKey(\"editProduct\");\n\tif (formObj == undefined) {\n\t\talert(\"Please fill out all required fields\");\n\t\treturn;\n\t}\n\t\t\n\tvar dbReq = {};\n\tvar companyProducts = Script.getState(\"companyProducts\");\n\tformObj.Id = prodId;\n\tformObj.Status = +formObj.Status;\n\tlet today = new Date();\n\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\tformObj.UpdatedOn = today;\n\tformObj.UpdatedBy = Client.getUser();\n\tdbReq[prodId] = formObj;\n\t\t\n\tDatabase.updateRecord(\"rodent\", \"CompanyProducts\", dbReq, () => {\n\t\t//Script.setState(\"currentCompany\", formObj.CompanyId);\n\t\tClient.jumpToScreen(\"Manage Products\");\n\t});\n}\n\nfunction handleEditMaster() {\n\tvar formObj = Script.getFormByKey(\"editProduct\");\n\tif (formObj == undefined) {\n\t\talert(\"Please fill out all required fields\");\n\t\treturn;\n\t}\n\t\t\n\tvar dbReq = {};\n\tformObj.Id = prodId;\n\tformObj.Status = +formObj.Status;\n\tlet today = new Date();\n\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\tformObj.UpdatedOn = today;\n\tformObj.UpdatedBy = Client.getUser();\n\tdbReq[prodId] = formObj;\n\t\t\n\tDatabase.updateRecord(\"rodent\", \"Products\", dbReq, (dataCreated) => {\n\t\tconsole.log(\"Master edit is \" + JSON.stringify(dataCreated, null, 4));\n\t\tClient.jumpToScreen(\"Manage Master Products\");\n\t});\t\n}\n\nfunction handleCreate() {\n\tDatabase.readRecords(\"rodent\", \"CompanyProducts\", function(eventData) {\n\t\tvar compProductCollection = SensaCollection.load(eventData.value);\n\t\tvar formObj = Script.getFormByKey(\"editProduct\");\n\t\t\n\t\tif (formObj == undefined) {\n\t\t\talert(\"Please fill out all required fields\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar dbReq = {};\n\t\tvar compProdCount = Object.keys(compProductCollection.data).length;\n\t\tformObj.Id = `${compProdCount + 1}`;\n\t\tformObj.Status = +formObj.Status;\n\n\t\tlet today = new Date();\n\t\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\t\tformObj.CreatedOn = today;\n\t\tformObj.UpdatedOn = today;\n\t\tformObj.Owner = Client.getUser();\n\t\tformObj.CreatedBy = Client.getUser();\n\t\tformObj.UpdatedBy = Client.getUser();\n\t\tformObj.CompanyId = Script.getState(\"companyId\");\n\t\tdbReq[compProdCount + 1] = formObj;\n\n\t\tDatabase.createRecords(\"rodent\", \"CompanyProducts\", dbReq, () => {\n\t\t\tScript.setState(\"currentCompany\", formObj.CompanyId);\n\t\t\tClient.jumpToScreen(\"Manage Products\");\n\t\t});\n\t});\n}\n\nfunction handleCreateMaster() {\n\tDatabase.readRecords(\"rodent\", \"Products\", function(eventData) {\n\t\tvar productCollection = SensaCollection.load(eventData.value);\n\t\tvar formObj = Script.getFormByKey(\"editProduct\");\n\t\t\n\t\tif (formObj == undefined) {\n\t\t\talert(\"Please fill out all required fields\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar dbReq = {};\n\t\tvar compProdCount = Object.keys(productCollection.data).length;\n\t\t\n\t\tformObj.Id = `${parseInt(compProdCount) + 1}`;\n\t\tformObj.Status = +formObj.Status;\n\n\t\tlet today = new Date();\n\t\ttoday = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n\t\tformObj.CreatedOn = today;\n\t\tformObj.UpdatedOn = today;\n\t\tformObj.Owner = Client.getUser();\n\t\tformObj.CreatedBy = Client.getUser();\n\t\tformObj.UpdatedBy = Client.getUser();\n\t\tdbReq[compProdCount + 1] = formObj;\n\t\t//console.log(\"Master created is \" + JSON.stringify(dbReq, null, 4));\n\t\t/**Database.createRecords(\"rodent\", \"Products\", dbReq, (dataCreated) => {\n\t\t\tconsole.log(\"Master created is \" + JSON.stringify(dataCreated, null, 4));\n\t\t\tClient.jumpToScreen(\"Manage Master Products\");\n\t\t}); */\n\t\tvar id = formObj.Id;\n\t\tDatabase.saveRecordParam(\"Rodent\", \"Products\", {\n\n\t\t\t id: {\n\t\t\t\t \"Id\": formObj.Id,\n\t\t\t\t \"Name\": formObj.Name, //new Date().getTime(),\n\t\t\t\t \"Expiry\": formObj.Expiry,//,deviceNum,\n\t\t\t\t \"WeightPerBlock\": formObj.WeightPerBlock,\n\t\t\t\t \"Status\": formObj.Status,\n\t\t\t\t \"CreatedOn\": today,\n\t\t\t\t \"UpdatedOn\" : today,\n\t\t\t\t \"Owner\": Client.getUser(),\n\t\t\t\t \"CreatedBy\": Client.getUser(),\n\t\t\t\t \"UpdatedBy\": Client.getUser()\n\t\t\t\t\n\t\t\t }\n\n\t\t }, function (data) {\n\t\t\t //console.log(\"inisde save: \" + selected.Id.toString() + \" data is \" + JSON.stringify(data, null, 4));\n\t\t\tClient.jumpToScreen(\"Manage Master Products\");\n\t\t});\n\t\t\n\t\t\n\t});\n\t\n\n}"},"ev":{}},"editManageCompanyScript":{"t":"Scripting","lX":50,"lY":435,"sX":1,"sY":1,"s":"Edit Company","ps":{"enabled":"false","scalingType":"OK","width":"9.07%","height":"8.26%","x":"4.53%","y":"35.92%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar companyId;\nvar modifyType;\nconst companyContainer = Script.getWidget(\"companyContainer\");\nconst companySubmitButton = Script.getWidget(\"companySubmitButton\");\nconst canceCompanyBtn = Script.getWidget(\"canceCompanyBtn\");\nScript.on('load', function() {\n\t\n\tcanceCompanyBtn.subscribe(\"pressed\", ()=> {\n\t\t Client.jumpToScreen(\"Manage Companies\");\n\t});\n    modifyType = Script.getState(\"modifyType\");\n    var companyData;\n\n    if (modifyType == \"add\") {\n        companyContainer.setTitle(\"New Company\");\n        return;\n    } else if (modifyType == \"edit\") {\n        companyData = Script.getState(\"companyData\");\n    }\n\n    var companyObj = {}\n    companyId = companyData.getColumn(\"id\")[0];\n    companyObj.Name = companyData.getColumn(\"name\");\n    companyObj.Address = companyData.getColumn(\"address\");\n    companyObj.Status = companyData.getColumn(\"status\");\n\n    Script.setForm(\"companyform\", companyObj);\n    companyContainer.setTitle(\"Edit Company\");\n});\n\nClientEvents.subscribe(\"finishSubmitCompany\", function() {\n    switch (modifyType) {\n        case 'edit':\n            handleEdit();\n            break;\n        case 'add':\n            handleCreate();\n            break;\n    }\n});\n\nfunction handleEdit() {\n    var formObj = Script.getFormByKey(\"companyform\");\n    if (formObj == undefined) {\n        alert(\"Please fill out all required fields\");\n        return;\n    }\n        \n    var dbReq = {};\n    formObj.Id = companyId;\n    formObj.Status = +formObj.Status;\n    let today = new Date();\n    today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n    formObj.UpdatedOn = today;\n    formObj.UpdatedBy = Client.getUser();\n    dbReq[companyId] = formObj;\n        \n    Database.updateRecord(\"rodent\", \"Companies\", dbReq, () => {\n        Client.jumpToScreen(\"Manage Companies\");\n    });\n}\n\nfunction handleCreate() {\n\t\n\t\n\tDatabase.readLastPrimaryKey(\"rodent\",\"Companies\",function(eventData){\n\t\n\t\n\t//var lastId = eventData.value;\n\t\t //var primaryKey = isNaN(lastId) ? 1 : parseInt(lastId) + 1;\n\t\t //var primaryKey = null;\n\t\t var devId;\n\t\t if(eventData.value === null || eventData.value === undefined || isNaN(eventData.value)) {\n\t\t\t devId = 1;\n\t\t } else {\n\t\t\t devId = parseInt(eventData.value) + 1;\n\t\t }\n\n\t\t//var companyCollection = SensaCollection.load(eventData.value);\n        var formObj = Script.getFormByKey(\"companyform\");\n        \n        if (formObj == undefined) {\n            alert(\"Please fill out all required fields\");\n            return;\n        }\n\n\t\tconsole.log(\"New devId is \" + devId);\n        var dbReq = {};\n        //var companyCount = Object.keys(companyCollection.data).length;\n        formObj.Id = devId;\n        formObj.Status = +formObj.Status;\n\n        let today = new Date();\n        today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n        formObj.CreatedOn = today;\n        formObj.UpdatedOn = today;\n        formObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n        dbReq[devId] = formObj;\n\n\t\t/*\n       Database.createRecords(\"rodent\", \"Companies\", dbReq, () => {\n            \n            Client.jumpToScreen(\"Manage Companies\");\n        }); */\n\t\t\n\t\t\n\t\tvar id = formObj.Id;\n\t\tDatabase.saveRecordParam(\"Rodent\", \"Companies\", {\n\n\t\t\t devId: {\n\t\t\t\t \"Id\": devId,\n\t\t\t\t \"Name\": formObj.Name, //new Date().getTime(),\n\t\t\t\t \"Address\": formObj.Address,//,deviceNum,\n\t\t\t\t \"Status\": formObj.Status,\n\t\t\t\t \"CreatedOn\": today,\n\t\t\t\t \"UpdatedOn\" : today,\n\t\t\t\t \"Owner\": Client.getUser(),\n\t\t\t\t \"CreatedBy\": Client.getUser(),\n\t\t\t\t \"UpdatedBy\": Client.getUser()\n\t\t\t\t\n\t\t\t }\n\n\t\t }, function (data) {\n\t\t\t //console.log(\"inisde save: \" + selected.Id.toString() + \" data is \" + JSON.stringify(data, null, 4));\n\t\t\t Client.jumpToScreen(\"Manage Companies\");\n\t\t}); \n\n\t\n      /*   \n    Database.readRecords(\"rodent\", \"Companies\", function(eventData) {\n        var companyCollection = SensaCollection.load(eventData.value);\n        var formObj = Script.getFormByKey(\"companyform\");\n        \n        if (formObj == undefined) {\n            alert(\"Please fill out all required fields\");\n            return;\n        }\n\n        var dbReq = {};\n        var companyCount = Object.keys(companyCollection.data).length;\n        formObj.Id = `${companyCount + 1}`;\n        formObj.Status = +formObj.Status;\n\n        let today = new Date();\n        today = Utils.formatDate(today, \"dd/MM/yyyy HH:mm\", false);\n        formObj.CreatedOn = today;\n        formObj.UpdatedOn = today;\n        formObj.CreatedBy = Client.getUser();\n        formObj.UpdatedBy = Client.getUser();\n        dbReq[companyCount + 1] = formObj;\n\n       /** Database.createRecords(\"rodent\", \"Companies\", dbReq, () => {\n            \n            Client.jumpToScreen(\"Manage Companies\");\n        });\n\t\t\n\t\tvar id = formObj.Id;\n\t\tDatabase.saveRecordParam(\"Rodent\", \"Companies\", {\n\n\t\t\t id: {\n\t\t\t\t \"Id\": formObj.Id,\n\t\t\t\t \"Name\": formObj.Name, //new Date().getTime(),\n\t\t\t\t \"Address\": formObj.Address,//,deviceNum,\n\t\t\t\t \"Status\": formObj.Status,\n\t\t\t\t \"CreatedOn\": today,\n\t\t\t\t \"UpdatedOn\" : today,\n\t\t\t\t \"Owner\": Client.getUser(),\n\t\t\t\t \"CreatedBy\": Client.getUser(),\n\t\t\t\t \"UpdatedBy\": Client.getUser()\n\t\t\t\t\n\t\t\t }\n\n\t\t }, function (data) {\n\t\t\t //console.log(\"inisde save: \" + selected.Id.toString() + \" data is \" + JSON.stringify(data, null, 4));\n\t\t\t Client.jumpToScreen(\"Manage Companies\");\n\t\t});\n    }); */\n\t});\n}"},"ev":{}},"feature05":{"t":"Input","lX":100,"lY":490,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"6.47%","x":"100px","y":"490px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","label text":"Clear Errors","form id":"addUser","form key":"Feature05"},"ev":{}},"userRolesScripts":{"t":"Scripting","lX":1550,"lY":495,"sX":1,"sY":1,"s":"User Roles","ps":{"enabled":"true","scalingType":"OK","width":"9.07%","height":"8.26%","x":"77.06%","y":"4.95%"},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n var userRolesCollection;\n var currentCompany;\n \n const userRolesTable = Script.getWidget(\"userRolesTable\");\n const compDropdown = Script.getWidget(\"usersCompanyDropdown\");\n \n Script.on('load', function() {\n     Database.readRecords(\"rodent\", \"Companies\", function(eventData) {\n         let companyCollection = SensaCollection.load(eventData.value);\n  \n        console.log(\"Companies are \" + JSON.stringify(companyCollection, null, 4));\n          Database.readRecords(\"rodent\", \"UserRoles\", function(eventData) {\n              userRolesCollection = SensaCollection.load(eventData.value);\n              let filteredUsers = userRolesCollection.query((record, pk) => {\n                  if (record['User'] == Client.getUser()) {\n                      return true;\n                  }\n              });\n              var userCompanies = filteredUsers.getColumn(\"CompanyId\");\n\n              //var filteredCompanies = userCompanies;\n  \n              let filteredCompanies = companyCollection.query((record, pk) => {\n                  //if (userCompanies.includes(pk)) {\n                      return true;\n                  //}\n\t\t\t  });\n  \n              let compNames = filteredCompanies.getColumn(\"Name\");\n              let compLoc = filteredCompanies.getColumn(\"Address\");\n              let compIds = filteredCompanies.getColumn(\"Id\");\n  \n              currentCompany = Script.getState(\"currentCompany\");\n              if (currentCompany == null) {\n                  currentCompany = compIds[0];\n              }\n  \n              let compObj = {};\n              compIds.map((comp, idx) => {\n                  compObj[comp] = compNames[idx] + \", \" + compLoc[idx];\n              });\n  \n              Object.keys(compObj).forEach((comp, idx) => {\n                  filteredCompanies.set({\"Id\": comp, \"Name\": compObj[comp]});\n              });\n  \n              filteredCompanies.renameColumn(\"Name\", \"text\");\n              filteredCompanies.renameColumn(\"Id\", \"value\");\n  \n              compDropdown.receiveTextValues(filteredCompanies);\n              compDropdown.receiveValue(compObj[currentCompany]);\n             \n              updateTable();\n          });\n     });\n });\n \n ClientEvents.subscribe(\"usrCcompSelected\", changeCompany);\n ClientEvents.subscribe(\"userEdit\", editUser);\n ClientEvents.subscribe(\"newUser\", createNewUser);\n ClientEvents.subscribe(\"deleteUsers\", deleteUsers);\n \n async function changeCompany(selected) {\n      currentCompany = selected.value;\n\n\t Database.readRecords(\"rodent\", \"UserRoles\", function(eventData) {\n          userRolesCollection = SensaCollection.load(eventData.value);\n          updateTable();\n      });\n }\n         \n function updateTable() {\n      let filteredUsers = userRolesCollection.query((record, pk) => {\n          if ((record['CompanyId'] == currentCompany) &&\n              (record['Status'] == '1')){\n              return true;\n          }\n      });\n\t \n\t var tableCollection = filteredUsers.filter([\"Id\", \"User\", \"UpdatedOn\", \"UpdatedBy\", \"IsAdmin\", \"IsPrimary\"]);\n\t tableCollection.setColumns([\"Id\", \"User\", \"Updated On\", \"Updated By\", \"Is Admin\", \"Is Primary\"]);\n  \n      ClientEvents.publish(\"usrDelRows\", \"\");\n      userRolesTable.receiveValue(tableCollection);\n }\n \n function editUser(eventData) {\n     Script.setState(\"userRoleInfo\", eventData.value);\n\t //console.log(\"User event data \" + JSON.stringify(eventData.value, null, 4));\n     Script.setState(\"companyId\", currentCompany);\n\t \n\t //console.log(\"User company \" + currentCompany);\n     Script.setState(\"modifyType\", \"edit\");\n     Client.jumpToScreen(\"Edit User Role\");\n }\n \n function createNewUser() {\n     Script.setState(\"companyId\", currentCompany);\n     Script.setState(\"modifyType\", \"add\");\n     Client.jumpToScreen(\"Edit User Role\");\n }\n \n function deleteUsers() {\n     let formData = Script.getFormByKey(\"roles\");\n     var ids = formData.users.getColumn(\"id\");\n\t \n\t if(ids.length === 0) return;\n\t var option = {\"confirmText\": \"Confirm\", \"cancelText\": \"Cancel\"};\n\t Client.confirm(\"Do you want to delete user role?\", \"Delete User Roles\", option).then((eventData) => {\n\t\t\n\t\t//console.log(\"Return data is  is \" + JSON.stringify(eventData, null, 4));\n\t\t\n\t\tif(!eventData) return;\n\t\t// your code here\n\t\tfor (var i = 0; i < ids.length; i++) {\n          userRolesTable.deleteRows(ids[i]);\n          Database.deleteRecord(\"rodent\", \"UserRoles\", \"Id\", ids[i]);\n       }\n\t });\n     \n }","file name":"../../js/settings/manage user roles/manageUserRoles.js"},"ev":{}},"feature03":{"t":"Input","lX":100,"lY":370,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"6.47%","x":"100px","y":"370px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","form id":"addUser","form key":"Feature03","label text":"Create Site Events","color":"grey","tab index":"4"},"ev":{}},"feature04":{"t":"Input","lX":100,"lY":430,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"6.47%","x":"100px","y":"430px"},"ver":"270520c210519","z":"130","dis":false,"tt":"","a":{"type":"checkbox","form id":"addUser","form key":"Feature04","label text":"Device Actions","color":"grey","tab index":"5"},"ev":{}},"feature06":{"t":"Input","lX":100,"lY":550,"sX":2.5,"sY":1,"s":"Edit User Access Role","ps":{"enabled":"true","scalingType":"NOVERT","width":"250px","height":"6.47%","x":"100px","y":"550px"},"ver":"270520c210519","dis":false,"tt":"","a":{"type":"checkbox","label text":"Manage Floor Map","form id":"addUser","form key":"Feature06"},"ev":{}},"Input#8":{"t":"Input","lX":80,"lY":140,"sX":2,"sY":1,"s":"Packet 6 Transactions","ps":{"enabled":"true","scalingType":"NOVERT","width":"200px","height":"6.06%","x":"80px","y":"137px"},"ver":"270520c210519","dis":false,"tt":"","a":{"form id":"device-info","form key":"device-number","label text":"Device Number (eg. 999044)"},"ev":{}},"Display Transactions":{"t":"Button","lX":300,"lY":140,"sX":1.8,"sY":1.09,"s":"Packet 6 Transactions","ps":{"enabled":"true","scalingType":"OK","width":"180px","height":"50px","x":"300px","y":"140px"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Display Transactions","color":"orange strong","outline color":"grey","text color":"white"},"ev":{"clientEvents":{"outputEvents":{"displayTransactions":{"channel":"displayTransactions/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"downloadData":{"t":"Button","lX":1425,"lY":140,"sX":1.8,"sY":1.09,"s":"Packet 6 Transactions","ps":{"enabled":"true","scalingType":"OK","width":"180px","height":"50px","x":"100% - 260px","y":"140px"},"ver":"190104c210519","z":"100","dis":false,"tt":"","a":{"button name":"Download Data","color":"orange strong","outline color":"grey","text color":"white"},"ev":{}}},"screens":{"Manage Products":{"index":0,"icon":"shopping_basket","meta":""},"Edit Product":{"index":1,"icon":"edit","meta":""},"Manage Master Products":{"index":2,"icon":"shopping_basket","meta":""},"User Roles":{"index":3,"icon":"verified_user","meta":""},"Edit User Role":{"index":4,"icon":"assignment_ind","meta":""},"Error Codes":{"index":5,"icon":"error","meta":""},"Edit Error Codes":{"index":6,"icon":"edit","meta":""},"Manage Companies":{"index":7,"icon":"business","meta":""},"Edit Company":{"index":8,"icon":"edit","meta":""},"Manage Model Types":{"index":9,"icon":"airplay","meta":""},"Edit Model Type":{"index":10,"icon":"create","meta":""},"Manage Device Models":{"index":11,"icon":"widgets","meta":""},"Edit Model":{"index":12,"icon":"mode_edit","meta":""},"Packet 6 Transactions":{"index":13,"icon":"data_usage","meta":""},"Application Settings":{"index":14,"icon":"widgets","meta":""},"Edit Application Settings":{"index":15,"icon":"create","meta":""},"User Access Role":{"index":16,"icon":"verified_user","meta":""},"Edit User Access Role":{"index":17,"icon":"mode_edit","meta":""}},"meta":""}